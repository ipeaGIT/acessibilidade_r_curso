[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introdução à acessibilidade urbana",
    "section": "",
    "text": "Apresentação\nAcessibilidade é a facilidade com que as pessoas conseguem alcançar lugares e oportunidades como empregos, serviços de saúde e educação, atividades culturais, áreas verdes etc. As condições de acessibilidade em uma cidade ou bairro dependem da eficiência e conectividade da rede de transportes e da proximidade entre pessoas e atividades. O tema da acessibilidade tem recebido cada vez mais atenção de agências de transporte, instituições de financiamento, tomadores de decisão e pesquisadores da área de planejamento urbano e de transportes (Papa et al. 2015; Boisjoly e El-Geneidy 2017). Com isso, existe um crescente número de artigos científicos (Miller 2018; van Wee 2021) e livros (Levine, Grengs, e Merlin 2019; Levinson e King 2020) que trazem rico material para discussão e aprofundamento sobre questões relacionadas à acessibilidade urbana. No entanto, atualmente não existem livros ou artigos que sirvam simultaneamente de material didático introdutório sobre o tema e de manual prático de metodologia para calcular e analisar dados de acessibilidade. A ausência desse tipo de material explica, ao menos em parte, por que diversas agências de transporte e analistas ainda enfrentam desafios para incorporar questões e indicadores de acessibilidade no dia a dia do planejamento e da pesquisa (Silva et al. 2017; Büttner 2021).\nO objetivo deste livro é equipar seus leitores com os conceitos fundamentais e as ferramentas de análise e processamento de dados necessários para realizar análises de acessibilidade urbana e conduzir avaliações de impacto de projetos e políticas de transporte. O livro foi escrito pensando nas necessidades de trabalho de gestores públicos, analistas, alunos e pesquisadores de planejamento e transporte urbano, e, por isso, possui caráter prático. Todo o material do livro é apresentado com exemplos reproduzíveis e dados abertos, utilizando para isso a linguagem de programação R.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#organização-do-livro",
    "href": "index.html#organização-do-livro",
    "title": "Introdução à acessibilidade urbana",
    "section": "Organização do livro",
    "text": "Organização do livro\nEste livro está dividido em 5 seções, descritas a seguir.\n\n\n\n\n\nSeção\nDescrição\n\n\n\n\n1: Introdução à acessibilidade urbana\nApresenta o conceito de acessibilidade urbana, esclarece as diferenças entre acessibilidade e mobilidade e apresenta os principais indicadores usados para medir a acessibilidade urbana.\n\n\n2: Como calcular acessibilidade urbana\nEnsina como calcular estimativas de acessibilidade urbana em R usando os pacotes {r5r} e {accessibility} a partir de dados públicos abertos e como visualizar os resultados com mapas e gráficos.\n\n\n3: Dados de transporte público\nApresenta a Especificação Geral de Redes de Transporte Público (General Transit Feed Specification - GTFS) e mostra como manipular e analisar dados GTFS usando o pacote {gtfstools}.\n\n\n4: Avaliação de impacto de projetos de transporte\nTraz um estudo de caso para mostrar como o conhecimento dos capítulos anteriores pode ser utilizado para avaliar o impacto de políticas públicas sobre as condições de acessibilidade urbana.\n\n\n5: Dados do Projeto Acesso a Oportunidades\nMostra como baixar e visualizar os dados produzidos pelo projeto Acesso a Oportunidades (AOP), que incluem dados detalhados sobre padrões de uso do solo e acessibilidade nas vinte maiores cidades brasileiras.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#reproduzindo-o-livro-localmente",
    "href": "index.html#reproduzindo-o-livro-localmente",
    "title": "Introdução à acessibilidade urbana",
    "section": "Reproduzindo o livro localmente",
    "text": "Reproduzindo o livro localmente\nEste livro foi escrito e publicado com o sistema de publicação Quarto. Todo o código utilizado em seu preparo e na sua publicação pode ser encontrado nesse repositório. Para reproduzir o livro localmente, você deve primeiro baixar o seu código-fonte. Isso pode ser feito com o software git ou manualmente1. Caso o segundo método seja utilizado, é necessário também extrair o conteúdo do arquivo .zip baixado para uma nova pasta.\nA renderização do livro requer que o programa Quarto esteja instalado. A reprodução dos seus capítulos, por sua vez, requer o uso do pacote de R {renv}, que faz a gestão de dependências do livro.\nDepois de instaladas as dependências do livro, seu código-fonte poderá ser executado normalmente. Os capítulos estão ordenados numericamente em arquivos no formato .qmd. Para rodar todos os capítulos de uma vez, utilize um dos seguintes comandos:\nquarto::quarto_preview()\n\nquarto::quarto_render()\nPara mais detalhes de como instalar as dependências do livro e rodar seu conteúdo localmente, veja as instruções completas de instalação no repositório do livro.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#reproduzindo-o-livro-na-nuvem-com-um-binder",
    "href": "index.html#reproduzindo-o-livro-na-nuvem-com-um-binder",
    "title": "Introdução à acessibilidade urbana",
    "section": "Reproduzindo o livro na nuvem com um binder",
    "text": "Reproduzindo o livro na nuvem com um binder\nUm binder é uma ferramenta que permite rodar códigos na nuvem em um navegador, como o Chrome e o Firefox. O código do livro pode ser rodado usando um servidor publicado pelo MyBinder. Para isso, acesse esse link. Uma sessão do RStudio Cloud, que inclui todos os arquivos e dados necessários para rodar o código do livro, começará a rodar no seu navegador.\nNote que as sessões do MyBinder estão limitadas a 2 GB de memória RAM. Essa restrição pode impedir que capítulos de processamento um pouco mais pesado, em particular o Capítulo 6, sejam executados adequadamente. Em caso de uso do binder, sugerimos que não tente renderizar o livro todo com o Quarto, como mostrado anteriormente.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#licença-de-uso",
    "href": "index.html#licença-de-uso",
    "title": "Introdução à acessibilidade urbana",
    "section": "Licença de uso",
    "text": "Licença de uso\n É permitida a reprodução e a exibição para uso educacional ou informativo, desde que respeitado o crédito ao autor original e citada a fonte. Permitida a inclusão da obra em Repositórios ou Portais de Acesso Aberto, desde que fique claro para os usuários os termos de uso da obra e quem é o detentor dos direitos autorais, o Instituto de Pesquisa Econômica Aplicada (Ipea). Proibido o uso comercial ou com finalidades lucrativas em qualquer hipótese. Proibida a criação de obras derivadas. Para imagens estáticas e em movimento (vídeos e audiovisuais), ATENÇÃO: os direitos de imagem foram cedidos apenas para a obra original, formato de distribuição e repositório. Esta licença está baseada em estudos sobre a Lei Brasileira de Direitos Autorais (Lei 9.610/1998).",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#como-citar-o-livro",
    "href": "index.html#como-citar-o-livro",
    "title": "Introdução à acessibilidade urbana",
    "section": "Como citar o livro",
    "text": "Como citar o livro\nCaso use o material deste livro, pedimos por gentileza que cite o livro utilizando a seguinte referência:\n\nPereira, Rafael H. M. & Herszenhut, Daniel. (2023) Introdução à acessibilidade urbana: um guia prático em R. Ipea - Instituto de Pesquisa Econômica Aplicada.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#agradecimentos",
    "href": "index.html#agradecimentos",
    "title": "Introdução à acessibilidade urbana",
    "section": "Agradecimentos",
    "text": "Agradecimentos\nEste livro foi elaborado pelo Instituto de Pesquisa Econômica Aplicada (Ipea) no âmbito da parceria entre Ipea e a Secretaria de Mobilidade e Desenvolvimento Regional e Urbano (SMDRU) do Ministério do Desenvolvimento Regional (MDR). Os autores agradecem aos comentários e sugestões de Lucas Mation.\n\n\n\n\nBoisjoly, Geneviève, e Ahmed M. El-Geneidy. 2017. «How to Get There? A Critical Assessment of Accessibility Objectives and Indicators in Metropolitan Transportation Plans». Transport Policy 55 (abril): 38–50. https://doi.org/10.1016/j.tranpol.2016.12.011.\n\n\nBüttner, Benjamin. 2021. «Accessibility Tools for Transport Policy and Planning». Em International Encyclopedia of Transportation, editado por Roger Vickerman, 83–86. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10618-9.\n\n\nLevine, Jonathan, Joe Grengs, e Louis A. Merlin. 2019. From Mobility to Accessibility: Transforming Urban Transportation and Land-Use Planning. Cornell University Press.\n\n\nLevinson, David, e David King. 2020. Transport Access Manual: A Guide for Measuring Connection between People and Places. Committee of the Transport Access Manual, University of Sydney.\n\n\nMiller, Eric J. 2018. «Accessibility: Measurement and Application in Transportation Planning». Transport Reviews 38 (5): 551–55. https://doi.org/10.1080/01441647.2018.1492778.\n\n\nPapa, Enrica, Cecilia Silva, Marco Te Brömmelstroet, e Angela Hull. 2015. «Accessibility Instruments for Planning Practice: A Review of European Experiences». Journal of Transport and Land Use, junho. https://doi.org/10.5198/jtlu.2015.585.\n\n\nSilva, Cecília, Luca Bertolini, Marco te Brömmelstroet, Dimitris Milakis, e Enrica Papa. 2017. «Accessibility Instruments in Planning Practice: Bridging the Implementation Gap». Transport Policy 53 (janeiro): 135–45. https://doi.org/10.1016/j.tranpol.2016.09.006.\n\n\nvan Wee, Bert. 2021. «Transport Modes and Accessibility». Em International Encyclopedia of Transportation, editado por Roger Vickerman, 32–37. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10402-6.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Introdução à acessibilidade urbana",
    "section": "",
    "text": "Para baixar o código-fonte manualmente, use o link a seguir: https://github.com/ipeaGIT/intro_access_book/archive/refs/heads/main.zip.↩︎",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "1_conceito.html",
    "href": "1_conceito.html",
    "title": "1  O que é acessibilidade?",
    "section": "",
    "text": "1.1 Definição de acessibilidade urbana\nAcessibilidade é a facilidade com que as pessoas conseguem alcançar lugares e oportunidades ou, inversamente, uma característica de lugares e oportunidades em termos do quão facilmente eles podem ser alcançados pela população (Geurs e van Wee 2004; Neutens et al. 2010).\nAs condições de acessibilidade são influenciadas tanto pela codistribuição espacial da população e de atividades econômicas e serviços públicos quanto pela configuração e desempenho da rede de transportes. Nesse sentido, a acessibilidade urbana tem papel fundamental na capacidade das pessoas de se deslocarem para acessar oportunidades, como empregos, escolas etc.\nOs níveis de acessibilidade urbana são estabelecidos, portanto, por três componentes distintos:\nEste último componente traz importantes informações para análises de equidade e inclusão social. No entanto, a sua influência sobre as condições de acessibilidade das pessoas costuma ser melhor captada em análises qualitativas. Por conta de dificuldades operacionais e computacionais, essa dimensão da acessibilidade costuma receber pouca atenção de avaliações de impacto de projetos de transporte de larga escala. No Capítulo 2, discutimos mais a fundo as vantagens e desvantagens operacionais, teóricas e de comunicação de diferentes indicadores de acessibilidade.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>O que é acessibilidade?</span>"
    ]
  },
  {
    "objectID": "1_conceito.html#definição-de-acessibilidade-urbana",
    "href": "1_conceito.html#definição-de-acessibilidade-urbana",
    "title": "1  O que é acessibilidade?",
    "section": "",
    "text": "Infraestrutura: a facilidade de acessar atividades depende da infraestrutura e dos serviços de transporte existentes. Isso inclui, por exemplo, a capilaridade da rede de transporte público, a conectividade da rede viária, a existência de corredores de transporte de alta capacidade, como trens e metrôs, etc. Aqui, tanto a eficiência quanto a conectividade espacial e temporal da rede de transportes são de extrema importância.\nUso do solo: o quão facilmente atividades podem ser acessadas também depende da codistribuição espacial de pessoas e atividades, como escolas, serviços de saúde, áreas de lazer etc. Esse componente diz respeito à proximidade geográfica entre pessoas e oportunidades: quanto mais longe, mais difícil é o acesso às atividades.\nPessoas: por fim, é importante ressaltar que a facilidade de acesso a atividades também é afetada pelas características individuais de cada pessoa. Fatores como dificuldades motoras e cognitivas, idade, gênero, cor e renda, por exemplo, podem influenciar de maneira importante a capacidade das pessoas de se locomoverem, de utilizarem determinados modos de transporte e de circularem pela cidade sem medo de algum tipo de violência ou discriminação.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>O que é acessibilidade?</span>"
    ]
  },
  {
    "objectID": "1_conceito.html#diferença-entre-microacessibilidade-e-acessibilidade-urbana",
    "href": "1_conceito.html#diferença-entre-microacessibilidade-e-acessibilidade-urbana",
    "title": "1  O que é acessibilidade?",
    "section": "1.2 Diferença entre microacessibilidade e acessibilidade urbana",
    "text": "1.2 Diferença entre microacessibilidade e acessibilidade urbana\nPara fins de esclarecimento de conceitos, é importante fazer uma distinção entre o que chamamos de acessibilidade urbana e o que em geral se entende por acessibilidade, em português.\nO termo acessibilidade é comumente utilizado para se referir a questões de padrões e normas de design universal e de construção e planejamento para inclusão de pessoas com diferentes graus de dificuldades motoras e cognitivas. Isso é o que normalmente entende-se por microacessibilidade, pois abrange questões de acesso a serviços e atividades na escala micro. Por exemplo, trata de como características do planejamento de espaços públicos e privados e o projeto de edifícios e veículos, por exemplo, afetam a capacidade de cada indivíduo de acessar lugares, serviços, produtos etc.\nA acessibilidade urbana, por sua vez, pode ser entendida como macroacessibilidade, pois trata de questões de acesso de uma maneira mais ampla. Quando falamos de acessibilidade urbana, nos concentramos em questões estruturais de planejamento e desenvolvimento urbano. Ou seja, em como a disposição de corredores de transportes e a distribuição espacial de pessoas e atividades, por exemplo, afetam a capacidade das pessoas de acessar oportunidades. Nesse sentido, ela trata de como a capacidade de acessar atividades é influenciada tanto pela capacidade das pessoas de utilizar tecnologias de transporte quanto pela codistribuição espacial de pessoas e atividades e pela cobertura e conectividade da rede de transporte.\nNotadamente, a microacessibilidade e a macroacessibilidade são elementos complementares de uma noção mais ampla de acessibilidade. Condições de microacessibilidade, por exemplo, afetam diretamente a capacidade de pessoas de embarcar e utilizar diferentes modos de transporte, de se locomover com segurança sobre calçadas, de atravessar ruas etc. De pouco adianta um indivíduo morar em uma região atendida por uma grande oferta de modos de transporte se ele tem dificuldades de locomoção, por exemplo, e a rede de transporte não é adaptada para essas dificuldades.\nNeste livro, focaremos apenas em análises de acessibilidade urbana e muitas vezes utilizaremos o termo acessibilidade como um sinônimo de macroacessibilidade por uma questão de fluência do texto. É importante reconhecer, no entanto, que a macroacessibilidade de forma isolada não é suficiente para descrever as condições de acessibilidade de um indivíduo em sua totalidade, e que para tal precisamos olhar também para a microacessibilidade.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>O que é acessibilidade?</span>"
    ]
  },
  {
    "objectID": "1_conceito.html#por-que-a-acessibilidade-urbana-importa",
    "href": "1_conceito.html#por-que-a-acessibilidade-urbana-importa",
    "title": "1  O que é acessibilidade?",
    "section": "1.3 Por que a acessibilidade urbana importa?",
    "text": "1.3 Por que a acessibilidade urbana importa?\nO conceito de acessibilidade é central em estudos de transporte por diferentes razões. Primeiramente, este conceito articula de maneira explícita como a interação entre políticas de transporte e de desenvolvimento e uso do solo urbano impacta a capacidade de acesso de pessoas a oportunidades distribuídas nas cidades.\nPor sua vez, o acesso a oportunidades e atividades, como postos de trabalho e serviços de educação e de saúde, por exemplo, tem papel fundamental para a satisfação das necessidades individuais e sociais da população e para a promoção da inclusão social (Pereira e Karner 2021; Luz e Portugal 2022). Boas condições de acessibilidade também são requisito necessário, embora não suficiente, para a expansão da liberdade de escolha das pessoas (Church, Frost, e Sullivan 2000; Lucas et al. 2016; van Wee 2022).\nO conceito de acessibilidade, portanto, serve como fio condutor para relacionar investimentos e políticas de transportes e uso do solo a questões referentes à exclusão social e à qualidade de vida de indivíduos, como o potencial de satisfação de necessidades básicas e a liberdade.\nAdicionalmente, a ideia de acessibilidade traz à tona a dimensão espacial de um problema central de justiça social: a desigualdade de oportunidades. Ela ajuda a incorporar de maneira explícita a noção de espaço no desenho de políticas destinadas a enfrentar essas injustiças (Farrington e Farrington 2005; Pereira, Schwanen, e Banister 2017). Assim, a noção de acessibilidade é peça fundamental para pensar a equidade de políticas públicas e para avaliar quais grupos sociais e localidades se beneficiam dessas políticas.\nComo vimos anteriormente, os níveis de acesso a oportunidades em uma cidade são resultado conjunto da capacidade de cada pessoa utilizar tecnologias de transporte, da integração entre a distribuição geográfica das atividades e a distribuição espacial da população na cidade e da conectividade espacial e temporal da rede de transportes (Miller 2018; Páez, Scott, e Morency 2012). Desse modo, o planejamento com foco na acessibilidade passa pelo planejamento integrado dos sistemas de uso do solo e de transportes, buscando aproximar pessoas e atividades e reduzir a dependência de modos de transporte motorizados (Banister 2011). Planejar as cidades e sistemas de transporte visando melhorar as condições de acessibilidade, portanto, é essencial para o desenvolvimento de cidades inclusivas e sustentáveis.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>O que é acessibilidade?</span>"
    ]
  },
  {
    "objectID": "1_conceito.html#diferença-entre-acessibilidade-e-mobilidade",
    "href": "1_conceito.html#diferença-entre-acessibilidade-e-mobilidade",
    "title": "1  O que é acessibilidade?",
    "section": "1.4 Diferença entre acessibilidade e mobilidade",
    "text": "1.4 Diferença entre acessibilidade e mobilidade\nÉ importante esclarecer a diferença entre a acessibilidade e outro conceito muito presente em nosso dia a dia: a mobilidade. Infelizmente, a diferença entre esses conceitos é frequentemente ignorada, mesmo por pesquisadores e planejadores que lidam com esses temas diariamente. Afinal, existe uma grande intersecção temática entre a acessibilidade e o que se entende por “mobilidade urbana” enquanto área de pesquisa e política pública: uma área que lida com os deslocamentos das pessoas e que está relacionada ao planejamento de sistemas de transporte coletivo e individual, ao planejamento de redes cicloviárias e de pedestres etc. Nesse contexto, não é raro, por exemplo, ouvir que um determinado grupo “tem menos mobilidade” do que outro, quando, na verdade, o correto seria dizer que esse grupo apresenta piores condições de acessibilidade. Qual é, então, a diferença entre acessibilidade e mobilidade?\nNa literatura científica e de planejamento urbano e de transportes, o conceito de mobilidade diz respeito aos padrões de viagens que as pessoas efetivamente fazem no seu dia a dia. Por exemplo, quantas viagens foram feitas, quais modos de transporte foram usados, qual a distância média das viagens, quanto tempo se gasta no deslocamento casa-trabalho etc.\nInformações de mobilidade são tradicionalmente captadas por meio de pesquisas domiciliares origem-destino. Recentemente, com o surgimento de novas tecnologias digitais, dados de GPS de telefones celulares, de cartões de bilhetagem eletrônica, de radares e semáforos urbanos, entre outros, também vêm sendo usados com a finalidade de descrever os deslocamentos diários da população (Anda, Erath, e Fourie 2017; Kandt e Batty 2021). Dados e análises de mobilidade trazem informações sobre o uso do sistema de transportes e sobre os padrões de viagens de indivíduos de diferentes grupos socioeconômicos, o que nos permite captar importantes aspectos do desempenho econômico e ambiental das cidades e do bem-estar da população.\nO conceito de acessibilidade, por sua vez, está intrinsecamente relacionado ao potencial que as pessoas têm de alcançar atividades e oportunidades. Enquanto uma análise de mobilidade foca, por exemplo, no tempo que as pessoas levam diariamente de sua casa ao seu trabalho, uma análise de acessibilidade tenta identificar questões como a quantidade de empregos que podem ser alcançados dentro de um determinado custo de viagem, ou se as pessoas conseguiriam alcançar serviços públicos em um tempo de viagem tido como razoável.\nA acessibilidade trata do quão fácil/factível é alcançar um local, enquanto a mobilidade trata dos meios de deslocamento efetivamente utilizados para chegar até ele. Níveis de acessibilidade são, portanto, medidas potenciais, ao passo que os dados de mobilidade descrevem padrões reais, realizados.\nTradicionalmente, o planejamento urbano e de transportes tem como foco a mobilidade (Banister 2011; Vasconcellos 2018; Levinson e King 2020). Ainda hoje, o foco na mobilidade motiva políticas que priorizam a circulação de automóveis e visam aumentar a velocidade e a fluidez de trânsito para reduzir congestionamentos e, consequentemente, tempos de deslocamento (Levine, Grengs, e Merlin 2019). Essas políticas, no entanto, tendem a dar um enfoque quantitativo na mobilidade: aumentar o número de viagens, aumentar a velocidade média, diminuir o tempo de congestionamento etc.\nNesse contexto, portanto, a mobilidade é vista como um fim em si mesma, e “melhorá-la” depende de políticas com soluções puramente técnicas que devem “otimizar” os aspectos quantitativos mencionados anteriormente. A mobilidade, no entanto, não pode ser encarada como uma finalidade em si. As pessoas raramente se deslocam pelo simples prazer de se deslocar. Ao contrário, na grande maioria das vezes as pessoas se locomovem para acessar as atividades localizadas no destino da viagem.\nNesse sentido, tem-se observado um crescente consenso entre pesquisadores e agências de transporte de que o objetivo de uma política de transportes é melhorar o acesso da população a bens e oportunidades (Pereira, Schwanen, e Banister 2017; Martens 2012; Bertolini, le Clercq, e Kapoen 2005). Se o que as pessoas querem é acessar atividades, precisamos pensar em formas de planejamento que resultem em políticas que facilitem seu acesso a tais atividades sem necessariamente promover a motorização e o aumento da velocidade no trânsito, que implicam o crescimento de externalidades econômicas, ambientais, de saúde pública, entre outras.\nO que observamos, portanto, é uma mudança de paradigma no planejamento urbano e de transportes: a busca por padrões de viagem mais sustentáveis implica a mudança do foco da mobilidade para a acessibilidade (Banister 2008; Cervero 2005; Levine, Grengs, e Merlin 2019).\nDesse modo, políticas de aumento de velocidade nas vias e de expansão de faixas, por exemplo, podem ser substituídas por políticas de promoção de maior mix de uso do solo e de aproximação de pessoas e atividades, promovendo maior integração entre planejamento de transportes e de uso do solo. Assim, a mudança de foco da mobilidade para a acessibilidade urbana abre um leque maior de possíveis instrumentos e ações de políticas públicas que buscam promover um desenvolvimento urbano mais integrado e calcado na promoção da sustentabilidade e da inclusão social (Banister 2011; Levine, Grengs, e Merlin 2019).\n\n\n\n\nAnda, Cuauhtemoc, Alexander Erath, e Pieter Jacobus Fourie. 2017. «Transport Modelling in the Age of Big Data». International Journal of Urban Sciences 21 (sup1): 19–42. https://doi.org/10.1080/12265934.2017.1281150.\n\n\nBanister, David. 2008. «The Sustainable Mobility Paradigm». Transport Policy 15 (2): 73–80. https://doi.org/10.1016/j.tranpol.2007.10.005.\n\n\n———. 2011. «The Trilogy of Distance, Speed and Time». Journal of Transport Geography 19 (4): 950–59. https://doi.org/10.1016/j.jtrangeo.2010.12.004.\n\n\nBertolini, L., F. le Clercq, e L. Kapoen. 2005. «Sustainable Accessibility: A Conceptual Framework to Integrate Transport and Land Use Plan-Making. Two Test-Applications in the Netherlands and a Reflection on the Way Forward». Transport Policy 12 (3): 207–20. https://doi.org/10.1016/j.tranpol.2005.01.006.\n\n\nCervero, Robert. 2005. «Accessible Cities and Regions: A Framework for Sustainable Transport and Urbanism in the 21st Century». Center for Future Urban Transport Working Paper, n.º UCB-ITS-VWP-2005-3 (agosto).\n\n\nChurch, A, M Frost, e K Sullivan. 2000. «Transport and Social Exclusion in London». Transport Policy 7 (3): 195–205. https://doi.org/10.1016/S0967-070X(00)00024-X.\n\n\nFarrington, John, e Conor Farrington. 2005. «Rural Accessibility, Social Inclusion and Social Justice: Towards Conceptualisation». Journal of Transport Geography 13 (1): 1–12. https://doi.org/10.1016/j.jtrangeo.2004.10.002.\n\n\nGeurs, Karst, e Bert van Wee. 2004. «Accessibility Evaluation of Land-Use and Transport Strategies: Review and Research Directions». Journal of Transport Geography 12 (2): 127–40. https://doi.org/10.1016/j.jtrangeo.2003.10.005.\n\n\nKandt, Jens, e Michael Batty. 2021. «Smart Cities, Big Data and Urban Policy: Towards Urban Analytics for the Long Run». Cities 109 (fevereiro): 102992. https://doi.org/10.1016/j.cities.2020.102992.\n\n\nLevine, Jonathan, Joe Grengs, e Louis A. Merlin. 2019. From Mobility to Accessibility: Transforming Urban Transportation and Land-Use Planning. Cornell University Press.\n\n\nLevinson, David, e David King. 2020. Transport Access Manual: A Guide for Measuring Connection between People and Places. Committee of the Transport Access Manual, University of Sydney.\n\n\nLucas, Karen, Giulio Mattioli, Ersilia Verlinghieri, e Alvaro Guzman. 2016. «Transport Poverty and Its Adverse Social Consequences». Proceedings of the Institution of Civil Engineers - Transport 169 (6): 353–65. https://doi.org/10.1680/jtran.15.00073.\n\n\nLuz, Gregório, e Licinio Portugal. 2022. «Understanding Transport-Related Social Exclusion through the Lens of Capabilities Approach». Transport Reviews 42 (4): 503–25. https://doi.org/10.1080/01441647.2021.2005183.\n\n\nMartens, Karel. 2012. «Justice in Transport as Justice in Accessibility: Applying Walzer’s “Spheres of Justice” to the Transport Sector». Transportation 39 (6): 1035–53. https://doi.org/10.1007/s11116-012-9388-7.\n\n\nMiller, Eric J. 2018. «Accessibility: Measurement and Application in Transportation Planning». Transport Reviews 38 (5): 551–55. https://doi.org/10.1080/01441647.2018.1492778.\n\n\nNeutens, Tijs, Tim Schwanen, Frank Witlox, e Philippe De Maeyer. 2010. «Equity of Urban Service Delivery: A Comparison of Different Accessibility Measures». Environment and Planning A: Economy and Space 42 (7): 1613–35. https://doi.org/10.1068/a4230.\n\n\nPáez, Antonio, Darren M. Scott, e Catherine Morency. 2012. «Measuring Accessibility: Positive and Normative Implementations of Various Accessibility Indicators». Journal of Transport Geography 25 (novembro): 141–53. https://doi.org/10.1016/j.jtrangeo.2012.03.016.\n\n\nPereira, Rafael H. M., e Alex Karner. 2021. «Transportation Equity». Em International Encyclopedia of Transportation, editado por Roger Vickerman, 271–77. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10053-3.\n\n\nPereira, Rafael H. M., Tim Schwanen, e David Banister. 2017. «Distributive Justice and Equity in Transportation». Transport Reviews 37 (2): 170–91. https://doi.org/10.1080/01441647.2016.1257660.\n\n\nvan Wee, Bert. 2022. «Accessibility and Equity: A Conceptual Framework and Research Agenda». Journal of Transport Geography 104 (outubro): 103421. https://doi.org/10.1016/j.jtrangeo.2022.103421.\n\n\nVasconcellos, Eduardo Alcantara. 2018. «Urban Transport Policies in Brazil: The Creation of a Discriminatory Mobility System». Journal of Transport Geography 67 (fevereiro): 85–91. https://doi.org/10.1016/j.jtrangeo.2017.08.014.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>O que é acessibilidade?</span>"
    ]
  },
  {
    "objectID": "2_indicadores.html",
    "href": "2_indicadores.html",
    "title": "2  Medidas de acessibilidade",
    "section": "",
    "text": "2.1 Medidas baseadas em lugares\nMedidas baseadas em lugares medem a acessibilidade como uma característica de determinado local. Por simplificação, esses indicadores assumem que todas as pessoas que se encontram em um mesmo local têm as mesmas condições de acesso às atividades distribuídas pela cidade. Ou seja, se uma análise de acessibilidade utiliza uma medida baseada em lugares e divide a área de estudo em uma grade quadriculada, cada célula dessa grade (um quadrado) terá a ela associado um nível de acessibilidade, posteriormente atribuído às pessoas que residem dentro de cada célula. Essas medidas são sensíveis a fatores relacionados à distribuição espacial de atividades e à configuração e o desempenho da rede de transportes, mas não levam em consideração as características individuais das pessoas.\nAs medidas desse tipo são as mais amplamente utilizadas por agências de transporte e pesquisadores (Boisjoly e El-Geneidy 2017; Papa et al. 2015), porque exigem menor quantidade de dados e tendem a ser consideravelmente mais fáceis de serem calculadas e interpretadas do que as baseadas em pessoas. Por isso, os exemplos e estudos de caso apresentados neste e nos próximos capítulos do livro focam somente nesse grupo de medidas.\nMedidas de acessibilidade baseadas em lugares associam a cada deslocamento um custo, usualmente expresso em tempo de viagem (El-Geneidy et al. 2016; Venter 2016). Ou seja, se um local pode ser alcançado a partir de outro em meia hora, o custo para realizar essa viagem é de trinta minutos. Nada impede, no entanto, que outros tipos de custo, como a distância da viagem, seu custo monetário e a percepção de conforto dos usuários, por exemplo, sejam considerados (Arbex e Cunha 2020; Herszenhut et al. 2022). Apresentamos, a seguir, a descrição de algumas das medidas baseadas em lugares mais frequentemente utilizadas na literatura científica e na prática de agências de transporte. Aqui, o termo “custo” é utilizado de maneira ampla e pode se referir a qualquer tipo de unidade utilizada para quantificar a impedância de uma viagem, seja ela tempo de viagem, custo monetário ou demais alternativas.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Medidas de acessibilidade</span>"
    ]
  },
  {
    "objectID": "2_indicadores.html#medidas-baseadas-em-lugares",
    "href": "2_indicadores.html#medidas-baseadas-em-lugares",
    "title": "2  Medidas de acessibilidade",
    "section": "",
    "text": "2.1.1 Custo mínimo de viagem\nÉ uma das medidas de acessibilidade mais simples, indicando o menor custo necessário para alcançar a oportunidade mais próxima a partir de uma determinada origem. Ela permite estimar, por exemplo, o tempo de viagem até o posto de saúde mais próximo de cada quarteirão de uma cidade. O indicador é calculado com a seguinte fórmula:\n\\[A_i = min(c_{i1}, c_{i2}, \\dots, c_{ij}, \\dots, c_{i(n-1)}, c_{in}) \\iff O_j \\geq 1\\]\nem que \\(A_i\\) é a acessibilidade na origem \\(i\\), \\(c_{ij}\\) é o custo de deslocamento entre a origem \\(i\\) e o destino \\(j\\), \\(n\\) é o número total de destinos na área de estudo e \\(O_j\\) é o número de oportunidades no destino \\(j\\).\nVantagens e desvantagens: essa medida tem as vantagens de ser fácil de calcular e exigir poucos dados, além de ser fácil de comunicar. Duas desvantagens, no entanto, são que ela não capta a quantidade de oportunidades acessíveis nos destinos para os quais o custo de acesso é o mínimo nem considera aspectos de competição na demanda pelas oportunidades. Por exemplo, mesmo que uma pessoa more muito perto de um hospital, essa proximidade não necessariamente garante um bom acesso aos serviços de saúde se esse for o único hospital da região e estiver sujeito a picos de demanda que sobrecarregam os serviços além de suas capacidades.\n\n\n2.1.2 Medida de oportunidades cumulativas\nMede a quantidade de oportunidades que pode ser alcançada dentro de um determinado limite de custo de viagem. Por exemplo, este indicador pode ser utilizado para medir a quantidade de empregos acessíveis por transporte público em até sessenta minutos ou a quantidade de escolas acessíveis em até trinta minutos de viagem a pé. A medida é calculada com a seguinte fórmula:\n\\[A_i = \\sum_{j=1}^{n}{O_j \\times f(c_{ij})}\\]\n\\[\nf(c_{ij}) =\n  \\begin{cases}\n    1 & \\text{se } c_{ij} \\leq C\\\\\n    0 & \\text{caso contrário}\n  \\end{cases}\n\\]\nem que \\(A_i\\) é a acessibilidade na origem \\(i\\), \\(O_j\\) é o número de oportunidades no destino \\(j\\), \\(n\\) é o número total de destinos na área de estudo, \\(f(c_{ij})\\) é uma função binária que assume os valores 0 ou 1, a depender do custo de deslocamento \\(c_{ij}\\) entre a origem \\(i\\) e o destino \\(j\\), e \\(C\\) é o limite de custo de deslocamento estabelecido.\nVantagens e desvantagens: a medida de oportunidades cumulativas também é calculada com facilidade, exige poucos dados e é fácil de comunicar. Isso contribui para que este indicador seja um dos mais utilizados por agências de transporte e de financiamento em análises de acessibilidade (Papa et al. 2015; Boisjoly e El-Geneidy 2017). Entre as suas desvantagens estão o fato de que este indicador não considera a influência da competição sobre oportunidades e exige a escolha de um único ponto de corte como limite de custo de viagem. Além disso, esta medida assume que todas as oportunidades que possam ser alcançadas dentro do limite de custo preestabelecido são igualmente desejáveis e alcançáveis pelas pessoas. Por exemplo, se considerarmos um limite de sessenta minutos de tempo de viagem, uma oportunidade a quarenta minutos de uma origem é considerada tão acessível quanto outra que esteja a dez minutos dessa mesma origem.\n\n\n2.1.3 Medidas gravitacionais\nMais do que um tipo de medida específica, podemos entender as medidas gravitacionais como uma família de medidas. Assim como no caso da medida de oportunidades cumulativas, esta família de métricas considera a soma das oportunidades que podem ser alcançadas a partir de um determinado local. A contagem de cada oportunidade, no entanto, é gradualmente descontada à medida que o custo de viagem aumenta. Assim, oportunidades mais fáceis de acessar têm uma importância maior, e o peso de cada oportunidade na soma total diminui com a sua dificuldade de acesso em relação à origem.\nO ritmo de decaimento desse peso é afetado pelo custo da viagem e é ditado por uma função de decaimento, que pode ser definida de diferentes formas. Por exemplo, a função de decaimento linear considera que o peso de cada oportunidade diminui de maneira constante até um determinado custo limite, em que ele passa a ser zero. Já a função de decaimento exponencial negativa considera que o peso de cada oportunidade é dividido por um fator que cresce exponencialmente, fazendo com que ele diminua rapidamente a custos de viagem baixos e se aproxime de 0 a custos altos. As fórmulas a seguir apresentam a formulação genérica de uma medida gravitacional e as funções de decaimento linear e exponencial negativa, mencionadas anteriormente.\n\\[A_i = \\sum_{j=1}^{n}{O_j \\times f(c_{ij})}\\]\n\\[\nf_{lin}(c_{ij}) =\n  \\begin{cases}\n    1-c_{ij}/C & \\text{se } c_{ij} \\leq C\\\\\n    0 & \\text{caso contrário}\n  \\end{cases}\n\\]\n\\[f_{exp}(c_{ij}) = e^{-\\beta c_{ij}}\\]\nem que \\(A_i\\) é a acessibilidade na origem \\(i\\), \\(O_j\\) é o número de oportunidades no destino \\(j\\), \\(n\\) é o número total de destinos na área de estudo, \\(f(c_{ij})\\) é uma função de decaimento cujo resultado varia com o custo de deslocamento \\(c_{ij}\\) entre a origem \\(i\\) e o destino \\(j\\), \\(f_{lin}(c_{ij})\\) é a função de decaimento linear, \\(C\\) é o limite de custo de deslocamento estabelecido, \\(f_{exp}(c_{ij})\\) é a função de decaimento exponencial negativa e \\(\\beta\\) é um parâmetro que dita a velocidade de decaimento.\nInúmeras funções de decaimento podem ser utilizadas no cálculo de medidas gravitacionais. A medida de oportunidades cumulativas, por exemplo, pode ser pensada simplesmente como um caso especial de medida gravitacional em que o peso de cada oportunidade é ditado por uma função binária, em vez de decair gradualmente. Levinson e King (2020, 49) apresentam uma lista de funções de decaimento frequentemente utilizadas por agências de transportes e pesquisadores em análises que envolvem medidas gravitacionais.\nVantagens e desvantagens: a principal vantagem de medidas gravitacionais é que o desconto do peso das oportunidades pelo custo da viagem reflete em alguma medida a forma como as pessoas percebem o acesso a oportunidades, pois, de forma geral, serviços e atividades costumam ser mais atrativos quanto mais próximos eles estiverem. Este indicador, no entanto, tem ao menos duas desvantagens. A primeira delas é que os níveis de acessibilidade estimados são de difícil interpretação, pela forma como a contagem de oportunidades é descontada pelo custo de viagem. Além disso, para que esses níveis sejam mais representativos do comportamento de viagem das pessoas, o ritmo de decaimento da função de impedância (o parâmetro \\(\\beta\\) da função exponencial negativa, por exemplo) precisa ser calibrado. Por isso, esta medida requer a disponibilidade de dados de comportamento de viagens ou de outros dados que possam ser usados no processo de calibração, disponíveis, por exemplo, a partir de pesquisas origem-destino, de coletas feitas por empresas de telefonia celular etc.\n\n\n2.1.4 Medidas de acessibilidade com competição: floating catchment area\nEm muitos casos, o acesso a oportunidades é afetado não apenas por questões de proximidade geográfica e de custos de transporte, mas também pela competição de diferentes pessoas por uma mesma oportunidade. Isso é muito comum, por exemplo, em casos de acesso a serviços de saúde, escolas e empregos. Uma vaga de emprego só pode ser ocupada por uma pessoa de cada vez, e o mesmo vale para um leito de Unidade de Terapia Intensiva (UTI) ou uma matrícula escolar.\nExiste um grande número de medidas que buscam incorporar essa competição na estimativa dos níveis de acessibilidade. Algumas das medidas de competição mais amplamente utilizadas são as do tipo floating catchment area (FCA), ou área de influência flutuante, em português. A título de exemplo, esses indicadores tentam levar em consideração como uma mesma pessoa pode potencialmente acessar vários leitos de UTI e, simultaneamente, como cada leito de UTI pode potencialmente ser acessado por diversas pessoas. Assim, o acesso de uma pessoa a leitos de UTI é influenciado simultaneamente por questões de custos de transporte e pela disponibilidade de leitos, considerando a potencial concorrência na demanda por aqueles leitos.\nDentro da família de medidas de FCA, a mais comumente utilizada é a 2-Step Floating Catchment Area (2SFCA), proposta originalmente por Luo e Wang (2003). Uma limitação da 2SFCA é que ela considera que uma mesma pessoa pode demandar várias oportunidades ao mesmo tempo e que, analogamente, um mesmo serviço pode ser utilizado por várias pessoas ao mesmo tempo. Esses fenômenos são conhecidos como problemas de inflação de demanda e de oferta, respectivamente, e podem gerar estimativas de acessibilidade enviesadas ou pouco precisas (Paez, Higgins, e Vivona 2019). Para lidar com esses problemas, Paez, Higgins, e Vivona (2019) propuseram a Balanced Floating Catchment Area (BFCA), uma das medidas mais novas da família FCA.\nVantagens e desvantagens: diferentes medidas de FCA têm diferentes vantagens e desvantagens, em maior ou menor grau. No entanto, de maneira geral, a principal vantagem de medidas desta família é a sua capacidade de incorporar aspectos de competição em estimativas de acessibilidade. A principal desvantagem, em contrapartida, é a difícil interpretação e comunicação dos seus resultados.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Medidas de acessibilidade</span>"
    ]
  },
  {
    "objectID": "2_indicadores.html#medidas-baseadas-em-pessoas",
    "href": "2_indicadores.html#medidas-baseadas-em-pessoas",
    "title": "2  Medidas de acessibilidade",
    "section": "2.2 Medidas baseadas em pessoas",
    "text": "2.2 Medidas baseadas em pessoas\nMedidas de acessibilidade baseadas em pessoas são sensíveis não apenas à distribuição espacial de atividades e à configuração e o desempenho da rede de transporte, mas também levam em consideração como as características pessoais de cada indivíduo (como sexo, idade, deficiência física etc), e até questões como participação em atividades e compromissos pessoais, podem afetar sua facilidade de acesso a determinadas atividades. Esta categoria inclui, por exemplo, indicadores baseados em atividades (Dong et al. 2006) e medidas de espaço-tempo Neutens et al. (2012).\nVantagens e desvantagens: embora indicadores desta categoria sejam mais sofisticados, eles costumam demandar grandes quantidades de dados, como registros de diários de viagem, pesquisas domiciliares tipo origem-destino etc. Por isso, o cálculo dessas medidas é computacionalmente mais intensivo, o que faz com que elas sejam menos utilizadas do que as medidas baseadas em lugares Miller (2018). Como medidas baseadas em pessoas tendem a não ser agregadas em um indicador sintético (exatamente por levarem em conta particularidades de cada indivíduo em seu cálculo, que seriam desconsideradas no cálculo de um valor médio), a comunicação de seus resultados também costuma ser mais complexa.\n\n\n\n\nArbex, Renato, e Claudio B. Cunha. 2020. «Estimating the Influence of Crowding and Travel Time Variability on Accessibility to Jobs in a Large Public Transport Network Using Smart Card Big Data». Journal of Transport Geography 85: 102671. https://doi.org/10.1016/j.jtrangeo.2020.102671.\n\n\nBoisjoly, Geneviève, e Ahmed M. El-Geneidy. 2017. «How to Get There? A Critical Assessment of Accessibility Objectives and Indicators in Metropolitan Transportation Plans». Transport Policy 55 (abril): 38–50. https://doi.org/10.1016/j.tranpol.2016.12.011.\n\n\nDijst, Martin, Tom de Jong, e Jan Ritsema van Eck. 2002. «Opportunities for Transport Mode Change: An Exploration of a Disaggregated Approach». Environment and Planning B: Planning and Design 29 (3): 413–30. https://doi.org/10.1068/b12811.\n\n\nDong, Xiaojing, Moshe E. Ben-Akiva, John L. Bowman, e Joan L. Walker. 2006. «Moving from Trip-Based to Activity-Based Measures of Accessibility». Transportation Research Part A: Policy and Practice 40 (2): 163–80. https://doi.org/10.1016/j.tra.2005.05.002.\n\n\nEl-Geneidy, Ahmed, David Levinson, Ehab Diab, Genevieve Boisjoly, David Verbich, e Charis Loong. 2016. «The Cost of Equity: Assessing Transit Accessibility and Social Disparity Using Total Travel Cost». Transportation Research Part A: Policy and Practice 91 (setembro): 302–16. https://doi.org/10.1016/j.tra.2016.07.003.\n\n\nHerszenhut, Daniel, Rafael H. M. Pereira, Licinio da Silva Portugal, e Matheus Henrique de Sousa Oliveira. 2022. «The Impact of Transit Monetary Costs on Transport Inequality». Journal of Transport Geography 99 (fevereiro): 103309. https://doi.org/10.1016/j.jtrangeo.2022.103309.\n\n\nKim, Hyun-Mi, e Mei-Po Kwan. 2003. «Space-Time Accessibility Measures: A Geocomputational Algorithm with a Focus on the Feasible Opportunity Set and Possible Activity Duration». Journal of Geographical Systems 5 (1): 71–91. https://doi.org/10.1007/s101090300104.\n\n\nLevinson, David, e David King. 2020. Transport Access Manual: A Guide for Measuring Connection between People and Places. Committee of the Transport Access Manual, University of Sydney.\n\n\nLuo, Wei, e Fahui Wang. 2003. «Measures of Spatial Accessibility to Health Care in a GIS Environment: Synthesis and a Case Study in the Chicago Region». Environment and Planning B: Planning and Design 30 (6): 865–84. https://doi.org/10.1068/b29120.\n\n\nMiller, Eric J. 2018. «Accessibility: Measurement and Application in Transportation Planning». Transport Reviews 38 (5): 551–55. https://doi.org/10.1080/01441647.2018.1492778.\n\n\nNeutens, Tijs, Matthias Delafontaine, Darren M. Scott, e Philippe De Maeyer. 2012. «An Analysis of Day-to-Day Variations in Individual SpaceTime Accessibility». Journal of Transport Geography, Special Issue on Time Geography, 23 (julho): 81–91. https://doi.org/10.1016/j.jtrangeo.2012.04.001.\n\n\nNeutens, Tijs, Tim Schwanen, Frank Witlox, e Philippe De Maeyer. 2010. «Equity of Urban Service Delivery: A Comparison of Different Accessibility Measures». Environment and Planning A: Economy and Space 42 (7): 1613–35. https://doi.org/10.1068/a4230.\n\n\nPaez, Antonio, Christopher D. Higgins, e Salvatore F. Vivona. 2019. «Demand and Level of Service Inflation in Floating Catchment Area (FCA) Methods». Editado por Tayyab Ikram Shah. PLOS ONE 14 (6): e0218773. https://doi.org/10.1371/journal.pone.0218773.\n\n\nPáez, Antonio, Darren M. Scott, e Catherine Morency. 2012. «Measuring Accessibility: Positive and Normative Implementations of Various Accessibility Indicators». Journal of Transport Geography 25 (novembro): 141–53. https://doi.org/10.1016/j.jtrangeo.2012.03.016.\n\n\nPapa, Enrica, Cecilia Silva, Marco Te Brömmelstroet, e Angela Hull. 2015. «Accessibility Instruments for Planning Practice: A Review of European Experiences». Journal of Transport and Land Use, junho. https://doi.org/10.5198/jtlu.2015.585.\n\n\nVenter, Christoffel. 2016. «Assessing the Potential of Bus Rapid Transit-Led Network Restructuring for Enhancing Affordable Access to Employment The Case of Johannesburg’s Corridors of Freedom». Research in Transportation Economics 59 (novembro): 441–49. https://doi.org/10.1016/j.retrec.2016.05.006.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Medidas de acessibilidade</span>"
    ]
  },
  {
    "objectID": "3_calculando_acesso.html",
    "href": "3_calculando_acesso.html",
    "title": "3  Calculando estimativas de acessibilidade em R",
    "section": "",
    "text": "3.1 Cálculo da matriz de tempo de viagem\nA primeira etapa necessária para estimar os níveis de acessibilidade de uma área de estudo é calcular a matriz de custo de viagem entre as diversas origens e destinos que a compõem. Como comentado anteriormente, na literatura científica e na prática do planejamento de sistemas de transporte esse custo é mais frequentemente representado pelo tempo de viagem que separa dois pontos (El-Geneidy et al. 2016; Venter 2016), embora trabalhos recentes tenham considerado também outros fatores, como o dinheiro necessário para realizar uma viagem e o nível de conforto da viagem entre um ponto e outro (Arbex e Cunha 2020; Herszenhut et al. 2022). Neste livro, iremos nos focar em matrizes de tempo de viagem por serem as mais utilizadas na literatura e na prática, mas iremos cobrir outros tipos de custos num futuro livro sobre análise avançada de acessibilidade em R.\nAtualmente, a forma mais fácil e rápida de gerar uma matriz de tempo de viagem em R é utilizando o pacote {r5r} (Pereira et al. 2021), desenvolvido pela equipe do Projeto Acesso a Oportunidades, do Instituto de Pesquisa Econômica Aplicada (Ipea). O pacote utiliza, por trás dos panos, o software de roteamento de transporte multimodal R5, desenvolvido pela Conveyal1.",
    "crumbs": [
      "SEÇÃO 2: Como calcular acessibilidade urbana",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Calculando estimativas de acessibilidade em R</span>"
    ]
  },
  {
    "objectID": "3_calculando_acesso.html#sec-matrix",
    "href": "3_calculando_acesso.html#sec-matrix",
    "title": "3  Calculando estimativas de acessibilidade em R",
    "section": "",
    "text": "3.1.1 Instalação do {r5r}\nA instalação do {r5r} funciona como a instalação de qualquer pacote de R (todos os exemplos de código a seguir devem ser rodados em uma sessão de R).\n\ninstall.packages(\"r5r\")\n\nAlém do R, o pacote {r5r} requer também a instalação do Java 112. Use o comando a seguir para checar a versão do Java instalada em seu computador.\n\ncat(processx::run(\"java\", args = \"-version\")$stderr)\n\nopenjdk version \"11.0.24\" 2024-07-16 LTS\nOpenJDK Runtime Environment Zulu11.74+15-CA (build 11.0.24+8-LTS)\nOpenJDK 64-Bit Server VM Zulu11.74+15-CA (build 11.0.24+8-LTS, mixed mode)\n\n\nComo podemos ver, a versão instalada no livro é compatível com o {r5r}. Caso a versão instalada na sua máquina não o seja (resultado do código mencionando a versão 12 ou 1.8.0, por exemplo), será necessário atualizar o Java para a versão 11.\n\n\n3.1.2 Dados necessários\nO uso do pacote {r5r} requer diferentes tipos de dados. A lista a seguir descreve cada um deles, comenta sobre sua obrigatoriedade e apresenta algumas fontes onde esses dados podem ser obtidos.\n\nRede viária (obrigatório): um arquivo com a rede viária e de infraestrutura de pedestres do OpenStreetMap (OSM), em formato .pbf. Pode ser baixado com:\n\n{osmextract}, pacote de R;\nGeofabrik, website;\nHOT Export Tool, website;\nBBBike Extract Service, website.\n\n\n\n\n\n\n\n\nQualidade dos dados do OSM\n\n\n\nO OSM é uma base de dados geográfica que traz informações sobre malha viária, prédios, parques etc. Por ser uma base de dados alimentada voluntariamente pela comunidade que a utiliza, a cobertura e a qualidade dos dados do OSM podem variar muito entre regiões (Barrington-Leigh e Millard-Ball 2017). Via de regra, os dados do OSM no Brasil e no mundo tendem a ter melhor cobertura e qualidade em regiões mais desenvolvidas e áreas urbanas com grandes populações (Barrington-Leigh e Millard-Ball 2017; Camboim, Bravo, e Sluter 2015).\n\n\n\nRede de transporte público (opcional): um ou mais arquivos GTFS descrevendo a rede de transporte público da área de estudo. Caso ausente, deslocamentos por transporte público não são considerados no cálculo da matriz de tempo de viagem. Esses dados podem ser baixados com:\n\n{tidytransit}, pacote de R;\nTransitland, website;\nNo Capítulo 4 deste livro (Tabela 4.9) indicamos também onde baixar dados GTFS de algumas cidades brasileiras que compartilham seus dados publicamente.\n\nTopografia (opcional): um arquivo de dados raster contendo o modelo digital de elevação da área de estudo em formato .tif/.tiff. Deve ser utilizado caso se deseje levar em consideração os efeitos da topografia do local sobre os tempos de caminhada e de viagens de bicicleta. Pode ser baixado com:\n\n{elevatr}, pacote de R;\nSRTMGL1, website.\n\n\nEsses dados devem ser salvos em uma mesma pasta que, preferencialmente, não contenha nenhum outro arquivo. Como veremos adiante, o {r5r} combina todos os dados salvos nessa pasta para criar uma rede de transporte multimodal que é utilizada no roteamento de viagens entre pares origem-destino e, consequentemente, no cálculo das matrizes de tempo de viagem. Note que é possível ter mais de um arquivo GTFS na mesma pasta: nesse caso, o {r5r} considera as redes de transporte público de todos os feeds de forma conjunta. No entanto, a rede viária e a topografia da área de estudo devem ser descritas por um único arquivo cada. Assumindo que os scripts de R estejam em uma pasta chamada R, uma possível organização dos arquivos segue o esquema a seguir:\n\n\n/tmp/RtmpBq7rcb/projeto_acessibilidade\n├── R\n│   ├── script1.R\n│   └── script2.R\n└── r5\n    ├── rede_transporte_publico.zip\n    ├── rede_viaria.osm.pbf\n    └── topografia.tif\n\n\nPara ilustrar as funcionalidades do {r5r}, vamos usar uma pequena amostra de dados da cidade de Porto Alegre (Brasil). Esses dados estão disponíveis dentro do próprio pacote {r5r}, e seu endereço pode ser acessado com o comando a seguir:\n\npasta &lt;- system.file(\"extdata/poa\", package = \"r5r\")\npasta\n\n[1] \"/home/runner/work/intro_access_book/intro_access_book/renv/library/R-4.4/x86_64-pc-linux-gnu/r5r/extdata/poa\"\n\n\n\nfs::dir_tree(pasta)\n\n\n\n/home/runner/work/intro_access_book/intro_access_book/renv/library/R-4.4/x86_64-pc-linux-gnu/r5r/extdata/poa\n├── poa_elevation.tif\n├── poa_eptc.zip\n├── poa_hexgrid.csv\n├── poa_osm.pbf\n├── poa_points_of_interest.csv\n└── poa_trensurb.zip\n\n\nEsta pasta possui cinco arquivos que vamos utilizar ao longo deste capítulo, conforme enumerado a seguir:\n\nA rede viária do OSM: poa_osm.pbf.\nUm feed de GTFS descrevendo algumas linhas da rede de ônibus da cidade: poa_eptc.zip.\nUm feed de GTFS descrevendo algumas linhas da rede de trem da cidade: poa_trensurb.zip.\nO modelo digital de elevação da cidade: poa_elevation.tif.\nO arquivo poa_hexgrid.csv, com as coordenadas geográficas dos centroides de uma grade hexagonal regular que cobre toda a área de estudo e com informações sobre o tamanho da população residente e o número de empregos, hospitais e escolas em cada hexágono. Esses pontos serão utilizados como as origens e os destinos no cálculo da matriz de tempo de viagem.\n\n\n\n3.1.3 Calculando a matriz de tempo de viagem\nAntes de calcular a matriz de tempo de viagem, precisamos aumentar a memória disponível para a execução de processos do Java, linguagem em que o R5 é escrito. Isso é necessário porque, por padrão, o R aloca apenas 512 MB de memória para processos do Java, o que frequentemente não é suficiente para o cálculo de grandes matrizes com o {r5r}. Para aumentar a memória disponível para 2 GB, por exemplo, usamos o seguinte comando no início do script, antes mesmo de carregar as bibliotecas de R necessárias para a nossa análise:\n\noptions(java.parameters = \"-Xmx2G\")\n\nFeito isso, podemos prosseguir com o cálculo da matriz de tempo de viagem, realizado em dois passos. O primeiro é gerar a rede de transporte multimodal que será utilizada no roteamento. Para isso, carregamos a biblioteca {r5r} e utilizamos a função setup_r5(), que baixa o software de roteamento R5 e o utiliza para criar a rede. Essa função recebe como input o caminho da pasta onde os dados necessários para o roteamento estão armazenados. Como resultado, a função salva na pasta alguns arquivos necessários para o roteamento e retorna uma conexão com o R5, que nesse exemplo foi armazenada na variável conexao_r5r. Essa conexão é responsável por garantir que o roteamento seja feito com a rede de transportes descrita pelos arquivos dentro da pasta e é utilizada no cálculo da matriz de tempo de viagem.\n\nlibrary(r5r)\n\nconexao_r5r &lt;- setup_r5(pasta, verbose = FALSE)\n\nfs::dir_tree(pasta)\n\n/home/runner/work/intro_access_book/intro_access_book/renv/library/R-4.4/x86_64-pc-linux-gnu/r5r/extdata/poa\n├── fares\n│   └── fares_poa.zip\n├── network.dat\n├── network_settings.json\n├── poa_elevation.tif\n├── poa_eptc.zip\n├── poa_hexgrid.csv\n├── poa_osm.pbf\n├── poa_osm.pbf.mapdb\n├── poa_osm.pbf.mapdb.p\n├── poa_points_of_interest.csv\n└── poa_trensurb.zip\n\n\nO passo final consiste em calcular a matriz de tempo de viagem com a função travel_time_matrix(). Como inputs básicos, a função recebe a conexão com o R5 criada no passo anterior, pontos de origem e destino em formato data.frame com as colunas id, lon e lat, o modo de transporte a ser utilizado, o horário de partida, o tempo máximo de caminhada permitido da origem até o embarque no transporte público e do desembarque até o destino e o tempo máximo de viagem a ser considerado. Diversos outros inputs também podem ser usados, como a velocidade de caminhada e o número máximo de pernas de transporte público permitido, entre outros3.\n\npontos &lt;- data.table::fread(file.path(pasta, \"poa_hexgrid.csv\"))\n\nmatriz &lt;- travel_time_matrix(\n  conexao_r5r,\n  origins = pontos,\n  destinations = pontos,\n  mode = c(\"WALK\", \"TRANSIT\"),\n  departure_datetime = as.POSIXct(\n    \"13-05-2019 14:00:00\",\n    format = \"%d-%m-%Y %H:%M:%S\"\n  ),\n  max_walk_time = 30,\n  max_trip_duration = 120,\n  verbose = FALSE,\n  progress = FALSE\n)\n\nhead(matriz)\n\n           from_id           to_id travel_time_p50\n1: 89a901291abffff 89a901291abffff               1\n2: 89a901291abffff 89a9012a3cfffff              71\n3: 89a901291abffff 89a901295b7ffff              41\n4: 89a901291abffff 89a901284a3ffff              57\n5: 89a901291abffff 89a9012809bffff              43\n6: 89a901291abffff 89a901285cfffff              35\n\n\nNa prática, a função travel_time_matrix() encontra a rota mais rápida partindo de cada ponto de origem para todos os possíveis pontos de destino, considerando o modo de viagem, o horário de partida e os demais parâmetros passados pelo usuário. Para isso, o {r5r} considera tempos de viagem de porta a porta: no caso de uma viagem por transporte público, por exemplo, o tempo total de viagem inclui: i) o tempo de caminhada até a parada de transporte público; ii) o tempo de espera pelo veículo na parada; iii) o tempo de deslocamento dentro do veículo; e iv) o tempo de viagem a pé da parada de desembarque até o destino. Em casos em que mais de uma rota de transporte público é utilizada, o {r5r} também contabiliza o tempo gasto nas conexões, considerando a caminhada entre paradas e o tempo de espera pelo próximo veículo.\n\n\n\n\n\n\nVelocidade de roteamento com a travel_time_matrix()\n\n\n\nA função travel_time_matrix() utiliza uma extensão do algoritmo de roteamento RAPTOR (Conway, Byrd, e van der Linden 2017), o que torna o R5 extremamente rápido. A depender da quantidade de pares origem-destino, o {r5r} pode ser entre 6 e 200 vezes mais rápido do que outros softwares de roteamento multimodal no cálculo de matrizes de tempo de viagem (Higgins et al. 2022).",
    "crumbs": [
      "SEÇÃO 2: Como calcular acessibilidade urbana",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Calculando estimativas de acessibilidade em R</span>"
    ]
  },
  {
    "objectID": "3_calculando_acesso.html#sec-accessibility",
    "href": "3_calculando_acesso.html#sec-accessibility",
    "title": "3  Calculando estimativas de acessibilidade em R",
    "section": "3.2 Cálculo de acessibilidade",
    "text": "3.2 Cálculo de acessibilidade\nCalculada a matriz de tempo de viagem entre as origens e os destinos da área de estudo, precisamos utilizá-la para calcular os níveis de acessibilidade do local. Para isso, utilizaremos o pacote {accessibility}4, também desenvolvido pela equipe do Projeto Acesso a Oportunidades/Ipea, que disponibiliza funções para o cálculo de vários indicadores de acessibilidade. Como input básico, todas as funções requerem uma matriz de custo pré-calculada (no nosso caso, a matriz de tempo de viagem calculada na seção anterior) e dados de uso do solo, como o número de determinados tipos de oportunidades em cada célula da grade que cobre a área de estudo.\n\n3.2.1 Medida de oportunidades cumulativas\nA função cumulative_cutoff() é utilizada para calcular o número de oportunidades que podem ser alcançadas em um determinado limite de custo de viagem. No exemplo a seguir, primeiro carregamos a biblioteca {accessibility} e adequamos a nossa matriz para que ela possa ser utilizada no cálculo da acessibilidade. Em seguida, calculamos o número de escolas que podem ser alcançadas em até trinta minutos de viagem a partir de cada origem presente em nossa matriz de tempo de viagem.\n\nlibrary(accessibility)\n\n# renomeia coluna para usar o pacote {accessibility}\ndata.table::setnames(matriz, \"travel_time_p50\", \"travel_time\")\n\noportunidades_cumulativas &lt;- cumulative_cutoff(\n  travel_matrix = matriz,\n  land_use_data = pontos,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  cutoff = 30\n)\n\nhead(oportunidades_cumulativas)\n\n                id schools\n1: 89a901291abffff      23\n2: 89a9012a3cfffff       0\n3: 89a901295b7ffff      18\n4: 89a901284a3ffff       4\n5: 89a9012809bffff      20\n6: 89a901285cfffff      84\n\n\n\n\n3.2.2 Custo mínimo de viagem\nA função cost_to_closest(), por sua vez, calcula o custo mínimo de viagem necessário para alcançar um determinado número de oportunidades. Com o código a seguir, por exemplo, calculamos o tempo de viagem mínimo para alcançar a escola mais próxima a partir de cada origem.\n\ncusto_minimo &lt;- cost_to_closest(\n  travel_matrix = matriz,\n  land_use_data = pontos,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\"\n)\n\nhead(custo_minimo)\n\n                id travel_time\n1: 89a9012124fffff           0\n2: 89a9012126bffff          16\n3: 89a9012127bffff          14\n4: 89a90128003ffff           7\n5: 89a90128007ffff          15\n6: 89a9012800bffff           0\n\n\n\n\n3.2.3 Medidas gravitacionais\nA função gravity() calcula medidas gravitacionais de acessibilidade, aquelas nas quais o peso de cada oportunidade diminui gradualmente com o aumento do custo de viagem. Existe, no entanto, uma gama de diferentes tipos de funções de decaimento que podem ser utilizadas, como funções de decaimento exponenciais negativas, de potências inversas, entre outras. Por isso, essa função recebe um input adicional: a função de decaimento a ser utilizada no cálculo. O exemplo adiante apresenta o cálculo de acessibilidade a estabelecimentos de educação usando uma medida gravitacional exponencial negativa com parâmetro de decaimento igual a 0,2.\n\ngrav_exp_negativa &lt;- gravity(\n  travel_matrix = matriz,\n  land_use_data = pontos,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  decay_function = decay_exponential(0.2)\n)\n\nhead(grav_exp_negativa)\n\n                id     schools\n1: 89a901291abffff 0.428108826\n2: 89a9012a3cfffff 0.003987477\n3: 89a901295b7ffff 0.606786304\n4: 89a901284a3ffff 0.079661746\n5: 89a9012809bffff 0.494632773\n6: 89a901285cfffff 1.987657134\n\n\n\n\n3.2.4 Medidas com competição\nPor fim, a função floating_catchment_area() calcula níveis de acessibilidade levando em consideração a competição por oportunidades usando diferentes indicadores do tipo floating catchment area (FCA), “área de influência flutuante”. Como diversos métodos de FCA podem ser utilizados, a função requer que o método desejado seja explicitamente assinalado. Adicionalmente, assim como na função de acessibilidade gravitacional, a função de decaimento utilizada também deve ser definida pelo usuário. O código a seguir mostra um exemplo de cálculo de acessibilidade a escolas usando o método balanced floating catchment area (BFCA) (Paez, Higgins, e Vivona 2019), levando em consideração os efeitos de competição entre a população como um todo e uma função de decaimento exponencial com parâmetro de decaimento igual a 0,05.\n\ncompeticao_bfca &lt;- floating_catchment_area(\n  travel_matrix = matriz,\n  land_use_data = pontos,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  demand = \"population\",\n  method = \"bfca\",\n  decay_function = decay_exponential(0.05)\n)\n\nhead(competicao_bfca)\n\n                id      schools\n1: 89a901291abffff 2.628973e-04\n2: 89a9012a3cfffff 5.875302e-05\n3: 89a901295b7ffff 2.123543e-04\n4: 89a901284a3ffff 1.414356e-04\n5: 89a9012809bffff 2.254543e-04\n6: 89a901285cfffff 3.901031e-04\n\n\nAs funções apresentadas nesta seção também podem receber outros inputs não explicitamente mencionados aqui. Para mais informações sobre cada um dos parâmetros, por favor consulte a documentação do pacote {accessibility} em seu site.\n\n\n3.2.5 Cálculo de acessibilidade com o {r5r}\nNos últimos itens, mostramos como calcular níveis de acessibilidade passo a passo. Para fins didáticos, é importante entender que o cálculo de estimativas de acessibilidade tem como primeiro passo a geração de uma matriz de custos de viagens que, em seguida, é utilizada para estimar níveis de acessibilidade. No entanto, o {r5r} inclui também uma função chamada accessibility() que calcula os níveis de acessibilidade com uma única chamada, sem etapas intermediárias.\nDe forma parecida com a função de cálculo de matriz de tempo de viagem, a função accessibility() recebe como inputs uma conexão com o R5, as origens, os destinos, os modos de transporte e o tempo de partida, entre outros argumentos. Adicionalmente, devem ser listadas também quais oportunidades devem ser consideradas e a função de decaimento que deve ser utilizada, bem como o valor do limite de custo e do parâmetro de decaimento. O exemplo a seguir mostra uma aplicação dessa função.\n\nacessibilidade_r5r &lt;- accessibility(\n  conexao_r5r,\n  origins = pontos,\n  destinations = pontos,\n  opportunities_colname = \"schools\",\n  decay_function = \"step\",\n  cutoffs = 30,\n  mode = c(\"WALK\", \"TRANSIT\"),\n  departure_datetime = as.POSIXct(\n    \"13-05-2019 14:00:00\",\n    format = \"%d-%m-%Y %H:%M:%S\"\n  ),\n  max_walk_time = 30,\n  max_trip_duration = 120,\n  verbose = FALSE,\n  progress = FALSE\n)\n\nhead(acessibilidade_r5r)\n\n                id opportunity percentile cutoff accessibility\n1: 89a901291abffff     schools         50     30            21\n2: 89a9012a3cfffff     schools         50     30             0\n3: 89a901295b7ffff     schools         50     30            16\n4: 89a901284a3ffff     schools         50     30             4\n5: 89a9012809bffff     schools         50     30            17\n6: 89a901285cfffff     schools         50     30            78\n\n\nUma pequena diferença entre o comportamento da função r5r::accessibility() e o da cumulative_cutoff() do pacote {accessibility} está no fato de que na função do {r5r} pares origem-destino cujos tempos de viagem são iguais ao valor definido como limite são excluídos do cálculo da acessibilidade, enquanto na função do pacote {accessibility} eles são incluídos. Ou seja, para simularmos o cálculo anterior com a cumulative_cutoff(), precisamos estabelecer um tempo de viagem limite de 29 minutos, e não trinta. No código a seguir, comparamos os resultados das duas funções.\n\nops_cumulativas_29 &lt;- cumulative_cutoff(\n  travel_matrix = matriz,\n  land_use_data = pontos,\n  opportunity = \"schools\",\n  travel_cost = \"travel_time\",\n  cutoff = 29\n)\n\n# compara os niveis de acessibilidade calculados das duas maneiras distintas\ncomparacao_acessibilidade &lt;- merge(\n  acessibilidade_r5r,\n  ops_cumulativas_29,\n  by = \"id\"\n)\n\n# renomeia colunas com niveis de acessibilidade\ndata.table::setnames(\n  comparacao_acessibilidade,\n  old = c(\"accessibility\", \"schools\"),\n  new = c(\"acesso_r5r\", \"acesso_accessibility\")\n)\n\nhead(comparacao_acessibilidade[, .(id, acesso_r5r, acesso_accessibility)])\n\n                id acesso_r5r acesso_accessibility\n1: 89a9012124fffff          1                    1\n2: 89a9012126bffff         12                   12\n3: 89a9012127bffff         14                   14\n4: 89a90128003ffff         30                   30\n5: 89a90128007ffff         21                   21\n6: 89a9012800bffff         29                   29\n\n\nComo podemos observar, fora a pequena diferença de comportamento, o resultado das duas funções é o mesmo. A principal diferença entre os dois métodos, no entanto, é que a informação “intermediária” do tempo de viagem entre origens e destinos não fica disponível ao usuário com o uso da função accessibility() do pacote {r5r}. Ainda assim, esse fluxo de trabalho pode ser uma boa alternativa para pessoas que estejam interessadas unicamente nos níveis de acessibilidade, não dependendo do tempo de viagem em suas análises. Note também que o pacote {accessibility} possui uma gama mais ampla de indicadores de acessibilidade e permite que os usuários definam funções de decaimento personalizadas.\n\n\n\n\n\n\nConsiderando outros tipos de custo de viagem no cálculo da acessibilidade\n\n\n\nOutra diferença entre a função de acessibilidade do {r5r} e as funções do pacote {accessibility} está no fato de que estas podem trabalhar com variados tipos de custo de viagem, como tempo, custo monetário, conforto etc. A função do {r5r}, porém, é menos flexível, limitando-se a considerar apenas restrições de tempo de viagem.",
    "crumbs": [
      "SEÇÃO 2: Como calcular acessibilidade urbana",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Calculando estimativas de acessibilidade em R</span>"
    ]
  },
  {
    "objectID": "3_calculando_acesso.html#análises-de-acessibilidade",
    "href": "3_calculando_acesso.html#análises-de-acessibilidade",
    "title": "3  Calculando estimativas de acessibilidade em R",
    "section": "3.3 Análises de acessibilidade",
    "text": "3.3 Análises de acessibilidade\nCalculados os níveis de acessibilidade, seguimos então para sua análise. Existe uma grande variedade de análises que podem ser feitas usando esses dados: por exemplo, diagnósticos das condições de acessibilidade urbana de diferentes bairros, pesquisas sobre desigualdades de acesso a oportunidades entre diferentes grupos sociais, análises sobre exclusão social e accessibility poverty (insuficiência de acessibilidade) etc. Nesta seção, no entanto, apresentaremos apenas duas análises relativamente simples e de fácil comunicação: a distribuição espacial da acessibilidade e sua distribuição entre diferentes grupos de renda.\n\n3.3.1 Distribuição espacial de acessibilidade urbana\nPara compreendermos a distribuição espacial da acessibilidade urbana de uma determinada cidade ou região, primeiro precisamos obter as informações espaciais dos pontos que foram utilizados como origens e destinos no cálculo da matriz. Os pontos que usamos nos exemplos anteriores, por exemplo, correspondem aos centroides de células de uma grade hexagonal baseadas no índice H3, desenvolvido pela Uber (Brodsky 2018). A grade de Porto Alegre e algumas informações sociodemográficas e de uso do solo da cidade são disponibilizadas pela equipe do Projeto Acesso a Oportunidades através do pacote de R {aopdata}. O pacote e suas funções são apresentados em detalhes na Seção 5. Com o código adiante, carregamos a biblioteca de visualização de dados, baixamos as informações espaciais da grade e as apresentamos em forma de mapa.\n\nlibrary(ggplot2)\n\n# baixa a grade espacial\ngrade_poa &lt;- aopdata::read_grid(city = \"Porto Alegre\")\n\n# mantem na grade apenas os hexagonos utilizados na analise\ngrade_poa &lt;- subset(grade_poa, id_hex %in% pontos$id)\n\n# visualizando o mapa\nggplot(grade_poa) + geom_sf() + theme_minimal()\n\n\n\n\n\n\n\nFigura 3.1: Grade hexagonal cobrindo a região central de Porto Alegre.\n\n\n\n\n\nPara visualizarmos os dados de acessibilidade espacialmente, precisamos unir a tabela de estimativas de acessibilidade (considerando os níveis calculados com a medida de oportunidades cumulativas) com a tabela que contém os dados espaciais da grade, usando as colunas de identificação dos hexágonos como colunas-chave. Essa operação e seu resultado em formato de mapa são apresentados a seguir.\n\n# junta as tabelas de dados espaciais e de niveis de acessibilidade\nacesso_espacial &lt;- merge(\n  grade_poa,\n  oportunidades_cumulativas,\n  by.x = \"id_hex\",\n  by.y = \"id\"\n)\n\n# configura mapa\nggplot(acesso_espacial) +\n  geom_sf(aes(fill = schools), color = NA) +\n  scale_fill_viridis_c(option = \"inferno\") +\n  labs(fill = \"Escolas\\nacessíveis\") +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 3.2: Distribuição espacial da acessibilidade a escolas na região central de Porto Alegre\n\n\n\n\n\nComo podemos ver, os níveis de acessibilidade tendem a se concentrar de forma mais acentuada no centro da cidade, onde existe maior concentração de escolas, e próximos aos grandes corredores de transporte da cidade. Por terem fácil acesso a modos de alta capacidade e velocidade, pessoas que moram mais perto desses corredores tendem a acessar locais distantes de forma relativamente rápida. Em contraste, pessoas que moram mais afastadas desses corredores dependem de modos de menor menor frequência e velocidade operacional (como os ônibus municipais, por exemplo) e precisam gastar mais tempo para alcançar os corredores de média e alta capacidade. Como consequência, os níveis de acessibilidade de pessoas que moram afastadas do centro e de corredores de alta capacidade tendem a ser menores.\n\n\n3.3.2 Distribuição socioeconômica de acessibilidade urbana\nA Figura 3.2, embora seja reveladora quanto aos locais em que estão dispostas as maiores concentrações de acessibilidade, nada mostra sobre os grupos socioeconômicos que possuem os maiores potenciais de acesso a oportunidades na região. Para isso, precisamos cruzar as informações demográficas e econômicas das pessoas que moram em cada um dos pontos de origem com os dados de acessibilidade previamente calculados.\nNo exemplo abaixo, juntamos aos dados de acessibilidade a informação do decil de renda de cada uma das origens, considerando a renda média de cada uma das pessoas que as habitam (dado também proveniente do pacote {aopdata}). Assim, conseguimos identificar se um hexágono é de baixa, média ou alta renda.\n\npopulacao_poa &lt;- aopdata::read_population(\"Porto Alegre\", showProgress = FALSE)\n\n# renomeia colunas com contagem populacional e decil de renda\ndata.table::setnames(\n  populacao_poa,\n  old = c(\"P001\", \"R003\"),\n  new = c(\"contagem_pop\", \"decil\")\n)\n\n# junta as tabelas de niveis de acessibilidade espacializados e dados sociodem.\nacesso_sociodemografico &lt;- merge(\n  acesso_espacial,\n  populacao_poa,\n  by = \"id_hex\"\n)\n\nhead(acesso_sociodemografico[, c(\"id_hex\", \"schools\", \"contagem_pop\", \"decil\")])\n\nSimple feature collection with 6 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -51.25678 ymin: -30.1111 xmax: -51.19031 ymax: -30.06699\nGeodetic CRS:  WGS 84\n           id_hex schools contagem_pop decil                           geom\n1 89a9012124fffff       1          733     9 POLYGON ((-51.25083 -30.111...\n2 89a9012126bffff      13          355     9 POLYGON ((-51.25369 -30.106...\n3 89a9012127bffff      14          996    10 POLYGON ((-51.2538 -30.1094...\n4 89a90128003ffff      34         1742     4 POLYGON ((-51.19446 -30.071...\n5 89a90128007ffff      23          477     5 POLYGON ((-51.19744 -30.069...\n6 89a9012800bffff      34          501     4 POLYGON ((-51.19137 -30.070...\n\n\nTendo a informação do decil de renda em que cada hexágono se encontra, podemos calcular a distribuição da acessibilidade da população dentro de cada um desses níveis de renda. Para isso, precisamos ponderar o nível de acessibilidade de cada origem pela quantidade de pessoas que residem ali - daí o porquê de termos também trazido a informação da contagem populacional em cada hexágono. Fazendo a ponderação, obtemos a distribuição da acessibilidade das pessoas localizadas em origens de um determinado decil de renda. Caso não ponderássemos, no entanto, teríamos a distribuição de acessibilidade não das pessoas localizadas em cada hexágono, mas dos hexágonos em si. Como em nossa análise nos importamos com as pessoas, e não com as unidades espaciais em que elas estão agregadas, precisamos fazer a ponderação. Podemos visualizar a distribuição de acessibilidade de cada decil usando um box plot, como mostrado a seguir.\n\nggplot(subset(acesso_sociodemografico, !is.na(decil))) +\n  geom_boxplot(\n    aes(\n      x = as.factor(decil),\n      y = schools,\n      color = as.factor(decil),\n      weight = contagem_pop\n    )\n  ) +\n  labs(\n    color = \"Decil de\\nrenda\",\n    x = \"Decil de renda\",\n    y = \"Escolas acessíveis\"\n  ) +\n  scale_color_brewer(palette = \"RdBu\") +\n  scale_x_discrete(\n    labels = c(\"D1\\nmais\\npobres\", paste0(\"D\", 2:9), \"D10\\nmais\\nricos\")\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 3.3: Distribuição da acessibilidade a escolas na região central de Porto Alegre entre decis de renda\n\n\n\n\n\nA Figura 3.3 é muito clara em seu conteúdo: pessoas de mais baixa renda tendem a ter níveis de acessibilidade consideravelmente menores do que as de alta renda. Esse é um padrão comum em praticamente todas as cidades brasileiras (Pereira et al. 2019) que ocorre, em larga medida, devido à localização espacial das comunidades de baixa e alta renda no território: os mais ricos costumam morar em áreas mais valorizadas, próximas das grandes concentrações de empregos (e oportunidades de educação, saúde, lazer etc.) e com maior oferta de transporte público de média e alta capacidade. Os mais pobres, por sua vez, tendem a morar em locais mais afastados, onde o valor da terra é menor. Consequentemente, tendem também a se afastar das grandes concentrações de oportunidades. Junta-se a isso o fato de, na maior parte dos casos, a oferta de serviços de transporte público de média e alta capacidade ser pior em locais com maior concentração de pessoas de baixa renda. Sendo assim, seus níveis de acessibilidade são, em média, muito menores do que os dos mais ricos, como indicado pelos dados apresentados.\n\n\n\n\nArbex, Renato, e Claudio B. Cunha. 2020. «Estimating the Influence of Crowding and Travel Time Variability on Accessibility to Jobs in a Large Public Transport Network Using Smart Card Big Data». Journal of Transport Geography 85: 102671. https://doi.org/10.1016/j.jtrangeo.2020.102671.\n\n\nBarrington-Leigh, Christopher, e Adam Millard-Ball. 2017. «The World’s User-Generated Road Map Is More Than 80% Complete». PLOS ONE 12 (8): e0180698. https://doi.org/10.1371/journal.pone.0180698.\n\n\nBrodsky, Isaac. 2018. «H3: Uber’s Hexagonal Hierarchical Spatial Index». Uber Engineering Blog. https://eng.uber.com/h3/.\n\n\nCamboim, Silvana Philippi, João Vitor Meza Bravo, e Claudia Robbi Sluter. 2015. «An Investigation into the Completeness of, and the Updates to, OpenStreetMap Data in a Heterogeneous Area in Brazil». ISPRS International Journal of Geo-Information 4 (3): 1366–88. https://doi.org/10.3390/ijgi4031366.\n\n\nConway, Matthew Wigginton, Andrew Byrd, e Marco van der Linden. 2017. «Evidence-Based Transit and Land Use Sketch Planning Using Interactive Accessibility Methods on Combined Schedule and Headway-Based Networks». Transportation Research Record: Journal of the Transportation Research Board 2653 (1): 45–53. https://doi.org/10.3141/2653-06.\n\n\nEl-Geneidy, Ahmed, David Levinson, Ehab Diab, Genevieve Boisjoly, David Verbich, e Charis Loong. 2016. «The Cost of Equity: Assessing Transit Accessibility and Social Disparity Using Total Travel Cost». Transportation Research Part A: Policy and Practice 91 (setembro): 302–16. https://doi.org/10.1016/j.tra.2016.07.003.\n\n\nHerszenhut, Daniel, Rafael H. M. Pereira, Licinio da Silva Portugal, e Matheus Henrique de Sousa Oliveira. 2022. «The Impact of Transit Monetary Costs on Transport Inequality». Journal of Transport Geography 99 (fevereiro): 103309. https://doi.org/10.1016/j.jtrangeo.2022.103309.\n\n\nHiggins, Christopher, Matthew Palm, Amber DeJohn, Luna Xi, James Vaughan, Steven Farber, Michael Widener, e Eric Miller. 2022. «Calculating Place-Based Transit Accessibility: Methods, Tools and Algorithmic Dependence». Journal of Transport and Land Use 15 (1). https://doi.org/10.5198/jtlu.2022.2012.\n\n\nPaez, Antonio, Christopher D. Higgins, e Salvatore F. Vivona. 2019. «Demand and Level of Service Inflation in Floating Catchment Area (FCA) Methods». Editado por Tayyab Ikram Shah. PLOS ONE 14 (6): e0218773. https://doi.org/10.1371/journal.pone.0218773.\n\n\nPereira, Rafael H. M., Carlos Kaue Vieira Braga, Bernardo Serra, e Vanessa Nadalin. 2019. «Desigualdades socioespaciais de acesso a oportunidades nas cidades brasileiras, 2019». {Texto para Discuss\\~ao} 2535. Instituto de Pesquisa Econômica Aplicada (Ipea).\n\n\nPereira, Rafael H. M., Marcus Saraiva, Daniel Herszenhut, Carlos Kaue Vieira Braga, e Matthew Wigginton Conway. 2021. «R5r: Rapid Realistic Routing on Multimodal Transport Networks with R5 in R». Transport Findings, março, 21262. https://doi.org/10.32866/001c.21262.\n\n\nVenter, Christoffel. 2016. «Assessing the Potential of Bus Rapid Transit-Led Network Restructuring for Enhancing Affordable Access to Employment The Case of Johannesburg’s Corridors of Freedom». Research in Transportation Economics 59 (novembro): 441–49. https://doi.org/10.1016/j.retrec.2016.05.006.",
    "crumbs": [
      "SEÇÃO 2: Como calcular acessibilidade urbana",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Calculando estimativas de acessibilidade em R</span>"
    ]
  },
  {
    "objectID": "3_calculando_acesso.html#footnotes",
    "href": "3_calculando_acesso.html#footnotes",
    "title": "3  Calculando estimativas de acessibilidade em R",
    "section": "",
    "text": "Disponível em https://github.com/conveyal/r5.↩︎\nO Java 11 pode ser baixado em https://www.oracle.com/java/technologies/downloads/#java11 ou em https://jdk.java.net/java-se-ri/11.↩︎\nPara mais informações sobre cada um dos parâmetros, consulte a documentação da função em uma sessão de R (com os comandos ?travel_time_matrix() ou help(“travel_time_matrix”)) ou no site do {r5r}, disponível em https://ipeagit.github.io/r5r/reference/travel_time_matrix.html.↩︎\nDisponível em https://github.com/ipeaGIT/accessibility.↩︎",
    "crumbs": [
      "SEÇÃO 2: Como calcular acessibilidade urbana",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Calculando estimativas de acessibilidade em R</span>"
    ]
  },
  {
    "objectID": "4_dados_gtfs.html",
    "href": "4_dados_gtfs.html",
    "title": "4  Dados GTFS",
    "section": "",
    "text": "4.1 Estrutura de arquivos GTFS\nArquivos no formato GTFS Schedule (daqui em diante chamado apenas de GTFS) também são conhecidos pela denominação feed2. Um feed é nada mais do que um arquivo comprimido em formato .zip que contém um conjunto de tabelas, salvas em formato .txt, com algumas informações sobre a rede de transporte público (localização das paradas, frequências das viagens, traçado das rotas, entre outras). Como em uma base de dados relacional, as tabelas de um feed possuem colunas-chaves que permitem vincular os dados de rotas, viagens e tabelas de horários entre si. O esquema geral do formato GTFS é apresentado na Figura 4.1, que mostra algumas das principais tabelas que compõem a especificação e destaca como elas se relacionam a partir de suas colunas-chaves.\nFigura 4.1: Esquema do formato GTFS. Fonte: Pereira, Andrade, e Vieira (2022)\nAo todo, 22 tabelas compõem o formato GTFS3. Nem todas, no entanto, devem estar obrigatoriamente presentes para que um feed seja considerado válido, sendo consideradas, portanto, opcionais. A especificação classifica cada tabela conforme sua obrigatoriedade em três possíveis categorias: obrigatórias, opcionais e condicionalmente obrigatórias (quando a obrigatoriedade de uma tabela depende da existência de uma determinada tabela, coluna ou valor). Para fins de simplicidade, neste livro consideraremos apenas as duas primeiras categorias e faremos comentários quanto à obrigatoriedade de cada tabela quando apropriado. Dessa forma, as tabelas ficam classificadas conforme a seguir.\nAo longo desta seção, aprenderemos sobre a estrutura básica de um arquivo GTFS e das tabelas que o compõem. Portanto, vamos olhar apenas para as tabelas obrigatórias e para as tabelas opcionais mais frequentemente utilizadas por produtores e consumidores desses arquivos4.\nNa demonstração que será feita aqui, utilizaremos um subconjunto de dados provenientes do feed da cidade de São Paulo criado pela São Paulo Transporte (SPTrans)5 e baixado em outubro de 2019. O feed contém as seis tabelas obrigatórias e mais duas tabelas opcionais bastante utilizadas, a shapes.txt e a frequencies.txt, o que permite uma boa visão geral sobre o formato GTFS.",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dados GTFS</span>"
    ]
  },
  {
    "objectID": "4_dados_gtfs.html#estrutura-de-arquivos-gtfs",
    "href": "4_dados_gtfs.html#estrutura-de-arquivos-gtfs",
    "title": "4  Dados GTFS",
    "section": "",
    "text": "Obrigatórias: agency.txt; stops.txt; routes.txt; trips.txt; stop_times.txt; calendar.txt.\nOpcionais: calendar_dates.txt; fare_attributes.txt; fare_rules.txt; fare_products.txt; fare_leg_rules.txt; fare_transfer_rules.txt; areas.txt; stop_areas.txt; shapes.txt; frequencies.txt; transfers.txt; pathways.txt; levels.txt; translations.txt; feed_info.txt; attributions.txt.\n\n\n\n\n4.1.1 agency.txt\nArquivo utilizado para descrever as operadoras de transporte que atuam no sistema descrito pelo arquivo GTFS. Embora o termo agency (agência) seja usado em lugar de operators (operadoras), por exemplo, fica a cargo do produtor do feed definir quais instituições serão listadas na tabela.\nPor exemplo: múltiplas concessionárias de ônibus atuam em um determinado local, mas todo o planejamento de cronograma e de tarifa é realizado por uma única instituição, em geral uma secretaria de transporte ou empresa pública específica. Essa instituição é também entendida pelos usuários do sistema como a operadora, de fato. Nesse caso, devemos listar a instituição responsável pelo planejamento na tabela.\nAgora, imagine um sistema em que a agência de transporte público local transfere a responsabilidade da operação de um sistema multimodal a diversas empresas, por meio de concessões. Cada uma dessas empresas é responsável pelo planejamento de cronogramas e tarifas dos modos que operam, desde que sejam seguidos determinados parâmetros preestabelecidos em contrato. Sendo assim, devemos listar as operadoras (concessionárias) na tabela, e não a agência de transporte público em si.\nA Tabela 4.1 mostra o arquivo agency.txt do feed da SPTrans. Como podemos ver, os responsáveis pelo feed optaram por listar a própria empresa no arquivo, e não as concessionárias que operam os ônibus e o metrô da cidade.\n\n\n\n\nTabela 4.1: Exemplo de arquivo agency.txt. Fonte: SPTrans\n\n\n\n\n\n\n\n\n\n\n\n\n\nagency_id\nagency_name\nagency_url\nagency_timezone\nagency_lang\n\n\n\n\n1\nSPTRANS\nhttp://www.sptrans.com.br/?versao=011019\nAmerica/Sao_Paulo\npt\n\n\n\n\n\n\n\n\nÉ necessário notar que, embora estejamos apresentando o agency.txt em formato de tabela, o arquivo deve ser formatado como se fosse salvo em formato .csv. Ou seja, os valores de cada célula da tabela devem ser separados por vírgulas, e cada linha da tabela deve constar em uma linha no arquivo. A Tabela 4.1, por exemplo, é definida da seguinte forma:\n\n\nagency_id,agency_name,agency_url,agency_timezone,agency_lang\n1,SPTRANS,http://www.sptrans.com.br/?versao=011019,America/Sao_Paulo,pt \n\n\nPor uma questão de comunicação e interpretação dos dados, apresentaremos os exemplos em formato de tabela. É importante ter em mente, porém, que essas tabelas são organizadas como mostrado anteriormente.\n\n\n4.1.2 stops.txt\nArquivo usado para descrever as paradas de transporte público que compõem o sistema. Os pontos listados neste arquivo podem fazer menção a paradas mais simples (como pontos de ônibus), estações, plataformas, entradas e saídas de estações etc. A Tabela 4.2 mostra o stops.txt do feed da SPTrans.\n\n\n\n\nTabela 4.2: Exemplo de arquivo stops.txt. Fonte: SPTrans\n\n\n\n\n\n\n\n\n\n\n\n\n\nstop_id\nstop_name\nstop_desc\nstop_lat\nstop_lon\n\n\n\n\n706325\nParada 14 Bis B/C\nViad. Dr. Plínio De Queiroz, 901\n-23.55593\n-46.65011\n\n\n810602\nR. Sta. Rita, 56\nRef.: R. Bresser / R. João Boemer\n-23.53337\n-46.61229\n\n\n910776\nAv. Do Estado, 5854\nRef.: Rua Dona Ana Néri\n-23.55896\n-46.61520\n\n\n1010092\nParada Caetano Pinto\nAv. Rangel Pestana, 1249 Ref.: Rua Caetano Pinto/rua Prof. Batista De Andrade\n-23.54615\n-46.62218\n\n\n1010093\nParada Piratininga\nAv. Rangel Pestana, 1479 Ref.: Rua Monsenhor Andrade\n-23.54509\n-46.62006\n\n\n1010099\nR. Xavantes, 612\nRef.: Rua Joli\n-23.53545\n-46.61368\n\n\n\n\n\n\n\n\nAs colunas stop_id e stop_name servem como identificadores de cada parada, porém cumprem papéis distintos. O principal propósito da stop_id é identificar relações entre esta tabela e outras que compõem a especificação (como veremos mais à frente no arquivo stop_times.txt, por exemplo). Já a coluna stop_name cumpre o papel de um identificador facilmente reconhecido pelo passageiro. Seus valores, portanto, costumam ser nomes de estações, nomes de pontos de interesse da cidade ou endereços (como no caso do feed da SPTrans).\nA coluna stop_desc, presente no feed da SPTrans, é opcional e permite à agência de transporte adicionar uma descrição de cada parada e de seu entorno. As colunas stop_lat e stop_lon, por fim, são as responsáveis por associar cada parada a uma posição espacial, por meio de suas coordenadas geográficas de latitude e longitude.\nEntre as colunas opcionais não presentes no stops.txt deste feed estão a location_type e a parent_station. A location_type é utilizada para denotar o tipo de localização a que cada ponto se refere. Quando ausente, todos os pontos são interpretados como paradas de transporte público, mas valores distintos podem ser usados para distinguir uma parada (location_type = 0) de uma estação (location_type = 1) ou uma área de embarque (location_type = 2), por exemplo. A coluna parent_station, por sua vez, é utilizada para descrever relações de hierarquia entre dois pontos. Por exemplo, uma área de desembarque deve dizer a qual parada/plataforma ela pertence, assim como uma parada/plataforma pode também, opcionalmente, listar a qual estação ela pertence.\n\n\n4.1.3 routes.txt\nArquivo usado para descrever as linhas de transporte público que rodam no sistema, incluindo os modos de transporte utilizados em cada uma. A Tabela 4.3 mostra o routes.txt do feed da SPTrans.\n\n\n\n\nTabela 4.3: Exemplo de arquivo routes.txt. Fonte: SPTrans\n\n\n\n\n\n\n\n\n\n\n\n\n\nroute_id\nagency_id\nroute_short_name\nroute_long_name\nroute_type\n\n\n\n\nCPTM L07\n1\nCPTM L07\nJUNDIAI - LUZ\n2\n\n\nCPTM L08\n1\nCPTM L08\nAMADOR BUENO - JULIO PRESTES\n2\n\n\nCPTM L09\n1\nCPTM L09\nGRAJAU - OSASCO\n2\n\n\nCPTM L10\n1\nCPTM L10\nRIO GRANDE DA SERRA - BRÁS\n2\n\n\nCPTM L11\n1\nCPTM L11\nESTUDANTES - LUZ\n2\n\n\nCPTM L12\n1\nCPTM L12\nCALMON VIANA - BRAS\n2\n\n\n\n\n\n\n\n\nAssim como no caso do arquivo stops.txt, a tabela do routes.txt também possui diferentes colunas que apontam o identificador de cada linha (route_id) e o seu nome. Nesse caso, no entanto, existem duas colunas de nome: a route_short_name e a route_long_name. A primeira diz respeito ao nome da linha, usualmente utilizado por passageiros no dia-a-dia, enquanto o segundo tende a ser um nome mais descritivo. A SPTrans, por exemplo, optou por destacar os pontos finais de cada linha nessa coluna. Podemos notar também que os mesmos valores se repetem nas colunas route_id e route_short_name, o que não é obrigatório nem proibido - nesse caso, o produtor do feed julgou que os nomes das linhas poderiam funcionar satisfatoriamente como identificadores por serem razoavelmente curtos e não se repetirem.\nA coluna agency_id é a chave que permite relacionar a tabela das rotas com a tabela descrita no agency.txt. Ela faz menção a uma agência descrita naquele arquivo, a agência de id 1 (a própria SPTrans). Essa coluna é opcional no caso de feeds em que existe apenas uma agência, porém é obrigatória nos casos em que existe mais de uma. Imaginemos, por exemplo, um feed que descreve um sistema multimodal que conta com um corredor de metrô e diversas linhas de ônibus: uma configuração possível de routes.txt descreveria as linhas de metrô como de responsabilidade da operadora do metrô, e as de ônibus como de responsabilidade da empresa responsável pelo planejamento das linhas de ônibus, por exemplo.\nA coluna route_type é utilizada para descrever o modo de transporte utilizado em cada linha. Essa coluna aceita diferentes números, cada um representando um determinado modo. Esse exemplo descreve linhas de trem, cujo valor numérico correspondente é 2. Os valores correspondentes para outros modos de transporte são listados na especificação.\n\n\n4.1.4 trips.txt\nArquivo usado para descrever as viagens realizadas no sistema. A viagem é a unidade básica de movimento do formato GTFS: cada viagem é associada a uma linha de transporte público (route_id), a um serviço que opera em determinados dias da semana (como veremos mais à frente, no arquivo calendar.txt) e a uma trajetória espacial (como será mostrado no arquivo shapes.txt). A Tabela 4.4 mostra o trips.txt do feed da SPTrans.\n\n\n\n\nTabela 4.4: Exemplo de arquivo trips.txt. Fonte: SPTrans\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntrip_id\nroute_id\nservice_id\ntrip_headsign\ndirection_id\nshape_id\n\n\n\n\nCPTM L07-0\nCPTM L07\nUSD\nJUNDIAI\n0\n17846\n\n\nCPTM L07-1\nCPTM L07\nUSD\nLUZ\n1\n17847\n\n\nCPTM L08-0\nCPTM L08\nUSD\nAMADOR BUENO\n0\n17848\n\n\nCPTM L08-1\nCPTM L08\nUSD\nJULIO PRESTES\n1\n17849\n\n\nCPTM L09-0\nCPTM L09\nUSD\nGRAJAU\n0\n17850\n\n\nCPTM L09-1\nCPTM L09\nUSD\nOSASCO\n1\n17851\n\n\n\n\n\n\n\n\nA coluna trip_id identifica cada uma das viagens descritas na tabela, assim como a route_id faz referência a uma linha de transporte público identificada no arquivo routes.txt. A coluna service_id identifica serviços que determinam os dias da semana em que cada uma das viagens opera (dias úteis, finais de semana, uma mistura dos dois etc.), descritos detalhadamente no arquivo calendar.txt. A última coluna à direita na Tabela 4.4 é a shape_id, que identifica a trajetória espacial de cada uma das viagens, descrita em detalhes no arquivo shapes.txt.\nAs duas colunas restantes, trip_headsign e direction_id, são opcionais e devem ser utilizadas para descrever o sentido/destino da viagem. A primeira, trip_headsign, é utilizada para ditar o texto que aparece no letreiro de veículos (no caso de um ônibus, por exemplo) ou em painéis informativos (como em metrôs e trens) destacando o destino da viagem. Já a coluna direction_id é frequentemente utilizada em conjunto com a primeira para dar uma conotação de ida ou volta para cada viagem, em que 0 representa ida e 1, volta, ou vice-versa (assim como ida e volta são conceitos que mudam conforme o referencial, os valores 0 e 1 podem ser usados como desejado, desde que um represente um sentido e o outro, o contrário). No exemplo, as duas primeiras linhas são viagens que fazem menção à mesma rota de transporte público (CPTM L07), porém em sentidos opostos: uma corre em direção a Jundiaí e a outra, à Luz.\n\n\n4.1.5 calendar.txt\nArquivo usado para descrever os diferentes tipos de serviço existentes no sistema. Um serviço, nesse contexto, denota um conjunto de dias da semana em que viagens são realizadas. Cada serviço também é definido pela data em que começa a valer e pela data a partir da qual ele não é mais válido. A Tabela 4.5 mostra o calendar.txt do feed da SPTrans.\n\n\n\n\nTabela 4.5: Exemplo de arquivo calendar.txt. Fonte: SPTrans\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nservice_id\nmonday\ntuesday\nwednesday\nthursday\nfriday\nsaturday\nsunday\nstart_date\nend_date\n\n\n\n\nUSD\n1\n1\n1\n1\n1\n1\n1\n20080101\n20200501\n\n\nU__\n1\n1\n1\n1\n1\n0\n0\n20080101\n20200501\n\n\nUS_\n1\n1\n1\n1\n1\n1\n0\n20080101\n20200501\n\n\n_SD\n0\n0\n0\n0\n0\n1\n1\n20080101\n20200501\n\n\n__D\n0\n0\n0\n0\n0\n0\n1\n20080101\n20200501\n\n\n_S_\n0\n0\n0\n0\n0\n1\n0\n20080101\n20200501\n\n\n\n\n\n\n\n\nA coluna service_id identifica cada um dos serviços descritos na tabela. Como mostrado anteriormente, este identificador é usado também no arquivo trips.txt e é o responsável por associar cada viagem a um determinado serviço.\nAs colunas monday, tuesday, wednesday, thursday, friday, saturday e sunday (segunda-feira a domingo, em inglês) são utilizadas para delimitar os dias em que cada serviço funciona. O valor 1 significa que o serviço opera naquele dia, enquanto o valor 0 significa que ele não opera. Como podemos ver na Tabela 4.5, o serviço USD opera em todos os dias da semana. Já o serviço U__ opera apenas em dias úteis.\nPor fim, as colunas start_date e end_date delimitam o intervalo em que cada serviço é válido. As datas do formato GTFS são sempre formatadas segundo a regra YYYYMMDD, em que os primeiros quatro números definem o ano, os dois subsequentes definem o mês e os últimos dois, o dia. O valor 20220428, por exemplo, representa o dia 28 de abril de 2022.\n\n\n4.1.6 shapes.txt\nArquivo usado para descrever a trajetória espacial de cada viagem listada no feed. Esse arquivo é opcional, mas é fortemente recomendado que agências de transporte o incluam em seus arquivos GTFS. A Tabela 4.6 mostra o shapes.txt do feed da SPTrans.\n\n\n\n\nTabela 4.6: Exemplo de arquivo shapes.txt. Fonte: SPTrans\n\n\n\n\n\n\nshape_id\nshape_pt_lat\nshape_pt_lon\nshape_pt_sequence\n\n\n\n\n17846\n-23.53517\n-46.63535\n1\n\n\n17846\n-23.53513\n-46.63548\n2\n\n\n17846\n-23.53494\n-46.63626\n3\n\n\n17846\n-23.53473\n-46.63710\n4\n\n\n17846\n-23.53466\n-46.63735\n5\n\n\n17846\n-23.53416\n-46.63866\n6\n\n\n\n\n\n\n\n\nA coluna shape_id identifica cada uma das trajetórias descritas na tabela. Como mostrado anteriormente, esse identificador é usado também no arquivo trips.txt e é o responsável por associar cada viagem à sua trajetória espacial. Diferentemente de todos os outros identificadores que vimos até então, no entanto, o identificador shape_id se repete em diversas observações da tabela. Isso porque o arquivo associa cada shape_id a uma série de pontos espaciais, cujas coordenadas geográficas são descritas nas colunas shape_pt_lat e shape_pt_lon. A coluna shape_pt_sequence lista a sequência na qual os pontos se conectam para formar a trajetória de cada shape_id. Os valores listados nessa coluna devem ser ordenados de forma crescente.\n\n\n4.1.7 stop_times.txt\nArquivo usado para descrever a tabela de horários de cada viagem, incluindo o horário de chegada e partida em cada uma das paradas. A formatação desse arquivo depende da existência ou não de um arquivo frequencies.txt, detalhe que cobriremos mais adiante. Por enquanto, olharemos para o stop_times.txt do feed da SPTrans, que também conta com um frequencies.txt, na Tabela 4.7.\n\n\n\n\nTabela 4.7: Exemplo de arquivo stop_times.txt. Fonte: SPTrans\n\n\n\n\n\n\ntrip_id\narrival_time\ndeparture_time\nstop_id\nstop_sequence\n\n\n\n\nCPTM L07-0\n04:00:00\n04:00:00\n18940\n1\n\n\nCPTM L07-0\n04:08:00\n04:08:00\n18920\n2\n\n\nCPTM L07-0\n04:16:00\n04:16:00\n18919\n3\n\n\nCPTM L07-0\n04:24:00\n04:24:00\n18917\n4\n\n\nCPTM L07-0\n04:32:00\n04:32:00\n18916\n5\n\n\nCPTM L07-0\n04:40:00\n04:40:00\n18965\n6\n\n\n\n\n\n\n\n\nA viagem cuja tabela de horários está sendo descrita é identificada pela coluna trip_id. De forma análoga ao que acontece na tabela de trajetórias, um mesmo trip_id se repete em muitas observações da tabela. Isso porque, assim como a trajetória é composta por uma sequência de pontos espaciais, a tabela de horários é composta por uma sequência de diversos horários de partida/chegada em diversas paradas de transporte público.\nAs colunas seguintes, arrival_time, departure_time e stop_id, são as responsáveis por descrever o cronograma de cada viagem, associando um horário de chegada e um horário de partida a cada uma das paradas da viagem. As colunas de horário são formatadas segundo a regra HH:MM:SS, em que os dois primeiros números definem a hora, os dois seguintes, os minutos e os últimos dois, os segundos. Essa formatação aceita valores de hora maiores que 24: por exemplo, se uma viagem parte às 23h, mas só chega a uma determinada estação 1h da manhã do dia seguinte, seu horário de chegada deve ser registrado como 25:00:00, e não 01:00:00. A coluna stop_id, por sua vez, associa os horários de chegada e partida a uma parada descrita no arquivo stops.txt. Por fim, a coluna stop_sequence lista a sequência na qual cada parada se conecta às demais para formar o cronograma da viagem. Seus valores devem ser sempre ordenados de forma crescente.\nVale destacar aqui a diferença entre os arquivos shapes.txt e stop_times.txt. Embora os dois descrevam uma viagem espacialmente, eles o fazem de forma diferente. O stop_times.txt descreve a sequência de paradas e horários que compõem um cronograma, mas nada diz sobre o trajeto percorrido pelo veículo entre cada uma das paradas. Já o shapes.txt traz a trajetória detalhada da viagem como um todo, mas não descreve em que ponto do espaço estão as paradas da viagem. Quando usamos os dois arquivos em conjunto, portanto, sabemos tanto o cronograma de cada viagem quanto a trajetória espacial da viagem entre paradas.\n\n\n4.1.8 frequencies.txt\nArquivo opcional usado para descrever a frequência de cada viagem dentro de um determinado período do dia. A Tabela 4.8 mostra o frequencies.txt do feed da SPTrans.\n\n\n\n\nTabela 4.8: Exemplo de arquivo frequencies.txt. Fonte: SPTrans\n\n\n\n\n\n\ntrip_id\nstart_time\nend_time\nheadway_secs\n\n\n\n\nCPTM L07-0\n04:00:00\n04:59:00\n720\n\n\nCPTM L07-0\n05:00:00\n05:59:00\n360\n\n\nCPTM L07-0\n06:00:00\n06:59:00\n360\n\n\nCPTM L07-0\n07:00:00\n07:59:00\n360\n\n\nCPTM L07-0\n08:00:00\n08:59:00\n360\n\n\nCPTM L07-0\n09:00:00\n09:59:00\n480\n\n\n\n\n\n\n\n\nA viagem cuja frequência está sendo descrita é identificada pela coluna trip_id. Novamente, um mesmo identificador pode aparecer em várias observações da tabela, pois a especificação prevê que uma mesma viagem pode ter frequências diferentes ao longo do dia (como em horários de pico e fora-pico, por exemplo). Assim, cada linha da tabela se refere à frequência de uma determinada viagem dentro de um intervalo de tempo especificado pelas colunas start_time e end_time.\nDentro do período especificado por essas duas colunas, a viagem possui um headway detalhado na coluna headway_secs. O headway é o tempo que separa a passagem de dois veículos que operam a mesma linha de transporte público. No caso desse arquivo, esse tempo deve ser especificado em segundos. Um valor de 720 entre 4h e 5h, portanto, significa que a viagem CPTM L07-0 ocorre de doze em doze minutos dentro desse período.\nUsando as tabelas frequencies.txt e stop_times.txt conjuntamente\nÉ importante entender, agora, como a presença da tabela frequencies.txt altera a especificação da tabela stop_times.txt. Como podemos ver no exemplo da tabela stop_times.txt (Tabela 4.7), a viagem CPTM L07-0 parte da primeira parada às 4h e chega na segunda às 4h08. O cronograma de chegada e saída de uma mesma parada de uma viagem, no entanto, não pode ser definido mais de uma vez na tabela. Como então definir o cronograma das viagens que partem às 4h12, 4h24, 4h36 etc. (lembrando que o headway dessa viagem é de doze minutos)?\nNo caso em que a frequência de uma viagem é especificada no frequencies.txt, o cronograma (a tabela de horários) de uma viagem definido no stop_times.txt deve ser entendido como uma referência que descreve o tempo entre paradas. Isto é, os horários ali definidos não devem ser interpretados à risca. Por exemplo, o cronograma listado estabelece que o tempo de viagem entre a primeira e a segunda parada é de oito minutos, e o tempo entre a segunda e a terceira também. Ou seja, a viagem que parte da primeira parada às 4h00 chega na segunda às 4h08, e na terceira às 4h16. A próxima viagem, que parte da primeira parada às 4h12, por sua vez, chega na segunda parada às 4h20, e na terceira às 4h28.\nEntretanto, poderíamos descrever as mesmas viagens no stop_times.txt sem fazer uso do arquivo frequencies.txt. Para isso, poderíamos adicionar um sufixo que identificasse cada uma das viagens referentes à linha CPTM L07 no sentido 0 ao longo do dia. A viagem (trip_id) com identificador CPTM L07-0_1, por exemplo, seria a primeira viagem no sentido 0 do dia e partiria da primeira parada às 4h e chegaria na segunda às 4h08. A viagem CPTM L07-0_2, por sua vez, seria a segunda viagem e partiria da primeira parada às 4h12 e chegaria na segunda às 4h20, e assim por diante. Cada uma dessas viagens deveria ser também adicionada ao arquivo trips.txt e a quaisquer outros que possuam a coluna trip_id como identificador.\nOutro elemento que influencia na forma como o frequencies.txt afeta as tabelas de horários na tabela stop_times.txt é a coluna opcional exact_times. Um valor de 0 nesta coluna (ou quando ela está ausente do feed, como no caso do arquivo GTFS da SPTrans) indica que a viagem não necessariamente segue um cronograma fixo ao longo do período. Em vez disso, operadores tentam se ater a um determinado headway durante o período. Usando o mesmo exemplo de uma viagem cujo headway é de doze minutos entre 4h e 5h, isso significa que não necessariamente a primeira partida sairá exatamente às 4h, a segunda às 4h12 e por aí em diante. A primeira pode, por exemplo, sair às 4h02. A segunda, às 4h14 ou 4h13 etc. Caso desejemos definir um cronograma que é seguido à risca, obtendo o mesmo resultado que seria obtido se definíssemos diversas viagens semelhantes partindo em diferentes horários no stop_times.txt (como mostrado no parágrafo anterior), devemos utilizar o valor 1 na coluna exact_times.",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dados GTFS</span>"
    ]
  },
  {
    "objectID": "4_dados_gtfs.html#onde-encontrar-dados-gtfs-de-cidades-brasileiras",
    "href": "4_dados_gtfs.html#onde-encontrar-dados-gtfs-de-cidades-brasileiras",
    "title": "4  Dados GTFS",
    "section": "4.2 Onde encontrar dados GTFS de cidades brasileiras",
    "text": "4.2 Onde encontrar dados GTFS de cidades brasileiras\nOs dados de GTFS de diversas cidades do mundo podem ser baixados com o pacote de R {tidytransit} ou no site Transitland. No Brasil, diversas cidades usam dados GTFS no planejamento e operação de seus sistemas de transportes. Em muitos casos, no entanto, esses dados são de propriedade de empresas operadoras e concessionárias, e não do poder público. Infelizmente, esses arquivos raramente são disponibilizados aberta e publicamente, contrariando boas práticas de gestão e compartilhamento de dados de interesse público. A Tabela 4.9 mostra as fontes dos dados GTFS de algumas das poucas cidades do Brasil que disponibilizam seus feeds abertamente6.\n\n\n\n\nTabela 4.9: Fontes de dados GTFS publicamente disponíveis no Brasil\n\n\n\n\n\n\nCidade\nFonte\nInformações\n\n\n\n\nBelo Horizonte\nEmpresa de Transportes e Trânsito de Belo Horizonte (BHTrans)\nDado aberto: transporte convencional; transporte suplementar.\n\n\nFortaleza\nEmpresa de Transporte Urbano de Fortaleza (Etufor)\nDado aberto.\n\n\nFortaleza\nMetrô de Fortaleza (Metrofor)\nDado aberto.\n\n\nPorto Alegre\nEmpresa Pública de Transporte e Circulação de Porto Alegre (EPTC)\nDado aberto.\n\n\nRio de Janeiro\nSecretaria Municipal de Transportes (SMTR)\nDado aberto.\n\n\nSão Paulo\nEmpresa Metropolitana de Transportes Urbanos de São Paulo (EMTU)\nDownload neste link. Necessário cadastro.\n\n\nSão Paulo\nSPTrans\nDownload neste link. Necessário cadastro.\n\n\n\n\n\n\n\n\nObs.: Os dados de GTFS disponibilizados pela SMTR não incluem os dados dos sistemas de trem e de metrô.\n\n\n\n\nMcHugh, Bibiana. 2013. «Pioneering Open Data Standards: The GTFS Story». Em Beyond Transparency: Open Data and the Future of Civic Innovation, editado por Brett Goldstein e Lauren Dyson, First, 125–35. San Francisco, CA: Code for America Press.\n\n\nPereira, Rafael H. M., Pedro R. Andrade, e João Pedro Bazzo Vieira. 2022. «Exploring the Time Geography of Public Transport Networks with the Gtfs2gps Package». Journal of Geographical Systems, dezembro. https://doi.org/10.1007/s10109-022-00400-x.",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dados GTFS</span>"
    ]
  },
  {
    "objectID": "4_dados_gtfs.html#footnotes",
    "href": "4_dados_gtfs.html#footnotes",
    "title": "4  Dados GTFS",
    "section": "",
    "text": "Mais informações sobre o formato GTFS Realtime disponíveis em https://gtfs.org/realtime/.↩︎\nNeste livro, utilizaremos os termos feed, arquivo GTFS e dados GTFS como sinônimos.↩︎\nConforme a especificação oficial, versão da revisão 9 de maio de 2022.↩︎\nPara mais informações sobre as tabelas e as colunas não abordadas neste texto, pode-se verificar a especificação oficial.↩︎\nDisponível em https://www.sptrans.com.br/desenvolvedores/.↩︎\nLevantamento realizado durante a elaboração deste livro.↩︎",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Dados GTFS</span>"
    ]
  },
  {
    "objectID": "5_gtfstools.html",
    "href": "5_gtfstools.html",
    "title": "5  Manipulação e visualização de dados GTFS",
    "section": "",
    "text": "5.1 Leitura e manipulação básica de arquivos GTFS\nA leitura de arquivos GTFS com o {gtfstools} é feita com a função read_gtfs(), que recebe uma string com o caminho do arquivo. Após sua leitura, o feed é representado como uma lista de data.tables, uma versão de alta performance da classe data.frame. Ao longo deste capítulo, vamos nos referir a essa lista de tabelas como um objeto GTFS. Por padrão, a função lê todas as tabelas .txt do feed:\n# carrega biblioteca\nlibrary(gtfstools)\n\n# aponta para o endereço do arquivo gtfs dentro do {gtfstools}\nendereco &lt;- system.file(\"extdata/spo_gtfs.zip\", package = \"gtfstools\")\n\n# le o gtfs\ngtfs &lt;- read_gtfs(endereco)\n\n# consulta o nome das tabelas dentro da lista\nnames(gtfs)\n\n[1] \"agency\"      \"calendar\"    \"frequencies\" \"routes\"      \"shapes\"     \n[6] \"stop_times\"  \"stops\"       \"trips\"\nComo podemos ver, cada data.table dentro do objeto GTFS é nomeado de acordo com a tabela que ele representa, sem a extensão .txt. Isso nos permite selecionar e manipular cada uma das tabelas separadamente. O código adiante, por exemplo, mostra os seis primeiros registros da tabela trips:\nhead(gtfs$trips)\n\n   route_id service_id    trip_id trip_headsign direction_id shape_id\n1: CPTM L07        USD CPTM L07-0       JUNDIAI            0    17846\n2: CPTM L07        USD CPTM L07-1           LUZ            1    17847\n3: CPTM L08        USD CPTM L08-0  AMADOR BUENO            0    17848\n4: CPTM L08        USD CPTM L08-1 JULIO PRESTES            1    17849\n5: CPTM L09        USD CPTM L09-0        GRAJAU            0    17850\n6: CPTM L09        USD CPTM L09-1        OSASCO            1    17851\nAs tabelas dentro de um objeto GTFS podem ser facilmente manipuladas usando a sintaxe dos pacotes {dplyr} ou {data.table}. Neste livro, optamos por utilizar a sintaxe do {data.table}, pois esse pacote oferece diversas funcionalidades úteis para a manipulação de tabelas com grande quantidade de registros, tal como a edição de colunas por referência, filtros de linhas muito rápidos e agregação de dados eficiente1. Para adicionar cem segundos a todos os headways listados na tabela frequencies e reverter essa mudança em seguida, por exemplo, podemos usar o código a seguir:\n# salva o headway original\nheadway_original &lt;- gtfs$frequencies$headway_secs\nhead(gtfs$frequencies, 3)\n\n      trip_id start_time end_time headway_secs\n1: CPTM L07-0   04:00:00 04:59:00          720\n2: CPTM L07-0   05:00:00 05:59:00          360\n3: CPTM L07-0   06:00:00 06:59:00          360\n\n# modifica o headway\ngtfs$frequencies[, headway_secs := headway_secs + 100]\nhead(gtfs$frequencies, 3)\n\n      trip_id start_time end_time headway_secs\n1: CPTM L07-0   04:00:00 04:59:00          820\n2: CPTM L07-0   05:00:00 05:59:00          460\n3: CPTM L07-0   06:00:00 06:59:00          460\n\n# restitui o headway original\ngtfs$frequencies[, headway_secs := headway_original]\nhead(gtfs$frequencies, 3)\n\n      trip_id start_time end_time headway_secs\n1: CPTM L07-0   04:00:00 04:59:00          720\n2: CPTM L07-0   05:00:00 05:59:00          360\n3: CPTM L07-0   06:00:00 06:59:00          360\nApós editarmos um objeto GTFS no R, frequentemente vamos querer utilizá-lo para fazer análises de diferentes tipos. Para isso, é comum que precisemos do arquivo GTFS em formato .zip novamente, e não como uma lista de tabelas dentro do R. O pacote {gtfstools} disponibiliza a função write_gtfs() exatamente com a finalidade de transformar objetos GTFS que existem apenas dentro do R em arquivos GTFS armazenados no seu computador. Para usarmos essa função, precisamos apenas listar o objeto e o endereço no qual o arquivo deve ser salvo:\n# aponta para o endereço onde arquivo deve ser salvo\nendereco_destino &lt;- tempfile(\"novo_gtfs\", fileext = \".zip\")\n\n# salva o GTFS no endereco\nwrite_gtfs(gtfs, path = endereco_destino)\n\n# lista arquivos dentro do feed recém-salvo\nzip::zip_list(endereco_destino)[, c(\"filename\", \"compressed_size\", \"timestamp\")]\n\n         filename compressed_size           timestamp\n1      agency.txt             112 2024-10-11 14:27:08\n2    calendar.txt             129 2024-10-11 14:27:08\n3 frequencies.txt            2381 2024-10-11 14:27:08\n4      routes.txt             659 2024-10-11 14:27:08\n5      shapes.txt          160470 2024-10-11 14:27:08\n6  stop_times.txt            7907 2024-10-11 14:27:08\n7       stops.txt           18797 2024-10-11 14:27:08\n8       trips.txt             717 2024-10-11 14:27:08",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulação e visualização de dados GTFS</span>"
    ]
  },
  {
    "objectID": "5_gtfstools.html#cálculo-de-velocidade-das-linhas",
    "href": "5_gtfstools.html#cálculo-de-velocidade-das-linhas",
    "title": "5  Manipulação e visualização de dados GTFS",
    "section": "5.2 Cálculo de velocidade das linhas",
    "text": "5.2 Cálculo de velocidade das linhas\nArquivos GTFS são frequentemente utilizados em estimativas de roteamento de transporte público e para informar passageiros sobre a tabela de horários das diferentes rotas que operam em uma região. Dessa forma, é extremamente importante que o cronograma das viagens e a velocidade operacional de cada linha estejam adequadamente descritos no feed.\nO {gtfstools} disponibiliza a função get_trip_speed() para facilitar o cálculo da velocidade de cada viagem presente no feed. Por padrão, a função calcula a velocidade (em km/h) de todas as viagens do GTFS, mas viagens individuais também podem ser especificadas:\n\n# calcula a velocidade de todas as viagens\nvelocidades &lt;- get_trip_speed(gtfs)\n\nhead(velocidades)\n\n     trip_id origin_file     speed\n1: 2002-10-0      shapes  8.952511\n2: 2105-10-0      shapes 10.253365\n3: 2105-10-1      shapes  9.795292\n4: 2161-10-0      shapes 11.182534\n5: 2161-10-1      shapes 11.784458\n6: 4491-10-0      shapes 13.203560\n\nnrow(velocidades)\n\n[1] 36\n\n# calcula a velocidade de duas viagens específicas\nvelocidades &lt;- get_trip_speed(gtfs, trip_id = c(\"CPTM L07-0\", \"2002-10-0\"))\n\nvelocidades\n\n      trip_id origin_file     speed\n1:  2002-10-0      shapes  8.952511\n2: CPTM L07-0      shapes 26.787768\n\n\nCalcular a velocidade de uma viagem requer que saibamos o seu comprimento e em quanto tempo ela foi realizada. Para isso, a get_trip_speed() utiliza duas outras funções do {gtfstools} por trás dos panos: a get_trip_length() e a get_trip_duration(). O funcionamento das duas é muito parecido com o mostrado anteriormente, calculando o comprimento/duração de todas as viagens por padrão, ou de apenas algumas selecionadas, caso desejado. A seguir, mostramos seus comportamentos padrões.\n\n# calcula a distância percorrida de todas viagens\ndistancias &lt;- get_trip_length(gtfs, file = \"shapes\")\n\nhead(distancias)\n\n      trip_id   length origin_file\n1: CPTM L07-0 60.71894      shapes\n2: CPTM L07-1 60.71894      shapes\n3: CPTM L08-0 41.79037      shapes\n4: CPTM L08-1 41.79037      shapes\n5: CPTM L09-0 31.88906      shapes\n6: CPTM L09-1 31.88906      shapes\n\n# calcula a duração de todas viagens\nduracao &lt;- get_trip_duration(gtfs)\n\nhead(duracao)\n\n     trip_id duration\n1: 2002-10-0       48\n2: 2105-10-0      108\n3: 2105-10-1      111\n4: 2161-10-0       94\n5: 2161-10-1       93\n6: 4491-10-0       69\n\n\nAssim como a get_trip_speed() calcula as velocidades em km/h por padrão, a get_trip_length() e a get_trip_duration() calculam os comprimentos e as durações em quilômetros e em minutos, respectivamente. Essas unidades podem ser ajustadas com o argumento unit, presente nas três funções.",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulação e visualização de dados GTFS</span>"
    ]
  },
  {
    "objectID": "5_gtfstools.html#combinando-e-filtrando-feeds",
    "href": "5_gtfstools.html#combinando-e-filtrando-feeds",
    "title": "5  Manipulação e visualização de dados GTFS",
    "section": "5.3 Combinando e filtrando feeds",
    "text": "5.3 Combinando e filtrando feeds\nMuitas vezes, o processamento e a edição de arquivos GTFS são realizados, em grande medida, manualmente. Por isso, pequenas inconsistências podem passar batidas pelos responsáveis por esse processamento. Um problema comumente observado em feeds é a presença de registros duplicados em uma mesma tabela. O feed da SPTrans, por exemplo, possui registros duplicados tanto no agency.txt quanto no calendar.txt:\n\ngtfs$agency\n\n   agency_id agency_name                               agency_url\n1:         1     SPTRANS http://www.sptrans.com.br/?versao=011019\n2:         1     SPTRANS http://www.sptrans.com.br/?versao=011019\n     agency_timezone agency_lang\n1: America/Sao_Paulo          pt\n2: America/Sao_Paulo          pt\n\ngtfs$calendar\n\n    service_id monday tuesday wednesday thursday friday saturday sunday\n 1:        USD      1       1         1        1      1        1      1\n 2:        U__      1       1         1        1      1        0      0\n 3:        US_      1       1         1        1      1        1      0\n 4:        _SD      0       0         0        0      0        1      1\n 5:        __D      0       0         0        0      0        0      1\n 6:        _S_      0       0         0        0      0        1      0\n 7:        USD      1       1         1        1      1        1      1\n 8:        U__      1       1         1        1      1        0      0\n 9:        US_      1       1         1        1      1        1      0\n10:        _SD      0       0         0        0      0        1      1\n11:        __D      0       0         0        0      0        0      1\n12:        _S_      0       0         0        0      0        1      0\n    start_date   end_date\n 1: 2008-01-01 2020-05-01\n 2: 2008-01-01 2020-05-01\n 3: 2008-01-01 2020-05-01\n 4: 2008-01-01 2020-05-01\n 5: 2008-01-01 2020-05-01\n 6: 2008-01-01 2020-05-01\n 7: 2008-01-01 2020-05-01\n 8: 2008-01-01 2020-05-01\n 9: 2008-01-01 2020-05-01\n10: 2008-01-01 2020-05-01\n11: 2008-01-01 2020-05-01\n12: 2008-01-01 2020-05-01\n\n\nO {gtfstools} disponibiliza a função remove_duplicates() para remover essas duplicatas. Essa função recebe como input um objeto GTFS e retorna o mesmo objeto, porém sem registros duplicados:\n\n# remove valores duplicados\ngtfs_sem_dups &lt;- remove_duplicates(gtfs)\n\ngtfs_sem_dups$agency\n\n   agency_id agency_name                               agency_url\n1:         1     SPTRANS http://www.sptrans.com.br/?versao=011019\n     agency_timezone agency_lang\n1: America/Sao_Paulo          pt\n\ngtfs_sem_dups$calendar\n\n   service_id monday tuesday wednesday thursday friday saturday sunday\n1:        USD      1       1         1        1      1        1      1\n2:        U__      1       1         1        1      1        0      0\n3:        US_      1       1         1        1      1        1      0\n4:        _SD      0       0         0        0      0        1      1\n5:        __D      0       0         0        0      0        0      1\n6:        _S_      0       0         0        0      0        1      0\n   start_date   end_date\n1: 2008-01-01 2020-05-01\n2: 2008-01-01 2020-05-01\n3: 2008-01-01 2020-05-01\n4: 2008-01-01 2020-05-01\n5: 2008-01-01 2020-05-01\n6: 2008-01-01 2020-05-01\n\n\nFrequentemente, também, lidamos com múltiplos feeds em uma mesma área de estudo. Por exemplo, quando os dados dos sistemas de ônibus e de trens de uma mesma cidade estão salvos em arquivos GTFS separados. Nesse caso, muitas vezes gostaríamos de uni-los em um único arquivo, diminuindo assim o esforço de manipulação e processamento dos dados. Para isso, o {gtfstools} disponibiliza a função merge_gtfs(). O exemplo a seguir mostra o resultado da combinação de dois feeds distintos, o da SPTrans (sem duplicatas) e o da EPTC, de Porto Alegre:\n\n# lê GTFS de Porto Alegre\nendereco_poa &lt;- system.file(\"extdata/poa_gtfs.zip\", package = \"gtfstools\")\ngtfs_poa &lt;- read_gtfs(endereco_poa)\n\ngtfs_poa$agency\n\n   agency_id                                 agency_name             agency_url\n1:      EPTC Empresa Publica de Transportes e Circulação http://www.eptc.com.br\n     agency_timezone agency_lang agency_phone\n1: America/Sao_Paulo          pt          156\n                                                  agency_fare_url\n1: http://www2.portoalegre.rs.gov.br/eptc/default.php?p_secao=155\n\ngtfs_sem_dups$agency\n\n   agency_id agency_name                               agency_url\n1:         1     SPTRANS http://www.sptrans.com.br/?versao=011019\n     agency_timezone agency_lang\n1: America/Sao_Paulo          pt\n\n# combina objetos GTFS de Porto Alegre e São Paulo\ngtfs_combinado &lt;- merge_gtfs(gtfs_sem_dups, gtfs_poa)\n\n# checa resultados\ngtfs_combinado$agency\n\n   agency_id                                 agency_name\n1:         1                                     SPTRANS\n2:      EPTC Empresa Publica de Transportes e Circulação\n                                 agency_url   agency_timezone agency_lang\n1: http://www.sptrans.com.br/?versao=011019 America/Sao_Paulo          pt\n2:                   http://www.eptc.com.br America/Sao_Paulo          pt\n   agency_phone                                                agency_fare_url\n1:                                                                            \n2:          156 http://www2.portoalegre.rs.gov.br/eptc/default.php?p_secao=155\n\n\nComo podemos ver, os registros das tabelas de ambos os feeds foram combinados em uma única tabela. Esse é o caso quando os dois (ou mais, se desejado) objetos GTFS possuem registros de uma mesma tabela (a agency, no exemplo). Caso apenas um dos objetos possua uma das tabelas, a operação copia essa tabela para o resultado final. É o caso, por exemplo, da tabela frequencies, que existe no feed da SPTrans, mas não no da EPTC:\n\nnames(gtfs_poa)\n\n[1] \"agency\"     \"calendar\"   \"routes\"     \"shapes\"     \"stop_times\"\n[6] \"stops\"      \"trips\"     \n\nnames(gtfs_sem_dups)\n\n[1] \"agency\"      \"calendar\"    \"frequencies\" \"routes\"      \"shapes\"     \n[6] \"stop_times\"  \"stops\"       \"trips\"      \n\nnames(gtfs_combinado)\n\n[1] \"agency\"      \"calendar\"    \"frequencies\" \"routes\"      \"shapes\"     \n[6] \"stop_times\"  \"stops\"       \"trips\"      \n\nidentical(gtfs_sem_dups$frequencies, gtfs_combinado$frequencies)\n\n[1] TRUE\n\n\nUm outro tipo de operação muito utilizada no tratamento de dados GTFS é o de filtragem desses arquivos. Frequentemente, feeds são usados para descrever redes de transporte público de grande escala, o que pode transformar sua edição, sua análise e seu compartilhamento em operações complexas. Por esse motivo, pesquisadores e planejadores muitas vezes precisam trabalhar com um subconjunto de dados descritos nos feeds. Por exemplo, caso desejemos estimar a performance da rede de transporte em uma determinada região no horário de pico da manhã, podemos filtrar o nosso arquivo GTFS de modo a manter apenas os registros referentes a viagens que ocorrem nesse intervalo do dia.\nO pacote {gtfstools} traz diversas funções para facilitar a filtragem de arquivos GTFS. São elas:\n\nfilter_by_agency_id();\nfilter_by_route_id();\nfilter_by_service_id();\nfilter_by_shape_id();\nfilter_by_stop_id();\nfilter_by_trip_id();\nfilter_by_route_type();\nfilter_by_weekday();\nfilter_by_time_of_day(); e\nfilter_by_sf().\n\n\n5.3.1 Filtro por identificadores\nAs sete primeiras funções mencionadas anteriormente são utilizadas de forma muito similar. Devemos especificar um vetor de identificadores que é usado para manter no objeto GTFS apenas os registros relacionados a esses identificadores. O exemplo a seguir demonstra essa funcionalidade com a filter_by_trip_id():\n\n# checa tamanho do feed antes do filtro\nutils::object.size(gtfs)\n\n864568 bytes\n\nhead(gtfs$trips[, .(trip_id, trip_headsign, shape_id)])\n\n      trip_id trip_headsign shape_id\n1: CPTM L07-0       JUNDIAI    17846\n2: CPTM L07-1           LUZ    17847\n3: CPTM L08-0  AMADOR BUENO    17848\n4: CPTM L08-1 JULIO PRESTES    17849\n5: CPTM L09-0        GRAJAU    17850\n6: CPTM L09-1        OSASCO    17851\n\n# mantém apenas registros relacionados a duas viagens\ngtfs_filtrado &lt;- filter_by_trip_id(\n  gtfs,\n  trip_id = c(\"CPTM L07-0\", \"CPTM L07-1\")\n)\n\n# checa tamanho do feed após o filtro\nutils::object.size(gtfs_filtrado)\n\n71592 bytes\n\nhead(gtfs_filtrado$trips[, .(trip_id, trip_headsign, shape_id)])\n\n      trip_id trip_headsign shape_id\n1: CPTM L07-0       JUNDIAI    17846\n2: CPTM L07-1           LUZ    17847\n\nunique(gtfs_filtrado$shapes$shape_id)\n\n[1] \"17846\" \"17847\"\n\n\nO código mostra que a função não filtra apenas a tabela trips, mas também as outras tabelas que possuem algum tipo de relação com os identificadores especificados. Por exemplo, a trajetória das viagens CPTM L07-0 e CPTM L07-1 é descrita pelos shape_ids 17846 e 17847, respectivamente. Esses são, portanto, os únicos identificadores da tabela shapes mantidos no GTFS filtrado.\nA função também pode funcionar com o comportamento diametralmente oposto: em vez de definirmos os identificadores cujos registros devem ser mantidos no feed, podemos especificar os identificadores que devem ser retirados dele. Para isso, usamos o argumento keep com valor FALSE:\n\n# remove duas viagens do feed\ngtfs_filtrado &lt;- filter_by_trip_id(\n  gtfs,\n  trip_id = c(\"CPTM L07-0\", \"CPTM L07-1\"),\n  keep = FALSE\n)\n\nhead(gtfs_filtrado$trips[, .(trip_id, trip_headsign, shape_id)])\n\n      trip_id       trip_headsign shape_id\n1: CPTM L08-0        AMADOR BUENO    17848\n2: CPTM L08-1       JULIO PRESTES    17849\n3: CPTM L09-0              GRAJAU    17850\n4: CPTM L09-1              OSASCO    17851\n5: CPTM L10-0 RIO GRANDE DA SERRA    17852\n6: CPTM L10-1                BRÁS    17853\n\nhead(unique(gtfs_filtrado$shapes$shape_id))\n\n[1] \"17848\" \"17849\" \"17850\" \"17851\" \"17852\" \"17853\"\n\n\nComo podemos ver, as viagens especificadas, bem como suas trajetórias, não estão presentes no GTFS filtrado. A mesma lógica aqui demonstrada com a filter_by_trip_id() é válida para as funções que filtram objetos GTFS pelos identificadores agency_id, route_id, service_id, shape_id, stop_id e route_type.\n\n\n5.3.2 Filtro por dia e hora\nOutra operação que recorrentemente aparece em análises que envolvem dados GTFS é a de manter serviços que funcionem apenas em determinados horários do dia ou dias da semana. Para isso, o pacote disponibiliza as funções filter_by_weekday() e filter_by_time_of_day().\nA filter_by_weekday() recebe os dias da semana (em inglês) cujos serviços que neles operam devem ser mantidos. Adicionalmente, a função também inclui o argumento combine, que define como filtros de dois ou mais dias funcionam. Quando este recebe o valor ”and”, apenas serviços que operam em todos os dias especificados são mantidos. Quando recebe o valor ”or”, serviços que operam em pelo menos um dos dias são mantidos:\n\n# mantém apenas serviços que operam no sábado E no domingo\ngtfs_filtrado &lt;- filter_by_weekday(\n  gtfs = gtfs_sem_dups,\n  weekday = c(\"saturday\", \"sunday\"),\n  combine = \"and\"\n)\n\ngtfs_filtrado$calendar[, c(\"service_id\", \"sunday\", \"saturday\")]\n\n   service_id sunday saturday\n1:        USD      1        1\n2:        _SD      1        1\n\n# mantém apenas serviços que operam OU no sábado OU no domingo\ngtfs_filtrado &lt;- filter_by_weekday(\n  gtfs = gtfs_sem_dups,\n  weekday = c(\"sunday\", \"saturday\"),\n  combine = \"or\"\n)\n\ngtfs_filtrado$calendar[, c(\"service_id\", \"sunday\", \"saturday\")]\n\n   service_id sunday saturday\n1:        USD      1        1\n2:        US_      0        1\n3:        _SD      1        1\n4:        __D      1        0\n5:        _S_      0        1\n\n\nA filter_by_time_of_day(), por sua vez, recebe o começo e o final de uma janela de tempo e mantém os registros relacionados a viagens que rodam dentro dessa janela. O funcionamento da função depende da presença ou não da tabela frequencies no objeto GTFS: o cronograma descrito na stop_times das viagens listadas na tabela frequencies não deve ser filtrado, pois, como comentado no capítulo anterior, ele serve como um modelo que dita o tempo de viagem entre uma parada e outra. Caso a frequencies esteja ausente, no entanto, a stop_times é filtrada segundo o intervalo de tempo especificado. Vamos ver como isso funciona com um exemplo:\n\n# mantém apenas viagens dentro do período de 5 às 6 da manhã\ngtfs_filtrado &lt;- filter_by_time_of_day(gtfs, from = \"05:00:00\", to = \"06:00:00\")\n\nhead(gtfs_filtrado$frequencies)\n\n      trip_id start_time end_time headway_secs\n1: CPTM L07-0   05:00:00 05:59:00          360\n2: CPTM L07-1   05:00:00 05:59:00          360\n3: CPTM L08-0   05:00:00 05:59:00          480\n4: CPTM L08-1   05:00:00 05:59:00          480\n5: CPTM L09-0   05:00:00 05:59:00          480\n6: CPTM L09-1   05:00:00 05:59:00          480\n\nhead(gtfs_filtrado$stop_times[, c(\"trip_id\", \"departure_time\", \"arrival_time\")])\n\n      trip_id departure_time arrival_time\n1: CPTM L07-0       04:00:00     04:00:00\n2: CPTM L07-0       04:08:00     04:08:00\n3: CPTM L07-0       04:16:00     04:16:00\n4: CPTM L07-0       04:24:00     04:24:00\n5: CPTM L07-0       04:32:00     04:32:00\n6: CPTM L07-0       04:40:00     04:40:00\n\n# salva a tabela frequencies e a remove do objeto gtfs\nfrequencies &lt;- gtfs$frequencies\ngtfs$frequencies &lt;- NULL\n\ngtfs_filtrado &lt;- filter_by_time_of_day(gtfs, from = \"05:00:00\", to = \"06:00:00\")\n\nhead(gtfs_filtrado$stop_times[, c(\"trip_id\", \"departure_time\", \"arrival_time\")])\n\n      trip_id departure_time arrival_time\n1: CPTM L07-0       05:04:00     05:04:00\n2: CPTM L07-0       05:12:00     05:12:00\n3: CPTM L07-0       05:20:00     05:20:00\n4: CPTM L07-0       05:28:00     05:28:00\n5: CPTM L07-0       05:36:00     05:36:00\n6: CPTM L07-0       05:44:00     05:44:00\n\n\nO filtro da tabela stop_times pode funcionar de duas formas distintas: mantendo intactas todas as viagens que cruzam a janela de tempo especificada; ou mantendo no cronograma apenas as paradas que são visitadas dentro da janela (comportamento padrão da função). Esse comportamento é controlado com o parâmetro full_trips, como mostrado a seguir (atenção aos horários e aos segmentos presentes em cada exemplo):\n\n# mantém apenas viagens inteiramente dentro do período de 5 às 6 da manhã\ngtfs_filtrado &lt;- filter_by_time_of_day(\n  gtfs,\n  from = \"05:00:00\", \n  to = \"06:00:00\",\n  full_trips = TRUE\n)\n\nhead(\n  gtfs_filtrado$stop_times[\n    ,\n    c(\"trip_id\", \"departure_time\", \"arrival_time\", \"stop_sequence\")\n  ]\n)\n\n      trip_id departure_time arrival_time stop_sequence\n1: CPTM L07-0       04:00:00     04:00:00             1\n2: CPTM L07-0       04:08:00     04:08:00             2\n3: CPTM L07-0       04:16:00     04:16:00             3\n4: CPTM L07-0       04:24:00     04:24:00             4\n5: CPTM L07-0       04:32:00     04:32:00             5\n6: CPTM L07-0       04:40:00     04:40:00             6\n\n# mantém apenas paradas que são visitadas entre 5 e 6 da manhã\ngtfs_filtrado &lt;- filter_by_time_of_day(\n  gtfs,\n  from = \"05:00:00\",\n  to = \"06:00:00\",\n  full_trips = FALSE\n)\n\nhead(\n  gtfs_filtrado $stop_times[\n    ,\n    c(\"trip_id\", \"departure_time\", \"arrival_time\", \"stop_sequence\")\n  ]\n)\n\n      trip_id departure_time arrival_time stop_sequence\n1: CPTM L07-0       05:04:00     05:04:00             9\n2: CPTM L07-0       05:12:00     05:12:00            10\n3: CPTM L07-0       05:20:00     05:20:00            11\n4: CPTM L07-0       05:28:00     05:28:00            12\n5: CPTM L07-0       05:36:00     05:36:00            13\n6: CPTM L07-0       05:44:00     05:44:00            14\n\n\n\n\n5.3.3 Filtro espacial\nPor fim, o {gtfstools} também disponibiliza uma função que permite filtrar o objeto GTFS usando um polígono espacial. A filter_by_sf() recebe um objeto do tipo sf/sfc (representação espacial criada pelo pacote {sf}), ou sua bounding box, e mantém os registros cujas viagens são selecionadas por uma operação espacial que também deve ser especificada. Embora aparentemente complicado, esse processo de filtragem é compreendido com facilidade quando apresentado visualmente. Para isso, vamos filtrar o GTFS da SPTrans pela bounding box da trajetória 68962. Com o código a seguir, apresentamos a distribuição espacial dos dados não filtrados, com a bounding box destacada em vermelho na Figura 5.1.\n\n# carrega biblioteca ggplot2 para visualização de dados\nlibrary(ggplot2)\n\n# cria poligono com a bounding box da trajetoria 68962\ntrajetoria_68962 &lt;- convert_shapes_to_sf(gtfs, shape_id = \"68962\")\nbbox &lt;- sf::st_bbox(trajetoria_68962)\ngeometria_bbox &lt;- sf::st_as_sfc(bbox)\n\n# gera geometria de todas as trajetorias do gtfs\ntodas_as_trajetorias &lt;- convert_shapes_to_sf(gtfs)\n\nggplot() +\n  geom_sf(data = todas_as_trajetorias) +\n  geom_sf(data = geometria_bbox, fill = NA, color = \"red\") +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 5.1: Distribuição espacial das trajetórias, com a bounding box da trajetória 68962 em destaque\n\n\n\n\n\nNote que usamos a função convert_shapes_to_sf(), também disponibilizada pelo {gtfstools}, que converte uma determinada trajetória descrita no GTFS em um objeto espacial do tipo sf. Por padrão, a filter_by_sf() mantém os dados relacionados aos registros de viagens cujas trajetórias possuem alguma interseção com o polígono espacial selecionado:\n\ngtfs_filtrado &lt;- filter_by_sf(gtfs, bbox)\ntrajetorias_filtradas &lt;- convert_shapes_to_sf(gtfs_filtrado)\n\nggplot() +\n  geom_sf(data = trajetorias_filtradas) +\n  geom_sf(data = geometria_bbox, fill = NA, color = \"red\") +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 5.2: Distribuição espacial das trajetórias com interseções com a bounding box da trajetória 68962\n\n\n\n\n\nPodemos, no entanto, controlar a operação espacial usada no processo de filtragem. Por exemplo, o código adiante mostra como podemos manter os dados relacionados a viagens que estão contidas dentro do polígono espacial:\n\ngtfs_filtrado &lt;- filter_by_sf(gtfs, bbox, spatial_operation = sf::st_contains)\ntrajetorias_filtradas &lt;- convert_shapes_to_sf(gtfs_filtrado)\n\nggplot() +\n  geom_sf(data = trajetorias_filtradas) +\n  geom_sf(data = geometria_bbox, fill = NA, color = \"red\") +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 5.3: Distribuição espacial das trajetórias contidas na bounding box da trajetória 68962",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulação e visualização de dados GTFS</span>"
    ]
  },
  {
    "objectID": "5_gtfstools.html#validação-de-arquivos-gtfs",
    "href": "5_gtfstools.html#validação-de-arquivos-gtfs",
    "title": "5  Manipulação e visualização de dados GTFS",
    "section": "5.4 Validação de arquivos GTFS",
    "text": "5.4 Validação de arquivos GTFS\nPlanejadores e pesquisadores frequentemente querem avaliar a qualidade dos arquivos GTFS que estão utilizando em suas análises ou que estão produzindo. Os feeds estão estruturados conforme boas práticas adotadas pela comunidade que usa a especificação? As tabelas e colunas estão formatadas corretamente? A informação descrita pelo feed parece verossímil (velocidade das viagens, localização das paradas etc.)? Essas são algumas das perguntas que podem surgir ao lidar com dados no formato GTFS.\nPara responder a essas e outras perguntas, o {gtfstools} inclui a função validate_gtfs(), que serve como interface entre o R e o Canonical GTFS Validator, software desenvolvido pela MobilityData. O uso do validador requer que o Java versão 11 ou superior esteja instalado2.\nUsar a validate_gtfs() é muito simples. Primeiro, precisamos baixar o software de validação. Para isso, podemos usar a função download_validator(), também disponível no pacote, que recebe o endereço de uma pasta na qual o validador deve ser salvo e a versão do validador desejada (por padrão, a mais recente). Como resultado, a função retorna o endereço do arquivo baixado:\n\npasta_temporaria &lt;- tempdir()\n\nendereco_validador &lt;- download_validator(pasta_temporaria)\nendereco_validador\n\n[1] \"/tmp/RtmpNsTYd2/gtfs-validator-v4.0.0.jar\"\n\n\nA segunda (e última) etapa consiste em de fato rodar a função validate_gtfs(). Essa função aceita que os dados GTFS a serem validados sejam passados de diferentes formas: i) como um objeto GTFS existente apenas no R; ii) como o endereço de um arquivo GTFS salvo localmente em formato .zip; iii) como uma URL apontando para um feed; ou iv) como uma pasta que contém os dados GTFS não compactados. A função também recebe o endereço para uma pasta onde o resultado da validação deve ser salvo e o endereço para o validador que deve ser usado. Nesse exemplo, vamos fazer a validação a partir do endereço do arquivo GTFS da SPTrans, lido anteriormente:\n\npasta_resultado &lt;- tempfile(\"validacao_com_endereco\")\n\nvalidate_gtfs(\n  endereco,\n  output_path = pasta_resultado,\n  validator_path = endereco_validador\n)\n\nlist.files(pasta_resultado)\n\n[1] \"report.html\"           \"report.json\"           \"system_errors.json\"   \n[4] \"validation_stderr.txt\"\n\n\nComo podemos ver, a validação gera alguns arquivos como resultado:\n\nreport.html, mostrado na Figura 5.4, que resume os resultados da validação em uma página HTML (apenas disponível quando utilizado o validador v3.1.0 ou superior);\nreport.json, que resume a mesma informação apresentada na página HTML, porém em formato JSON, que pode ser usado para processar e interpretar os resultados de forma programática;\nsystem_errors.json, que apresenta eventuais erros de sistema que tenham ocorrido durante a validação e que podem comprometer os resultados; e\nvalidation_stderr.txt, que lista mensagens informativas enviadas pelo validador, incluindo uma lista dos testes realizados, eventuais mensagens de erro etc3.\n\n\n\n\n\n\n\n\n\nFigura 5.4: Exemplo de relatório gerado durante a validação",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulação e visualização de dados GTFS</span>"
    ]
  },
  {
    "objectID": "5_gtfstools.html#fluxo-de-trabalho-com-o-gtfstools-mapeando-o-headway-das-linhas",
    "href": "5_gtfstools.html#fluxo-de-trabalho-com-o-gtfstools-mapeando-o-headway-das-linhas",
    "title": "5  Manipulação e visualização de dados GTFS",
    "section": "5.5 Fluxo de trabalho com o {gtfstools}: mapeando o headway das linhas",
    "text": "5.5 Fluxo de trabalho com o {gtfstools}: mapeando o headway das linhas\nComo mostrado nas seções anteriores, o {gtfstools} disponibiliza uma grande caixa de ferramentas que podem ser usadas no processamento e na análise de arquivos GTFS. O pacote, no entanto, oferece diversas outras funções que não puderam ser apresentadas neste livro, por limitação de espaço4.\nA apresentação das funções feita até aqui tem um importante caráter demonstrativo, porém não mostra como elas podem ser usadas de forma conjunta na análise de um arquivo GTFS. Esta seção preenche essa lacuna, mostrando como o pacote pode ser usado, por exemplo, para responder à seguinte pergunta: como se distribuem espacialmente os tempos entre veículos de uma mesma linha (os headways) no GTFS da SPTrans?\nA primeira etapa é definir o escopo da nossa análise. Para exemplificar, vamos considerar o headway no pico da manhã, entre 7h e 9h, em uma típica terça-feira de operação. Para isso, precisamos filtrar o nosso feed:\n\n# lê o arquivo GTFS\ngtfs &lt;- read_gtfs(endereco)\n\n# filtra o GTFS\ngtfs_filtrado &lt;- gtfs |&gt;\n  remove_duplicates() |&gt;\n  filter_by_weekday(\"tuesday\") |&gt;\n  filter_by_time_of_day(from = \"07:00:00\", to = \"09:00:00\")\n\n# checa resultado do filtro\ngtfs_filtrado$frequencies[trip_id == \"2105-10-0\"]\n\n     trip_id start_time end_time headway_secs\n1: 2105-10-0   07:00:00 07:59:00          900\n2: 2105-10-0   08:00:00 08:59:00         1200\n\ngtfs_filtrado$calendar\n\n   service_id monday tuesday wednesday thursday friday saturday sunday\n1:        USD      1       1         1        1      1        1      1\n2:        U__      1       1         1        1      1        0      0\n   start_date   end_date\n1: 2008-01-01 2020-05-01\n2: 2008-01-01 2020-05-01\n\n\nEm seguida, precisamos calcular o headway dentro do período estabelecido. Essa informação pode ser encontrada na tabela frequencies, mas há um elemento complicador: cada viagem está associada a mais de um headway, como vimos anteriormente (um registro para o período entre 7h e 7h59 e outro para o período entre 8h e 8h59). Para resolver essta questão, portanto, vamos calcular o headway médio no intervalo entre 7h e 9h.\nOs primeiros registros da tabela frequencies do GTFS da SPTrans parecem sugerir que os períodos do dia estão listados sempre de uma em uma hora, porém essa não é uma regra estabelecida na especificação nem é a prática adotada em outros feeds. Por isso, vamos calcular a média ponderada do headway no período especificado. Para isso, precisamos multiplicar cada headway pelo intervalo de tempo em que ele é válido e dividir o total desta soma pelo intervalo de tempo total (duas horas). Para calcular o intervalo de tempo em que cada headway é válido, calculamos o começo e o fim do intervalo em segundos com a função convert_time_to_seconds() e subtraímos o valor do fim pelo do começo, como mostrado a seguir:\n\ngtfs_filtrado &lt;- convert_time_to_seconds(gtfs_filtrado)\n\ngtfs_filtrado$frequencies[trip_id == \"2105-10-0\"]\n\n     trip_id start_time end_time headway_secs start_time_secs end_time_secs\n1: 2105-10-0   07:00:00 07:59:00          900           25200         28740\n2: 2105-10-0   08:00:00 08:59:00         1200           28800         32340\n\ngtfs_filtrado$frequencies[, time_interval := end_time_secs - start_time_secs]\n\nEm seguida, calculamos o headway médio:\n\nheadway_medio &lt;- gtfs_filtrado$frequencies[,\n  .(headway_medio = weighted.mean(x = headway_secs, w = time_interval)),\n  by = trip_id\n]\n\nheadway_medio[trip_id == \"2105-10-0\"]\n\n     trip_id headway_medio\n1: 2105-10-0          1050\n\nhead(headway_medio)\n\n      trip_id headway_medio\n1: CPTM L07-0           360\n2: CPTM L07-1           360\n3: CPTM L08-0           300\n4: CPTM L08-1           300\n5: CPTM L09-0           240\n6: CPTM L09-1           240\n\n\nPrecisamos agora gerar a trajetória espacial de cada viagem e juntar essa informação à do headway médio. Para isso, vamos utilizar a função get_trip_geometry(), que, dado um objeto GTFS, gera a trajetória espacial de suas viagens. Essa função nos permite especificar as viagens cujas trajetórias queremos gerar, logo vamos calcular apenas as trajetórias daquelas que estão presentes na tabela de headways médios:\n\nviagens_selecionadas &lt;- headway_medio$trip_id\n\ntrajetorias &lt;- get_trip_geometry(\n  gtfs = gtfs_filtrado,\n  trip_id = viagens_selecionadas,\n  file = \"shapes\"\n)\n\nhead(trajetorias)\n\nSimple feature collection with 6 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -46.98404 ymin: -23.73644 xmax: -46.63535 ymax: -23.19474\nGeodetic CRS:  WGS 84\n     trip_id origin_file                       geometry\n1 CPTM L07-0      shapes LINESTRING (-46.63535 -23.5...\n2 CPTM L07-1      shapes LINESTRING (-46.87255 -23.1...\n3 CPTM L08-0      shapes LINESTRING (-46.64073 -23.5...\n4 CPTM L08-1      shapes LINESTRING (-46.98404 -23.5...\n5 CPTM L09-0      shapes LINESTRING (-46.77604 -23.5...\n6 CPTM L09-1      shapes LINESTRING (-46.69711 -23.7...\n\n\nGeradas as trajetórias espaciais de cada viagem, precisamos juntá-las à informação de headway médio e, em seguida, configurar o nosso mapa como desejado. No exemplo a seguir, usamos cores e espessuras de linhas que variam de acordo com o headway de cada viagem:\n\ntraj_com_headways &lt;- merge(\n  trajetorias,\n  headway_medio,\n  by = \"trip_id\"\n)\n\n# configura figura\nggplot(traj_com_headways) +\n  geom_sf(aes(color = headway_medio, size = headway_medio), alpha = 0.8) +\n  scale_color_gradient(high = \"#132B43\", low = \"#56B1F7\") +\n  labs(color = \"Headway médio\", size = \"Headway médio\") +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 5.5: Distribuição espacial dos headways no GTFS da SPTrans\n\n\n\n\n\nComo podemos ver, o pacote {gtfstools} torna o desenvolvimento de análises de feeds de transporte público algo fácil e que requer apenas o conhecimento básico de pacotes de manipulação de tabelas (como o {data.table} e o {dplyr}). O exemplo apresentado nesta seção mostra como muitas de suas funções podem ser usadas conjuntamente para revelar aspectos importantes de sistemas de transporte público descritos no formato GTFS.",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulação e visualização de dados GTFS</span>"
    ]
  },
  {
    "objectID": "5_gtfstools.html#footnotes",
    "href": "5_gtfstools.html#footnotes",
    "title": "5  Manipulação e visualização de dados GTFS",
    "section": "",
    "text": "Mais detalhes sobre o uso e a sintaxe do {data.table} estão disponíveis em https://rdatatable.gitlab.io/data.table/index.html.↩︎\nPara informações sobre como checar a versão do Java instalado em seu computador e como instalar a versão correta, caso necessário, conferir o Capítulo 3.↩︎\nMensagens informativas podem também ser listadas no arquivo validation_stdout.txt. As mensagens listadas no validation_stderr.txt e no validation_stdout.txt dependem da versão do validador utilizada.↩︎\nA lista completa de funções disponíveis está disponível em https://ipeagit.github.io/gtfstools/reference/index.html.↩︎",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Manipulação e visualização de dados GTFS</span>"
    ]
  },
  {
    "objectID": "6_cenarios_transporte.html",
    "href": "6_cenarios_transporte.html",
    "title": "6  Comparando a acessibilidade entre dois cenários de transporte",
    "section": "",
    "text": "6.1 Apresentação do estudo de caso\nComo estudo de caso, vamos fazer uma avaliação do projeto de construção da linha Leste do metrô de Fortaleza (Figura 6.1). O município de Fortaleza é a capital do estado do Ceará, localizado na região Nordeste do Brasil. Com uma população estimada de 2,7 milhões habitantes, Fortaleza é a quinta cidade mais populosa do país.\nFigura 6.1: Sistema de transporte urbano de média e alta capacidade de Fortaleza. Fonte: Braga et al. (2022).\nUm dos grandes investimentos recentes no sistema de transporte de Fortaleza é a linha Leste do metrô. O traçado da linha Leste possui 7,3 km de extensão e liga o centro da cidade ao bairro Papicu, permitindo a integração das linhas de metrô Sul e Oeste com corredores de veículo leve sobre trilhos (VLT) e com o terminal de ônibus no Papicu (Figura 6.2). Como a linha Leste ainda se encontrava em construção durante a elaboração deste livro, a análise feita neste capítulo trata de uma avaliação ex-ante, ou seja, em que avaliamos o futuro impacto de um projeto sobre a acessibilidade urbana. Esse tipo de análise se contrapõe a avaliações ex-post, usadas para avaliar o impacto causado por projetos já implementados.\nFigura 6.2: Detalhamento da futura linha Leste do metrô. Fonte: Braga et al. (2022).\nComo mostra a Figura 6.3, a população de Fortaleza está majoritariamente distribuída na região central e na porção oeste da cidade, embora haja alguns pontos de alta densidade populacional no sudeste da cidade. Via de regra, a população de mais alta renda (em tons de azul no mapa da distribuição de decis de renda) está localizada na região do centro expandido e no sudeste do município, enquanto as populações de menor renda (em tons de vermelho) estão principalmente localizadas nas regiões periféricas ao sul e a oeste. Os empregos formais na cidade se distribuem principalmente ao longo de grandes avenidas, com maior concentração no centro da cidade. Em contraste, as escolas públicas de nível médio têm uma distribuição espacial mais equilibrada por todo o território.\nFigura 6.3: Distribuição sociodemográfica, de oportunidades de emprego e de educação e de corredores de transporte público em Fortaleza",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Comparando a acessibilidade entre dois cenários de transporte</span>"
    ]
  },
  {
    "objectID": "6_cenarios_transporte.html#apresentação-do-estudo-de-caso",
    "href": "6_cenarios_transporte.html#apresentação-do-estudo-de-caso",
    "title": "6  Comparando a acessibilidade entre dois cenários de transporte",
    "section": "",
    "text": "O cenário de intervenção analisado\n\n\n\nÉ importante notar que a implementação deste projeto também será acompanhada de mudanças nas frequências das linhas Sul e Oeste do metrô e no corredor de VLT Parangaba-Mucuripe, além do racionamento do sistema de ônibus municipais, conforme o Plano de Acessibilidade Sustentável de Fortaleza (Pasfor)1. Para fins didáticos, no entanto, não incorporamos as mudanças relativas ao racionamento do sistema de ônibus aos cenários da nossa análise. Portanto, o estudo de caso que apresentamos aqui representa um cenário simplificado, que considera apenas a implementação da linha Leste e as mudanças nas frequências das demais linhas do metrô e do VLT2.",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Comparando a acessibilidade entre dois cenários de transporte</span>"
    ]
  },
  {
    "objectID": "6_cenarios_transporte.html#dados-gtfs-usados-na-análise",
    "href": "6_cenarios_transporte.html#dados-gtfs-usados-na-análise",
    "title": "6  Comparando a acessibilidade entre dois cenários de transporte",
    "section": "6.2 Dados GTFS usados na análise",
    "text": "6.2 Dados GTFS usados na análise\nNesta análise, usaremos os arquivos GTFS disponibilizados pela Etufor e pelo Metrofor. Esses dados descrevem o sistema de transporte público operante na cidade de Fortaleza em outubro de 2019. Para ter acesso a esses dados, usamos o código a seguir, que baixa os feeds usando o pacote {httr}:\n\n# cria o endereço de arquivos temporários\nend_metrofor &lt;- tempfile(\"metrofor\", fileext = \".zip\")\nend_etufor &lt;- tempfile(\"etufor\", fileext = \".zip\")\n\n# baixa dados da metrofor\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/gtfs_for_metrofor_2021-01.zip\",\n  httr::write_disk(end_metrofor)\n)\n# baixa dados da etufor\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/gtfs_for_etufor_2019-10.zip\",\n  httr::write_disk(end_etufor)\n)\n\nPara simularmos a implementação da nova linha Leste do metrô, precisamos também de um feed que descreva como deverá ser a sua operação. Este feed deve conter algumas informações-chave, como, por exemplo, o traçado da linha, a localização de suas estações, o tempo de viagem entre elas e a frequência planejada dos serviços. Neste exemplo, vamos utilizar o arquivo GTFS do projeto da linha Leste criado anteriormente por Braga et al. (2022). Assim como os feeds da Etufor e do Metrofor, este arquivo está disponível para download no repositório do livro no GitHub e pode ser baixado com o código a seguir:\n\n# cria o endereço do arquivo temporário\nend_linha_leste &lt;- tempfile(\"linha_leste\", fileext = \".zip\")\n\n# baixa o GTFS da Linha Leste\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/gtfs_linha_leste.zip\",\n  httr::write_disk(end_linha_leste)\n)\n\nOs feeds da Etufor e do Metrofor não refletem as mudanças do sistema de transporte público previstas no Pasfor. Para levá-las em consideração no cenário pós-implementação, portanto, precisamos editar esses arquivos usando o pacote {gtfstools}.\nEm nosso cenário simplificado, vamos considerar as mudanças de frequência no metrô e no VLT relatadas em Braga et al. (2022), com base no Pasfor: i) aumento da frequência da linha Sul do metrô de quatro para dez viagens por hora; ii) aumento da frequência da linha Oeste do metrô de duas para cinco viagens por hora; e iii) aumento da frequência do VLT Parangaba-Mucuripe de duas para oito viagens por hora. Como estamos considerando apenas mudanças em linhas de metrô e VLT, vamos nos ater a edições no feed do Metrofor. Em primeiro lugar, precisamos ler esse arquivo com a função read_gtfs() e entender como as linhas estão descritas. Para isso, vamos olhar como as tabelas routes, trips e calendar estão estruturadas.\n\nlibrary(gtfstools)\n\ngtfs_metrofor &lt;- read_gtfs(end_metrofor)\n\ngtfs_metrofor$routes[, .(route_id, route_long_name)]\n\n   route_id      route_long_name\n1:        8 VLT Parangaba Papicu\n2:        6            Linha Sul\n3:        7          Linha Oeste\n\ngtfs_metrofor$trips[, .N, by = .(route_id, direction_id, service_id)]\n\n   route_id direction_id service_id  N\n1:        7            0          4 15\n2:        7            1          4 15\n3:        6            0          4 63\n4:        6            1          4 64\n5:        8            0          4 29\n6:        8            1          4 29\n\ngtfs_metrofor$calendar\n\n   service_id monday tuesday wednesday thursday friday saturday sunday\n1:          4      1       1         1        1      1        1      0\n   start_date   end_date\n1: 2020-01-01 2021-12-31\n\n\nO feed descreve três linhas distintas: os dois corredores de metrô e o corredor de VLT. Como o feed não contém uma tabela frequencies, cada rota é descrita por diversas viagens, que partem em diferentes horários do dia. Essas viagens são divididas em viagens de ida e de volta e estão todas associadas a um mesmo serviço, que opera em dias úteis e no sábado.\nA estratégia que vamos usar para fazer as mudanças necessárias no feed é composta pelas etapas descritas a seguir.\n\nFiltrar o feed de forma a manter apenas uma viagem por sentido para cada linha, que servirá para nos dizer o tempo que cada viagem leva entre as suas paradas.\nAdicionar uma tabela frequencies ao objeto GTFS, em que descreveremos a frequência de cada viagem.\n“Converter” os registros da recém-adicionada tabela frequencies para cronogramas descritos na tabela stop_times. Essa conversão servirá para manter a característica do feed original, que descreve as viagens usando apenas a stop_times.\n\nPara manter apenas uma viagem por sentido para cada linha, precisamos filtrar o feed usando a filter_by_trip_id(). Vamos usar a função para manter apenas o primeiro registro de viagem por linha e por sentido.\n\n# identifica a linha na tabela trips em que os primeiros registros por rota e\n# por sentido estão localizados\nindice &lt;- gtfs_metrofor$trips[, .I[1], by = .(route_id, direction_id)]$V1\n\n# seleciona o identificador de cada linha acima\nviagens_selecionadas &lt;- gtfs_metrofor$trips[indice]$trip_id\n\n# filtra o gtfs para manter apenas as viagens acima\ngtfs_filtrado &lt;- filter_by_trip_id(\n  gtfs_metrofor,\n  trip_id = viagens_selecionadas\n)\n\ngtfs_filtrado$trips\n\n   trip_id     trip_headsign direction_id block_id shape_id service_id route_id\n1:       4           Caucaia            0                            4        7\n2:      19      Moura Brasil            1                            4        7\n3:      34 Carlito Benevides            0                            4        6\n4:      96    Chico da Silva            1                            4        6\n5:     159              Iate            0                            4        8\n6:     181         Parangaba            1                            4        8\n\n\nA fim de facilitar nossa edição, vamos mudar o id das viagens, identificando o corredor e o sentido em que elas operam. Essa mudança precisa ser feita tanto na tabela trips quanto na stop_times.\n\ngtfs_filtrado$stop_times[\n  ,\n  trip_id := data.table::fcase(\n    trip_id == \"4\", \"metro_oeste_0\",\n    trip_id == \"19\", \"metro_oeste_1\",\n    trip_id == \"34\", \"metro_sul_0\",\n    trip_id == \"96\", \"metro_sul_1\",\n    trip_id == \"159\", \"vlt_0\",\n    trip_id == \"181\", \"vlt_1\"\n  )\n]\n\ngtfs_filtrado$trips[\n  ,\n  trip_id := data.table::fcase(\n    trip_id == \"4\", \"metro_oeste_0\",\n    trip_id == \"19\", \"metro_oeste_1\",\n    trip_id == \"34\", \"metro_sul_0\",\n    trip_id == \"96\", \"metro_sul_1\",\n    trip_id == \"159\", \"vlt_0\",\n    trip_id == \"181\", \"vlt_1\"\n  )\n]\n\ngtfs_filtrado$trips\n\n         trip_id     trip_headsign direction_id block_id shape_id service_id\n1: metro_oeste_0           Caucaia            0                            4\n2: metro_oeste_1      Moura Brasil            1                            4\n3:   metro_sul_0 Carlito Benevides            0                            4\n4:   metro_sul_1    Chico da Silva            1                            4\n5:         vlt_0              Iate            0                            4\n6:         vlt_1         Parangaba            1                            4\n   route_id\n1:        7\n2:        7\n3:        6\n4:        6\n5:        8\n6:        8\n\n\nPrecisamos agora adicionar uma tabela frequencies que descreva a frequência de cada viagem. A especificação requer, no entanto, que listemos o headway de cada linha, e não a sua frequência. Como o headway é o inverso da frequência, precisamos dividir o intervalo de uma hora (3.600 segundos) pela frequência de cada linha (10 viagens/hora para a linha Sul, 5 viagens/hora para a linha Oeste e 8 viagens/hora para o VLT). Como resultado, temos que os headways da linha Sul, da linha Oeste e do VLT passarão a ser, respectivamente, 360, 720 e 450 segundos. Com o código a seguir, criamos uma tabela frequencies com os pacotes {tibble} e {data.table}.\n\nfrequencias &lt;- tibble::tribble(\n  ~trip_id,        ~start_time, ~end_time,  ~headway_secs, ~exact_times,\n  \"metro_oeste_0\", \"06:00:00\",  \"09:00:00\", 720L,          1,\n  \"metro_oeste_1\", \"06:00:00\",  \"09:00:00\", 720L,          1,\n  \"metro_sul_0\",   \"06:00:00\",  \"09:00:00\", 360L,          1,\n  \"metro_sul_1\",   \"06:00:00\",  \"09:00:00\", 360L,          1,\n  \"vlt_0\",         \"06:00:00\",  \"09:00:00\", 450L,          1,\n  \"vlt_1\",         \"06:00:00\",  \"09:00:00\", 450L,          1\n)\n\n# converte tabela para data.table\ndata.table::setDT(frequencias)\n\n# cria tabela frequencies no objeto gtfs com base na tabela acima\ngtfs_filtrado$frequencies &lt;- frequencias\n\nA fim de simplificar este estudo de caso, assumimos que os headways listados são válidos no período de 6h às 9h. Essa premissa é válida no nosso caso, pois iremos calcular as matrizes de tempo de viagem apenas durante o pico da manhã. No entanto, caso desejássemos calcular os tempos de viagens em outros períodos do dia, ou mesmo utilizar este arquivo GTFS na operação do dia a dia desses corredores, precisaríamos listar os headways para os demais períodos do dia, como fora-pico, madrugada etc. O valor 1 da coluna exact_times estabelece que o cronograma das viagens durante o período especificado deve seguir o headway à risca, e não de forma aproximada3.\nO objeto GTFS que resulta das modificações feitas até aqui já pode perfeitamente ser utilizado para o cálculo de matrizes de tempo de viagem. Buscando retomar a característica inicial do feed de não possuir uma tabela frequencies, no entanto, vamos “converter” os registros dessa tabela em cronogramas descritos na tabela stop_times. Para isso, usamos a função frequencies_to_stop_times(). Como todas as viagens do feed são convertidas, a tabela frequencies é removida do objeto.\n\ngtfs_filtrado &lt;- frequencies_to_stop_times(gtfs_filtrado)\n\ngtfs_filtrado$frequencies\n\nNULL\n\n\nPara verificar se a operação deu certo, vamos olhar para as viagens da linha Oeste no sentido Caucaia (cujo direction_id é 0). Como essa linha deve ter uma frequência de cinco viagens por hora entre 6h e 9h, a tabela trips deve conter exatamente dezesseis viagens relacionadas a ela (cinco viagens por hora durante três horas, mais uma viagem começando às 9h).\n\n# seleciona apenas as viagens da linha oeste do metrô\nmetro_linha_oeste &lt;- gtfs_filtrado$trips[grepl(\"metro_oeste_0\", trip_id)]\n\n# checa número de viagens\nnrow(metro_linha_oeste)\n\n[1] 16\n\n# checa identificador de cada viagem\nmetro_linha_oeste$trip_id\n\n [1] \"metro_oeste_0_1\"  \"metro_oeste_0_2\"  \"metro_oeste_0_3\"  \"metro_oeste_0_4\" \n [5] \"metro_oeste_0_5\"  \"metro_oeste_0_6\"  \"metro_oeste_0_7\"  \"metro_oeste_0_8\" \n [9] \"metro_oeste_0_9\"  \"metro_oeste_0_10\" \"metro_oeste_0_11\" \"metro_oeste_0_12\"\n[13] \"metro_oeste_0_13\" \"metro_oeste_0_14\" \"metro_oeste_0_15\" \"metro_oeste_0_16\"\n\n\nA tabela stop_times, por sua vez, deve listar essas viagens partindo a cada doze minutos (o equivalente a um headway de 450 segundos). Vamos verificar, portanto, o primeiro registro do cronograma de cada uma das viagens listadas anteriormente.\n\nviagens_metro_oeste &lt;- metro_linha_oeste$trip_id\n\n# identifica a linha na tabela stop_times em que estão os primeiros registros de\n# cada uma das viagens acima\nindice_viagens &lt;- gtfs_filtrado$stop_times[\n  trip_id %in% viagens_metro_oeste,\n  .I[1],\n  by = trip_id\n]$V1\n\ngtfs_filtrado$stop_times[indice_viagens, .(trip_id, departure_time)]\n\n             trip_id departure_time\n 1:  metro_oeste_0_1       06:00:00\n 2:  metro_oeste_0_2       06:12:00\n 3:  metro_oeste_0_3       06:24:00\n 4:  metro_oeste_0_4       06:36:00\n 5:  metro_oeste_0_5       06:48:00\n 6:  metro_oeste_0_6       07:00:00\n 7:  metro_oeste_0_7       07:12:00\n 8:  metro_oeste_0_8       07:24:00\n 9:  metro_oeste_0_9       07:36:00\n10: metro_oeste_0_10       07:48:00\n11: metro_oeste_0_11       08:00:00\n12: metro_oeste_0_12       08:12:00\n13: metro_oeste_0_13       08:24:00\n14: metro_oeste_0_14       08:36:00\n15: metro_oeste_0_15       08:48:00\n16: metro_oeste_0_16       09:00:00\n\n\nA operação de “conversão” da tabela frequencies para a stop_times, portanto, funcionou corretamente, e podemos utilizar o nosso feed modificado no cálculo da matriz de tempo de viagem. Para isso, no entanto, precisamos salvar o objeto GTFS na memória em formato .zip, assim como estão salvos os demais dados GTFS que serão utilizados no estudo de caso. Para isso, usamos a função write_gtfs().\n\nend_metrofor_modificado &lt;- tempfile(\"metrofor_modificado\", fileext = \".zip\")\n\nwrite_gtfs(gtfs_filtrado, end_metrofor_modificado)\n\nTemos, agora, quatro arquivos de GTFS distintos:\n\no feed da Etufor, que descreve o sistema de ônibus que operava em outubro de 2019;\no feed do Metrofor, que descreve a operação em outubro de 2019 das linhas Sul e Oeste do metrô e do VLT Parangaba-Mucuripe;\no feed modificado do Metrofor, que descreve a futura operação das linhas Sul e Oeste do metrô e do VLT Parangaba-Mucuripe como previsto no Pasfor; e\no feed da linha Leste, que descreve a futura operação dessa linha.\n\nEsses quatro arquivos GTFS serão usados em conjunto para calcular as condições de acessibilidade de Fortaleza antes e depois da implementação da linha Leste. No cenário pré-linha Leste, vamos calcular as matrizes de tempo de viagem com base apenas nos feeds de outubro de 2019 do Metrofor e da Etufor, que representam a típica operação de transporte público da cidade antes da implementação do novo corredor. No cenário pós-implementação, consideraremos o feed da Etufor, o feed modificado do Metrofor, com as frequências do metrô e do VLT alteradas, e o arquivo GTFS da linha Leste, incorporando à análise a operação planejada dessa linha após sua finalização.",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Comparando a acessibilidade entre dois cenários de transporte</span>"
    ]
  },
  {
    "objectID": "6_cenarios_transporte.html#cálculo-das-matrizes-de-tempo-de-viagem",
    "href": "6_cenarios_transporte.html#cálculo-das-matrizes-de-tempo-de-viagem",
    "title": "6  Comparando a acessibilidade entre dois cenários de transporte",
    "section": "6.3 Cálculo das matrizes de tempo de viagem",
    "text": "6.3 Cálculo das matrizes de tempo de viagem\nFeitas as edições necessárias ao feed do Metrofor e definidos os dados GTFS que vamos usar em cada um dos cenários de transporte público, o próximo passo é calcular as matrizes de tempo de viagem, que posteriormente serão utilizadas para estimar os níveis de acessibilidade. Para isso, vamos utilizar a função travel_time_matrix() do pacote {r5r}, como apresentado anteriormente no Capítulo 3.\nAntes de calcular as matrizes, contudo, precisamos organizar os nossos arquivos na estrutura que o {r5r} requer. Com o código a seguir, criamos uma pasta separada para cada um dos nossos cenários (antes e depois) e salvamos nelas os dados necessários para o roteamento:\n\n# cria pasta raiz da análise de dados\npasta_analise &lt;- \"analise_de_impacto\"\ndir.create(pasta_analise)\n\n# cria pasta dos cenários\npasta_antes &lt;- file.path(pasta_analise, \"antes\")\npasta_depois &lt;- file.path(pasta_analise, \"depois\")\n\ndir.create(pasta_antes)\ndir.create(pasta_depois)\n\n# copia os arquivos para pasta do cenário \"antes\"\nfile.copy(from = end_etufor, to = file.path(pasta_antes, \"etufor.zip\"))\nfile.copy(from = end_metrofor, to = file.path(pasta_antes, \"metrofor.zip\"))\n\n# copia os arquivos para pasta do cenário \"depois\"\nfile.copy(from = end_etufor, to = file.path(pasta_depois, \"etufor.zip\"))\nfile.copy(\n  from = end_metrofor_modificado,\n  to = file.path(pasta_depois, \"metrofor_modificado.zip\")\n)\nfile.copy(\n  from = end_linha_leste,\n  to = file.path(pasta_depois, \"linha_leste.zip\")\n)\n\n# visualiza esquema de arquivos na pasta\nfs::dir_tree(pasta_analise)\n\n\n\nanalise_de_impacto\n├── antes\n│   ├── etufor.zip\n│   └── metrofor.zip\n└── depois\n    ├── etufor.zip\n    ├── linha_leste.zip\n    └── metrofor_modificado.zip\n\n\nPara estimarmos o tempo de viagem na nossa área de estudo, precisamos ainda de um arquivo com os dados do OSM representando a rede viária local, em formato .pbf. Opcionalmente, iremos utilizar também um arquivo representando a topografia local, em formato .tif. Esses arquivos, assim como os dados GTFS, estão disponíveis para download no repositório do livro. Partindo do pressuposto de que a implementação da linha Leste não vai afetar o traçado das ruas e calçadas na região, bem como a topografia local, podemos usar os mesmos arquivos para o cálculo das duas matrizes de tempo de viagem. Com o código apresentado a seguir, baixamos esses dados e copiamos os arquivos para as pastas dos dois cenários de transporte:\n\n# cria endereço temporário dos arquivos na máquina local\nend_pbf &lt;- tempfile(\"rede_viaria\", fileext = \".osm.pbf\")\nend_tif &lt;- tempfile(\"topografia\", fileext = \".tif\")\n\n# download dos dados de OSM\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/fortaleza.osm.pbf\",\n  httr::write_disk(end_pbf)\n)\n# download dos dados de topografia\nhttr::GET(\n  \"https://github.com/ipeaGIT/intro_access_book/releases/download/data_1st_edition/topografia3_for.tif\",\n  httr::write_disk(end_tif)\n)\n# copia arquivo para as pastas dos cenários antes e depois\nfile.copy(from = end_pbf, to = file.path(pasta_antes, \"rede_viaria.osm.pbf\"))\nfile.copy(from = end_pbf, to = file.path(pasta_depois, \"rede_viaria.osm.pbf\"))\n\nfile.copy(from = end_tif, to = file.path(pasta_antes, \"topografia.tif\"))\nfile.copy(from = end_tif, to = file.path(pasta_depois, \"topografia.tif\"))\n\n\nfs::dir_tree(pasta_analise)\n\nanalise_de_impacto\n├── antes\n│   ├── etufor.zip\n│   ├── metrofor.zip\n│   ├── rede_viaria.osm.pbf\n│   └── topografia.tif\n└── depois\n    ├── etufor.zip\n    ├── linha_leste.zip\n    ├── metrofor_modificado.zip\n    ├── rede_viaria.osm.pbf\n    └── topografia.tif\n\n\nCom os dados organizados nas pastas, podemos começar o cálculo das matrizes de tempo de viagem. A primeira etapa é construir a rede de transporte multimodal usada pelo {r5r} no roteamento a partir dos dados da rede viária, do sistema de transporte público e de topografia. Isso é feito com o comando setup_r5(), que também retorna uma conexão com o R5. Com o código a seguir, criamos duas redes, uma para cada cenário:\n\n# aloca a memória disponível para o Java\noptions(java.parameters = \"-Xmx4G\")\n\n# carrega a biblioteca\nlibrary(r5r)\n\n# cria a rede de transporte multimodal de cada cenário\ncon_r5r_antes &lt;- setup_r5(pasta_antes, verbose = FALSE)\ncon_r5r_depois &lt;- setup_r5(pasta_depois, verbose = FALSE)\n\nCriadas as redes de transporte de cada cenário, prosseguimos para o cálculo das matrizes de tempo de viagem. Nesta etapa, vamos utilizar como origens e destinos os centroides de uma grade espacial de hexágonos de Fortaleza, disponibilizada pelo pacote {aopdata}4. Cada hexágono tem uma área de 0,11 km², aproximadamente um quarteirão, o que permite uma análise espacial bem detalhada.\nPara comparar adequadamente os dois cenários, precisamos calcular as duas matrizes considerando os mesmos parâmetros de viagem. Aqui, vamos considerar viagens a pé ou por transporte público, permitir caminhadas de até trinta minutos nas pernas de acesso e egresso das paradas de transporte público e limitar o tempo máximo de viagem em até sessenta minutos. Vamos considerar o horário de partida de 7h, durante o horário de pico de uma típica segunda-feira de operação:\n\n# baixa os dados da grade espacial\ngrade_fortaleza &lt;- aopdata::read_grid(city = \"Fortaleza\")\n\n# calcula os centroides das células da grade\npontos &lt;- sf::st_centroid(grade_fortaleza)\n\n# renomeia o nome da coluna com o id das células\nnames(pontos)[1] &lt;- \"id\"\n\n# calcula a matriz de tempo de viagem do cenário \"antes\"\nmatriz_antes &lt;- travel_time_matrix(\n  con_r5r_antes,\n  origins = pontos,\n  destinations = pontos,\n  mode = c(\"WALK\", \"TRANSIT\"),\n  departure_datetime = as.POSIXct(\n    \"02-03-2020 07:00:00\",\n    format = \"%d-%m-%Y %H:%M:%S\"\n  ),\n  max_walk_time = 30,\n  max_trip_duration = 60,\n  verbose = FALSE,\n  progress = FALSE\n)\n\n# calcula a matriz de tempo de viagem do cenário \"depois\"\nmatriz_depois &lt;- travel_time_matrix(\n  con_r5r_depois,\n  origins = pontos,\n  destinations = pontos,\n  mode = c(\"WALK\", \"TRANSIT\"),\n  departure_datetime = as.POSIXct(\n    \"02-03-2020 07:00:00\",\n    format = \"%d-%m-%Y %H:%M:%S\"\n  ),\n  max_walk_time = 30,\n  max_trip_duration = 60,\n  verbose = FALSE,\n  progress = FALSE\n)\n\nhead(matriz_antes)\n\n           from_id           to_id travel_time_p50\n1: 89801040323ffff 89801040323ffff               2\n2: 89801040323ffff 89801040327ffff              22\n3: 89801040323ffff 8980104032bffff              23\n4: 89801040323ffff 8980104032fffff              15\n5: 89801040323ffff 89801040333ffff              10\n6: 89801040323ffff 89801040337ffff              19\n\nhead(matriz_depois)\n\n           from_id           to_id travel_time_p50\n1: 89801040323ffff 89801040323ffff               2\n2: 89801040323ffff 89801040327ffff              22\n3: 89801040323ffff 8980104032bffff              23\n4: 89801040323ffff 8980104032fffff              15\n5: 89801040323ffff 89801040333ffff              10\n6: 89801040323ffff 89801040337ffff              19\n\n\nÀ primeira vista, nossas matrizes parecem iguais: todos os tempos de viagem na amostra de pares mostrados anteriormente são idênticos. Isso ocorre porque o projeto de expansão do metrô fica restrito a uma área relativamente pequena, no centro da cidade de Fortaleza, e as mudanças nas frequências do VLT e das linhas Sul e Oeste do metrô afetam principalmente as imediações desses corredores. Assim, muitos deslocamentos entre regiões da cidade de fato não são afetados pela implementação do corredor e das mudanças de frequência. Diversos pares origem-destino, no entanto, têm os tempos de viagem entre eles impactados:\n\n# une os tempos de viagem dos dois cenários\ncomparacao &lt;- merge(\n  matriz_antes,\n  matriz_depois,\n  by = c(\"from_id\", \"to_id\"),\n  suffixes = c(\"_antes\", \"_depois\")\n)\n\n# mostra apenas os pares OD cujo tempo que os distancia diminuiu\ncomparacao[travel_time_p50_antes &lt; travel_time_p50_depois]\n\n               from_id           to_id travel_time_p50_antes\n    1: 8980104096fffff 8980104e803ffff                    48\n    2: 8980104096fffff 8980104e807ffff                    57\n    3: 8980104096fffff 8980104e80bffff                    53\n    4: 8980104096fffff 8980104e80fffff                    55\n    5: 8980104096fffff 8980104e863ffff                    56\n   ---                                                      \n12890: 8980104eecbffff 8980104ea5bffff                    52\n12891: 8980104eecbffff 8980104eac3ffff                    49\n12892: 8980104eecbffff 8980104ead3ffff                    44\n12893: 8980104eecbffff 8980104eadbffff                    49\n12894: 8980104eecbffff 8980104ee6bffff                    41\n       travel_time_p50_depois\n    1:                     50\n    2:                     59\n    3:                     55\n    4:                     57\n    5:                     57\n   ---                       \n12890:                     57\n12891:                     53\n12892:                     47\n12893:                     50\n12894:                     42",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Comparando a acessibilidade entre dois cenários de transporte</span>"
    ]
  },
  {
    "objectID": "6_cenarios_transporte.html#cálculo-da-acessibilidade-nos-cenários-antes-e-depois",
    "href": "6_cenarios_transporte.html#cálculo-da-acessibilidade-nos-cenários-antes-e-depois",
    "title": "6  Comparando a acessibilidade entre dois cenários de transporte",
    "section": "6.4 Cálculo da acessibilidade nos cenários antes e depois",
    "text": "6.4 Cálculo da acessibilidade nos cenários antes e depois\nO cálculo dos níveis de acessibilidade nos dois cenários é muito simples, exigindo apenas um processamento básico dos dados e a aplicação de uma das funções de cálculo de acessibilidade do pacote {accessibility}. Para facilitar o tratamento dos dados, vamos empilhar as matrizes de tempo de viagem dos dois cenários em uma única tabela, identificando cada cenário com a coluna cenario:\n\n# combina as matrizes de tempo de viagem dos cenários antes e depois\nmatriz &lt;- rbind(matriz_antes, matriz_depois, idcol = \"cenario\")\nmatriz[, cenario := factor(cenario, labels = c(\"antes\", \"depois\"))]\n\nmatriz\n\n         cenario         from_id           to_id travel_time_p50\n      1:   antes 89801040323ffff 89801040323ffff               2\n      2:   antes 89801040323ffff 89801040327ffff              22\n      3:   antes 89801040323ffff 8980104032bffff              23\n      4:   antes 89801040323ffff 8980104032fffff              15\n      5:   antes 89801040323ffff 89801040333ffff              10\n     ---                                                        \n3739271:  depois 8980107b6dbffff 8980107b6cbffff               9\n3739272:  depois 8980107b6dbffff 8980107b6cfffff              15\n3739273:  depois 8980107b6dbffff 8980107b6d3ffff               9\n3739274:  depois 8980107b6dbffff 8980107b6d7ffff              15\n3739275:  depois 8980107b6dbffff 8980107b6dbffff               0\n\n\nPara calcular os níveis de acessibilidade, precisamos de uma tabela com os dados de uso do solo da cidade de Fortaleza. Podemos baixar uma tabela com esses dados usando a função read_landuse() do pacote {aopdata}, que traz dados de contagem populacional e de oportunidades em cada um dos hexágonos que compõem a grade espacial baixada anteriormente.\n\n# baixa dados de uso do solo em fortaleza\ndados_fortaleza &lt;- aopdata::read_landuse(\n  city = \"Fortaleza\",\n  showProgress = FALSE\n)\n\nA fins de demonstração, vamos calcular a acessibilidade a postos de trabalho e a escolas públicas de ensino médio na nossa área de estudo. Os dados do total de empregos e de escolas públicas de nível médio em cada hexágono estão listados nas colunas T001 e E004, respectivamente. Vamos renomeá-las para facilitar sua identificação e manter apenas as colunas necessárias na tabela de dados de uso do solo. Vamos manter também as colunas P001, de população total em cada hexágono, e R003, do decil de renda em que cada hexágono se encontra, que serão úteis mais à frente:\n\n# renomeia colunas\ncolunas_mantidas &lt;- c(\"id\", \"empregos\", \"escolas\", \"populacao\", \"decil\")\ndata.table::setnames(\n  dados_fortaleza,\n  old = c(\"id_hex\", \"T001\", \"E004\", \"P001\", \"R003\"),\n  new = colunas_mantidas\n)\n\n# deleta as demais colunas que não serão usadas\ndados_fortaleza[, setdiff(names(dados_fortaleza), colunas_mantidas) := NULL]\n\ndados_fortaleza\n\n                   id populacao decil empregos escolas\n   1: 89801040323ffff        30     1        0       0\n   2: 89801040327ffff       318     1        7       0\n   3: 8980104032bffff         0    NA        0       0\n   4: 8980104032fffff       103     1       98       0\n   5: 89801040333ffff        43     1        0       0\n  ---                                                 \n2558: 8980107b6cbffff      2575     4      124       0\n2559: 8980107b6cfffff      2997     3        4       0\n2560: 8980107b6d3ffff      1751     8       14       0\n2561: 8980107b6d7ffff      2032     4      134       0\n2562: 8980107b6dbffff      1896     9      193       0\n\n\nUma decisão-chave no cálculo de acessibilidade é a escolha da medida a ser utilizada. É extremamente importante pesar as vantagens e desvantagens de cada medida e compreender quais indicadores se adequam às oportunidades para as quais desejamos calcular os níveis de acessibilidade. Neste exemplo, utilizaremos duas medidas distintas:\n\nNo cálculo da acessibilidade a empregos, vamos usar a medida de oportunidades cumulativas. Essa métrica nos permite entender quantos empregos são acessíveis dentro de um determinado custo de viagem. Apesar das suas limitações discutidas no Capítulo 2, este é um dos indicadores mais amplamente utilizados. Isso se deve, em grande medida, à facilidade de comunicar e interpretar seus resultados. Nesse exemplo, vamos estabelecer como limite de custo um tempo de viagem de sessenta minutos, valor muito próximo do tempo médio de deslocamento casa-trabalho por transporte público de Fortaleza em 2019 (cerca de 58 minutos, segundo o Pasfor).\nNo cálculo da acessibilidade a escolas públicas, vamos usar a medida de custo mínimo de viagem. Essa métrica é especialmente útil para avaliar a cobertura de serviços públicos essenciais, como educação e saúde básica. Com ela, podemos, por exemplo, identificar as parcelas da população que estão a uma distância maior do que a considerada razoável para acessar esses serviços essenciais.\n\nComo mostrado anteriormente no Capítulo 3, o cálculo dessas medidas pode ser feito com as funções cumulative_cutoff() e cost_to_closest(), respectivamente, do pacote {accessibility}:\n\n# carrega a biblioteca\nlibrary(accessibility)\n\n# calcula a medida de oportunidades cumulativas\nacesso_a_empregos &lt;- cumulative_cutoff(\n  matriz,\n  land_use_data = dados_fortaleza,\n  opportunity = \"empregos\",\n  travel_cost = \"travel_time_p50\",\n  cutoff = 60,\n  group_by = \"cenario\"\n)\n\nacesso_a_empregos\n\n                   id cenario empregos\n   1: 89801040323ffff   antes    48271\n   2: 89801040327ffff   antes    26918\n   3: 8980104032bffff   antes    48271\n   4: 8980104032fffff   antes    69550\n   5: 89801040333ffff   antes    26918\n  ---                                 \n5120: 8980107b6cbffff  depois   379488\n5121: 8980107b6cfffff  depois   285899\n5122: 8980107b6d3ffff  depois   347678\n5123: 8980107b6d7ffff  depois   359536\n5124: 8980107b6dbffff  depois   373652\n\n# calcula a medida de tempo mínimo de viagem\ntempo_a_escolas &lt;- cost_to_closest(\n  matriz,\n  land_use_data = dados_fortaleza,\n  opportunity = \"escolas\",\n  travel_cost = \"travel_time_p50\",\n  group_by = \"cenario\"\n)\n\ntempo_a_escolas\n\n                   id cenario travel_time_p50\n   1: 89801040323ffff   antes              28\n   2: 89801040323ffff  depois              28\n   3: 89801040327ffff   antes              37\n   4: 89801040327ffff  depois              37\n   5: 8980104032bffff   antes              28\n  ---                                        \n5120: 8980107b6d3ffff  depois              18\n5121: 8980107b6d7ffff   antes              14\n5122: 8980107b6d7ffff  depois              14\n5123: 8980107b6dbffff   antes              15\n5124: 8980107b6dbffff  depois              15\n\n\nO resultado da função de custo mínimo de viagem inclui alguns valores Inf (abreviação de infinito). Esse valor é utilizado para sinalizar origens que não conseguem alcançar nenhuma oportunidade, dadas as viagens que compõem a matriz. Em nosso caso, isso significa que as origens listadas com esse valor não conseguem alcançar nenhuma escola pública de nível médio dentro de sessenta minutos (limite de tempo de viagem imposto no cálculo da matriz). Para simplificar os cálculos daqui em diante, vamos considerar que essas regiões estão a oitenta minutos de viagem de sua escola mais próxima:\n\n# substitui valores Inf por tempos de viagem de 80 minutos\ntempo_a_escolas[\n  ,\n  travel_time_p50 := ifelse(is.infinite(travel_time_p50), 80, travel_time_p50)\n]\n\nFeito isso, podemos calcular a diferença dos níveis de acessibilidade entre os dois cenários. Esta informação é útil para comunicar de forma mais direta o efeito da implementação da linha Leste e das mudanças de frequência dos outros corredores sobre as condições de acessibilidade na cidade. Para isso, usamos o código adiante:\n\nacesso_a_empregos[\n  ,\n  diferenca := data.table::shift(empregos, type = \"lead\") - empregos,\n  by = id\n]\n\ntempo_a_escolas[\n  ,\n  diferenca := data.table::shift(travel_time_p50, type = \"lead\") -\n    travel_time_p50,\n  by = id\n]",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Comparando a acessibilidade entre dois cenários de transporte</span>"
    ]
  },
  {
    "objectID": "6_cenarios_transporte.html#análise-dos-níveis-de-acessibilidade-antes-e-depois",
    "href": "6_cenarios_transporte.html#análise-dos-níveis-de-acessibilidade-antes-e-depois",
    "title": "6  Comparando a acessibilidade entre dois cenários de transporte",
    "section": "6.5 Análise dos níveis de acessibilidade antes e depois",
    "text": "6.5 Análise dos níveis de acessibilidade antes e depois\nAgora que calculamos os níveis de acessibilidade em cada cenário e a diferença entre eles, nós conseguimos analisar como a futura implementação da linha Leste em conjunto com o aumento da frequência das linhas de metrô e VLT deverá impactar as condições de acessibilidade em nossa área de estudo. Como primeira análise exploratória, podemos investigar o impacto dessas mudanças sobre a acessibilidade média da cidade. Olhando primeiro para a acessibilidade a oportunidades de emprego, vamos calcular a quantidade média de empregos acessíveis em cada cenário. Aqui, é importante calcular a média de acessibilidade ponderada pela população de cada célula da grade espacial que estamos usando, visto que células com maiores populações contribuem mais para o nível médio da população como um todo do que células com poucas pessoas.\n\n# carrega bibliotecas de visualização de dados\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# une tabela de acessibilidade com informações de pessoas residentes e renda em\n# renda nos hexágonos\nacesso_a_empregos &lt;- merge(\n  acesso_a_empregos,\n  dados_fortaleza,\n  by = \"id\"\n)\n\n# renomeia colunas com nomes ambíguos pós-união\ndata.table::setnames(\n  acesso_a_empregos,\n  old = c(\"empregos.x\", \"empregos.y\"),\n  new = c(\"acesso_a_empregos\", \"empregos_no_hexagono\")\n)\n\n# calcula a média ponderada de acessibilidade em cada cenário\nacesso_medio &lt;- acesso_a_empregos[\n  ,\n  .(acesso  = weighted.mean(acesso_a_empregos, w = as.numeric(populacao))),\n  by = cenario\n]\n\nggplot(data = acesso_medio, aes(x = cenario, y = acesso / 1000)) +\n  geom_col(fill = \"#0f3c53\") +\n  geom_text(\n    aes(\n      label = formatC(\n        acesso / 1000,\n        digits = 1,\n        decimal.mark = \",\",\n        format = \"f\"\n      )\n    ),\n    vjust = 1.5,\n    color = \"white\",\n    size = 10\n  ) +\n  ylab(\"Empregos acessíveis (em milhares)\") +\n  scale_x_discrete(name = \"Cenário\", labels = c(\"Antes\", \"Depois\")) +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 6.4: Média de acessibilidade ao emprego em Fortaleza por cenário de transporte\n\n\n\n\n\nOs resultados mostram que a população de Fortaleza conseguia acessar em média 244.137 empregos em até sessenta minutos de viagem por transporte público antes da expansão do metrô, em 2019. A implementação da linha Leste e os aumentos nas frequências do metrô e do VLT aumentam esse valor em 5,3%, para 257.177 empregos em média.\nAnalisando o tempo médio de acesso à escola pública de ensino médio mais próxima, notamos que as mudanças no sistema de transportes pouco alteram a acessibilidade a essas escolas. Em média, a população de Fortaleza demorava cerca de 12 minutos e meio para chegar à escola pública de ensino médio mais próxima de sua casa em 2019. Após a conclusão da extensão do metrô e o aumento da frequência das linhas de metrô e VLT, esse resultado permanece praticamente inalterado.\n\n# une tabela de tempo a escolas com informações de pessoas residentes nos\n# hexágonos\ntempo_a_escolas &lt;- merge(\n  tempo_a_escolas,\n  dados_fortaleza,\n  by = \"id\"\n)\n\n# calcula a média ponderada de acessibilidade em cada cenário\ntempo_medio &lt;- tempo_a_escolas[\n  ,\n  .(tempo  = weighted.mean(travel_time_p50, w = as.numeric(populacao))),\n  by = cenario\n]\n\nggplot(data = tempo_medio, aes(x = cenario, y = tempo)) +\n  geom_col(fill = \"#0d6556\") +\n  geom_text(\n    aes(label = formatC(tempo, digits = 2, decimal.mark = \",\", format = \"f\")),\n    vjust = 1.5,\n    color = \"white\",\n    size = 10\n  ) +\n  ylab(\"Média do tempo até a escola\\nmais próxima (minutos)\") +\n  scale_x_discrete(name = \"Cenário\", labels = c(\"Antes\", \"Depois\")) +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 6.5: Média do tempo até a escola pública de nível médio mais próxima em Fortaleza por cenário de transporte\n\n\n\n\n\nEm síntese, os resultados mostram que o plano de construção da Linha Leste do metrô e de ajuste das frequências de outros corredores de transporte público da cidade deverá afetar mais significativamente a acessibilidade a oportunidades de emprego do que a acessibilidade a escolas públicas de nível médio. Isso se explica principalmente pela distribuição espacial desses dois tipos de oportunidade na cidade de Fortaleza: enquanto os empregos se distribuem de forma muito mais concentrada no centro da cidade, as escolas estão muito mais bem distribuídas em todo o território. As mudanças no sistema de transporte público, portanto, devem facilitar o acesso de moradores de regiões mais afastadas aos empregos localizados no centro. Em contrapartida, a distribuição mais equitativa de escolas públicas resulta em condições relativamente boas de acesso a esses locais mesmo antes das mudanças na rede de transporte, explicando por que tais mudanças deverão ter impacto tão pequeno no tempo médio de acesso a escolas.\nEsses resultados podem ser melhor compreendidos quando observamos a sua distribuição espacial. Antes de fazer isso, no entanto, vamos criar um objeto espacial que descreve o traçado dos corredores de transporte da cidade - o que torna ainda mais evidente o impacto das mudanças no sistema de transportes sobre os níveis de acessibilidade.\n\n# lê arquivos gtfs necessários para gerar as geometrias de cada corredor\ngtfs_metrofor &lt;- read_gtfs(end_metrofor)\ngtfs_linha_leste &lt;- read_gtfs(end_linha_leste)\n\n# gtfs da metrofor não contém tabela shapes, logo vamos criar a geometria\n# a partir das tabelas stops e stop_times com a função get_trip_geometry()\nviagens_corredores &lt;- c(\"4\", \"34\", \"159\")\n\n# a sequência de paradas de uma das viagens não está ordenada corretamente,\n# então precisamos ordená-las manualmente\ngtfs_metrofor$stop_times &lt;- gtfs_metrofor$stop_times[\n  order(trip_id, stop_sequence)\n]\ntraj_metrofor &lt;- gtfstools::get_trip_geometry(\n  gtfs_metrofor,\n  trip_id = viagens_corredores\n)\n\n# converte o trajeto em um dos sentidos da linha leste em geometria espacial\ntraj_linha_leste &lt;- gtfstools::convert_shapes_to_sf(\n  gtfs_linha_leste,\n  shape_id = \"LL_0\"\n)\n\n# nomeia cada uma das linhas e une as tabelas\ntraj_linha_leste$corredor &lt;- \"Linha Leste\"\ntraj_metrofor$corredor &lt;- data.table::fcase(\n  traj_metrofor$trip_id == 4, \"Linha Oeste\",\n  traj_metrofor$trip_id == 34, \"Linha Sul\",\n  traj_metrofor$trip_id == 159, \"VLT\"\n)\n\ntraj_metrofor$origin_file &lt;- NULL\ntraj_metrofor$trip_id &lt;- NULL\ntraj_linha_leste$shape_id &lt;- NULL\n\ntraj_corredores &lt;- rbind(traj_metrofor, traj_linha_leste)\n\n# duplica a tabela, adiciona coluna identificando cada cenário e remove a linha\n# leste do cenário pré-implementação das mudanças\ntraj_corredores &lt;- rbind(traj_corredores, traj_corredores)\ntraj_corredores$cenario &lt;- rep(c(\"antes\", \"depois\"), each = 4)\ntraj_corredores &lt;- subset(\n  traj_corredores,\n  corredor != \"Linha Leste\" | cenario != \"antes\"\n)\n\nggplot() +\n  geom_sf(data = grade_fortaleza, fill = \"gray90\", color = NA) +\n  geom_sf(data = traj_corredores, aes(color = corredor)) +\n  scale_color_manual(\n    name = \"Corredor\",\n    values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")\n  ) +\n  facet_wrap(\n    ~ cenario,\n    nrow = 1, \n    labeller = as_labeller(c(antes = \"Antes\", depois = \"Depois\"))\n  ) +\n  theme_void()\n\n\n\n\n\n\n\nFigura 6.6: Distribuição dos corredores de transporte de média e alta capacidade em Fortaleza por cenário de transporte\n\n\n\n\n\nPodemos, então, analisar a distribuição espacial dos níveis de acessibilidade nos cenários antes e depois, bem como a diferença de acessibilidade entre eles. Para isso, temos que juntar as estimativas de acessibilidade com a grade espacial da nossa área de estudo. Primeiro, para a acessibilidade a empregos, como mostrado a seguir.\n\n# une os dados de acessibilidade com a grade espacial de fortaleza e os converte\n# em objetos espaciais\nacesso_a_empregos &lt;- merge(\n  acesso_a_empregos,\n  grade_fortaleza,\n  by.x = \"id\",\n  by.y = \"id_hex\"\n)\nacesso_a_empregos_sf &lt;- sf::st_sf(acesso_a_empregos)\n\n# configura mapas da distribuição de acessibilidade nos cenários antes e depois\ndist_acesso &lt;- ggplot() +\n  geom_sf(\n    data = acesso_a_empregos_sf,\n    aes(fill = acesso_a_empregos),\n    color = NA\n  ) +\n  facet_wrap(\n    ~ cenario,\n    nrow = 1,\n    labeller = as_labeller(c(antes = \"Antes\", depois = \"Depois\"))\n  ) +\n  scale_fill_viridis_c(\n    option = \"inferno\",\n    label = scales::label_number(scale = 1 / 1000)\n  ) +\n  labs(fill = \"Empregos\\nacessíveis\\n(em milhares)\", color = \"Corredores\") +\n  geom_sf(\n    data = traj_corredores,\n    aes(color = corredor),\n    alpha = 0.8,\n    show.legend = FALSE\n  ) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  theme_void() +\n  theme(legend.key.size = unit(0.4, \"cm\"))\n\n# configura mapa de diferença entre cenários\ndist_diferenca &lt;- ggplot() +\n  geom_sf(\n    data = subset(acesso_a_empregos_sf, !is.na(diferenca)),\n    aes(fill = diferenca),\n    color = NA\n  ) +\n  scale_fill_viridis_c(\n    option = \"cividis\",\n    label = scales::label_number(scale = 1 / 1000)\n  ) +\n  labs(\n    fill = \"Diferença de\\nempregos\\nacessíveis\\n(em milhares)\",\n    color=\"Corredores\"\n  ) +\n  geom_sf(data = traj_corredores, aes(color = corredor), alpha = 0.8) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  theme_void() +\n  theme(legend.key.size = unit(0.4, \"cm\"))\n\n# combina as duas figuras\ndist_acesso / dist_diferenca + plot_layout(ncol = 1, heights = c(1, 1))\n\n\n\n\n\n\n\nFigura 6.7: Distribuição espacial dos níveis de acessibilidade ao emprego por cenário de transporte e da diferença entre eles\n\n\n\n\n\nA Figura 6.7 mostra que as regiões que mais se beneficiam das mudanças no sistema de transportes são aquelas afastadas do centro da cidade, mas que ainda se encontram próximas a estações de média e alta capacidade. Os ganhos de acessibilidade ao emprego se concentram principalmente próximos às estações dos corredores das linhas Sul e Oeste do metrô e, em menor medida, em torno de algumas estações do corredor de VLT Parangaba-Mucuripe. Mesmo regiões próximas a esses corredores, embora não imediatamente adjacentes a eles, mostram grandes ganhos de acessibilidade, ressaltando o papel da conectividade da rede na garantia de boas condições de acessibilidade. Por sua vez, a região no entorno da linha Leste, que já concentrava os maiores níveis de acessibilidade da cidade mesmo antes da implementação do novo corredor, apresenta melhora nas condições de acessibilidade muito menos expressiva.\nOs mapas de distribuição do tempo de acesso até a escola de nível médio mais próxima, no entanto, apresentam uma situação diferente, como mostrado a seguir.\n\n# une os dados de tempo de acesso com a grade espacial de fortaleza e os\n# converte em objetos espaciais\ntempo_a_escolas &lt;- merge(\n  tempo_a_escolas,\n  grade_fortaleza,\n  by.x = \"id\",\n  by.y = \"id_hex\"\n)\ntempo_a_escolas_sf &lt;- sf::st_sf(tempo_a_escolas)\n\n# configura mapas da distribuição de tempo a escolas nos cenários antes e depois\ndist_tempo &lt;- ggplot() +\n  geom_sf(data = tempo_a_escolas_sf, aes(fill = travel_time_p50), color = NA) +\n  facet_wrap(\n    ~ cenario,\n    nrow = 1,\n    labeller = as_labeller(c(antes = \"Antes\", depois = \"Depois\"))\n  ) +\n  scale_fill_viridis_c(option = \"plasma\", direction = -1) +\n  labs(fill = \"Tempo até\\n a escola\\nmais próxima\\n(em minutos)\") +\n  geom_sf(\n    data = traj_corredores,\n    aes(color = corredor),\n    alpha = 0.8,\n    show.legend = FALSE\n  ) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  theme_void() +\n  theme(legend.key.size = unit(0.4, \"cm\"))\n\n# configura mapa de diferença entre cenários\ndist_dif_tempo &lt;- ggplot() +\n  geom_sf(\n    data = subset(tempo_a_escolas_sf, !is.na(diferenca)),\n    aes(fill = diferenca),\n    color = NA\n  ) +\n  scale_fill_viridis_c(option = \"viridis\", direction = -1) +\n  labs(\n    fill = \"Diferença no\\ntempo até\\n a escola\\nmais próxima\\n(em minutos)\"\n  ) +\n  geom_sf(data = traj_corredores, aes(color = corredor), alpha = 0.8) +\n  scale_color_manual(values = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\")) +\n  theme_void() +\n  theme(legend.key.size = unit(0.4, \"cm\"))\n\n# combina as duas figuras\ndist_tempo / dist_dif_tempo + plot_layout(ncol = 1, heights = c(1, 1))\n\n\n\n\n\n\n\nFigura 6.8: Distribuição espacial dos tempos de acesso à escola pública de nível médio mais próxima por cenário de transporte e da diferença entre eles\n\n\n\n\n\nA linha Leste e as mudanças de frequência nas outras linhas do metrô e do VLT praticamente não alteram o panorama da acessibilidade a escolas de nível médio em Fortaleza, o que faz com que pouquíssimos hexágonos apresentem algum tipo de ganho de acessibilidade entre os dois cenários - apenas alguns poucos nas imediações de estações de metrô apresentam alguma redução no tempo de acesso a escolas. Como podemos ver, a distribuição da acessibilidade a escolas na cidade segue um padrão muito menos concêntrico que o da distribuição da acessibilidade a empregos. Novamente, isso é uma consequência da distribuição de escolas públicas na cidade: ao contrário da distribuição de empregos, que tende a seguir critérios econômico-financeiros, a distribuição de equipamentos públicos no Brasil tende a seguir critérios equitativos, buscando priorizar regiões periféricas e de maior concentração de grupos populacionais vulneráveis. Mesmo antes da implementação das mudanças no sistema de transportes, áreas com baixíssima acessibilidade ao emprego, como a região no extremo sul da cidade, já possuíam boas condições de acessibilidade a escolas públicas de nível médio. No entanto, o grau de sucesso das políticas de educação em promover um acesso equitativo pode variar muito entre cidades e para diferentes níveis de ensino, como infantil ou fundamental (Saraiva et al. 2023).",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Comparando a acessibilidade entre dois cenários de transporte</span>"
    ]
  },
  {
    "objectID": "6_cenarios_transporte.html#desigualdade-de-acessibilidade",
    "href": "6_cenarios_transporte.html#desigualdade-de-acessibilidade",
    "title": "6  Comparando a acessibilidade entre dois cenários de transporte",
    "section": "6.6 Desigualdade de acessibilidade",
    "text": "6.6 Desigualdade de acessibilidade\nUma dimensão-chave para a avaliação de políticas de transporte está relacionada aos seus aspectos distributivos. Quem são os principais beneficiados e prejudicados por essas políticas? Sob uma perspectiva de equidade, espera-se que políticas governamentais priorizem melhorar as condições de acessibilidade das pessoas em piores condições socioeconômicas e que mais dependem do transporte público (Pereira, Schwanen, e Banister 2017; van Wee 2022).\nNesta seção, vamos examinar como os ganhos de acessibilidade ao emprego decorrentes da construção da linha Leste e do aumento das frequências das linhas do metrô e do VLT estão distribuídos entre pessoas de diferentes níveis de renda. Para isso, precisamos entender como era a distribuição do nível de acesso a empregos entre a população em 2019, antes das mudanças no sistema de transportes, e como ela passará a ser após implementadas essas mudanças. Com o código a seguir, utilizamos a informação do decil de renda per capita em que cada célula da nossa grade espacial se encontra para entender a distribuição dos níveis de acessibilidade entre grupos socioeconômicos antes e depois das mudanças.\n\nggplot(data = acesso_a_empregos[populacao &gt; 0]) +\n  geom_boxplot(\n    aes(\n      x = as.factor(decil),\n      y = acesso_a_empregos / 1000,\n      color = as.factor(decil),\n      weight = populacao,\n      group = decil\n    ),\n    show.legend = FALSE\n  ) +\n  facet_wrap(\n    ~ cenario,\n    nrow = 1,\n    labeller = as_labeller(c(antes = \"Antes\", depois = \"Depois\"))\n  ) +\n  scale_colour_brewer(palette = \"RdBu\") +\n  labs(x = \"Decil de renda\", y = \"Empregos acessíveis (em milhares)\") +\n  scale_x_discrete(\n    labels = c(\"D1\\nmais\\npobres\", paste0(\"D\", 2:9), \"D10\\nmais\\nricos\")\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 6.9: Distribuição dos níveis de acessibilidade ao emprego entre decis de renda por cenário de transporte\n\n\n\n\n\nA Figura 6.9 mostra claramente que as pessoas mais ricas de Fortaleza possuem maiores níveis de acesso a empregos do que seus pares mais pobres, tanto antes quanto depois das mudanças no sistema de transportes. Em Fortaleza, assim como na maior parte das grandes cidades brasileiras, os mais ricos tendem a morar próximo às grandes concentrações de emprego e do centro da cidade, enquanto os mais pobres tendem a ocupar regiões periféricas (Pereira et al. 2022). Consequentemente, os mais ricos costumam ter melhores condições de acessibilidade urbana do que os mais pobres. Não apenas porque moram mais perto dos empregos, mas também porque, geralmente, moram em regiões centrais mais bem servidas de transporte público do que as periferias.\nEntretanto, é difícil enxergar na Figura 6.9 grandes mudanças nas condições de acessibilidade entre os dois cenários. Lançando mão do mesmo recurso que usamos anteriormente, apresentamos na Figura 6.10 como os ganhos de acessibilidade entre os cenários se distribuem por decil de renda.\n\nggplot(subset(acesso_a_empregos, populacao &gt; 0 & !is.na(diferenca))) +\n  geom_boxplot(\n    aes(\n      x = as.factor(decil),\n      y = diferenca / 1000,\n      color = as.factor(decil),\n      weight = populacao,\n      group = decil\n    ),\n    show.legend = FALSE\n  ) +\n  scale_colour_brewer(palette = \"RdBu\") +\n  labs(\n    x = \"Decil de renda\",\n    y = \"Diferença da quantidade de\\nempregos acessíveis (em milhares)\"\n  ) +\n  scale_x_discrete(\n    labels = c(\"D1\\nmais\\npobres\", paste0(\"D\", 2:9), \"D10\\nmais\\nricos\")\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 6.10: Distribuição da diferença dos níveis de acessibilidade ao emprego entre cenários de transporte\n\n\n\n\n\nComo podemos ver, a distribuição de ganhos de acessibilidade segue o formato de U-invertido, com maiores ganhos entre as camadas médias da população e menores entre as camadas mais ricas e mais pobres. A célula na qual houve maior aumento de acessibilidade aparece como outlier do oitavo decil, apresentando um ganho de quase 200.000 empregos em relação ao cenário antes das mudanças.\nGráficos como os das últimas duas figuras não são os mais simples de comunicar, exatamente por serem ricos em nuances e interpretações. Visando facilitar essa comunicação, medidas sintéticas de desigualdade são frequentemente utilizadas como uma maneira simples de medir o impacto de políticas de transporte sobre a desigualdade de acessibilidade. Esse tipo de medida busca resumir a distribuição dos níveis de acessibilidade entre grupos populacionais (aqui, decis de renda) em um único indicador que facilite a compreensão dos resultados e que possa ser usado, por exemplo, na elaboração de planos e metas. As medidas de desigualdade mais frequentemente utilizadas na literatura de acessibilidade são a Razão de Palma e o Índice de Gini (Lucas, van Wee, e Maat 2016; Guzman e Oviedo 2018; Pritchard et al. 2019).\nNesse exemplo, vamos calcular a Razão de Palma dos cenários antes e depois das mudanças. Essa medida é o resultado da divisão da acessibilidade média dos 10% mais ricos pela acessibilidade média dos 40% mais pobres:\n\\[P = \\frac{\\overline{A_{tp10}}}{\\overline{A_{bt40}}}\\]\nem que \\(P\\) é a Razão de Palma, \\(\\overline{A_{tp10}}\\) é a acessibilidade média dos 10% mais ricos e \\(\\overline{A_{bt40}}\\) é a acessibilidade média dos 40% mais pobres.\n\n\n\n\n\n\nPor que usar a Razão de Palma?\n\n\n\n\n\nUma das vantagens da Razão de Palma frente ao Índice de Gini é a sua facilidade de comunicação e interpretação. Valores maiores do que 1 indicam um cenário em que os ricos possuem níveis médios de acessibilidade maiores do que os dos pobres, e valores menores do que 1, a situação inversa. Outra vantagem da Razão de Palma é que ela reflete claramente como a desigualdade varia entre dois grupos de especial interesse para nós: os mais privilegiados e os mais vulneráveis de uma população. O Índice de Gini, por sua vez, estima o quanto uma distribuição desvia de uma situação hipotética em que todos possuem o mesmo nível de acesso, mas nada diz sobre as condições socioeconômicas daqueles que detêm os maiores e menores níveis de acessibilidade. Se uma determinada política aumenta os níveis de acessibilidades de pessoas de alta renda que moram em locais de baixa acessibilidade, por exemplo, o Índice de Gini indicaria que houve uma diminuição da desigualdade, mesmo que nenhuma população vulnerável tenha se beneficiado dessa política. Dificilmente uma política como essa poderia ser considerada equitativa.\n\n\n\nAo calcularmos a Razão de Palma nos cenários antes e depois da implementação da linha Leste e das mudanças de frequência das linhas de metrô e VLT, conseguimos entender o impacto dessas políticas na desigualdade de acesso a empregos em Fortaleza:\n\n# calcula a acessibilidade média dos mais ricos nos dois cenários\nacesso_mais_ricos &lt;- acesso_a_empregos[\n  decil == 10,\n  .(acesso = weighted.mean(acesso_a_empregos, w = as.numeric(populacao))),\n  by = cenario\n]\n\n# calcula a acessibilidade média dos mais pobres nos dois cenários\nacesso_mais_pobres &lt;- acesso_a_empregos[\n  decil %in% 1:4,\n  .(acesso = weighted.mean(acesso_a_empregos, w = as.numeric(populacao))),\n  by = cenario\n]\n\n# combina a acessibilidade dos mais ricos e mais pobres\nrazao_de_palma &lt;- merge(\n  acesso_mais_ricos,\n  acesso_mais_pobres,\n  by = \"cenario\",\n  suffixes = c(\"_mais_ricos\", \"_mais_pobres\")\n)\n\n# calculando Razão de Palma\nrazao_de_palma[, palma := acesso_mais_ricos / acesso_mais_pobres]\n\nggplot(data = razao_de_palma, aes(x = cenario, y = palma)) +\n  geom_col(fill = \"#0d6556\") +\n  geom_text(\n    aes(label = formatC(palma, digits = 2, decimal.mark = \",\", format = \"f\")),\n    vjust = 1.5,\n    color = \"white\",\n    size = 10\n  ) +\n  scale_y_continuous(\n    name = \"Razão de Palma\",\n    labels = scales::label_number(decimal.mark = \",\")\n  ) +\n  scale_x_discrete(name = \"Cenário\", labels = c(\"Antes\", \"Depois\")) +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 6.11: Razão de Palma da acessibilidade ao emprego em Fortaleza por cenário de transporte\n\n\n\n\n\nA Figura 6.11 aponta que em 2019 a população mais rica de Fortaleza conseguia acessar, em média, 2,17 vezes mais empregos do que a população mais pobre em até sessenta minutos por transporte público. Ela também mostra que a desigualdade medida pela Razão de Palma sofreu uma pequena queda entre os cenários pré e pós-intervenções. Ou seja, podemos concluir que, nesse nosso cenário simplificado de avaliação da linha Leste, a política de expansão do metrô de Fortaleza combinada com o aumento da frequência das linhas Sul e Oeste do metrô e do VLT seria progressiva. Em outras palavras, essas mudanças, quando analisadas sem considerar as demais intervenções previstas no Pasfor, contribuem para a redução da desigualdade de acesso a oportunidades de emprego em Fortaleza.\n\n\n\n\n\n\nÉ importante lembrar que a avaliação apresentada neste capítulo considera um cenário de intervenção simplificado para fins didáticos. Para uma avaliação mais completa da linha Leste do metrô de Fortaleza e das mudanças previstas no Pasfor, que também considera alterações nas linhas de ônibus da cidade, conferir o trabalho de Braga et al. (2022).\n\n\n\nNeste capítulo, focamos na avaliação do impacto de uma política de transporte sobre as condições de acessibilidade da população. Vale ressaltar, no entanto, que a avaliação completa de uma política pública deve considerar também critérios como a participação social em sua formulação, além de outros possíveis impactos ambientais, econômicos e sociais. Embora uma avaliação de impacto de acessibilidade seja muito importante para identificar quais grupos se beneficiam de uma política de transporte e entender como essa política impacta o desempenho do sistema de transportes como um todo, esse tipo de análise é apenas uma dimensão de avaliação e deve complementar ou ser complementada por outras análises.\n\n\n\n\nBraga, Carlos Kaue Vieira, Diego Bogado Tomasiello, Daniel Herszenhut, João Lucas Albuquerque Oliveira, e Rafael H. M. Pereira. 2022. «Impactos da expansão do metrô de Fortaleza sobre o acesso a oportunidades de emprego, saúde e educação». {Texto para Discuss\\~ao} 2767. Instituto de Pesquisa Econômica Aplicada (Ipea).\n\n\nGuzman, Luis A., e Daniel Oviedo. 2018. «Accessibility, Affordability and Equity: Assessing “Pro-Poor” Public Transport Subsidies in Bogotá». Transport Policy 68 (setembro): 37–51. https://doi.org/10.1016/j.tranpol.2018.04.012.\n\n\nLucas, Karen, Bert van Wee, e Kees Maat. 2016. «A Method to Evaluate Equitable Accessibility: Combining Ethical Theories and Accessibility-Based Approaches». Transportation 43 (3): 473–90. https://doi.org/10.1007/s11116-015-9585-2.\n\n\nPereira, Rafael H. M., Carlos Kauê Vieira Braga, Daniel Herszenhut, Marcus Saraiva, e Diego Bogado Tomasiello. 2022. «Estimativas de acessibilidade a empregos e serviços públicos via transporte ativo, público e privado nas 20 maiores cidades do Brasil em 2017, 2018, 2019». Texto para Discussão IPEA 2800.\n\n\nPereira, Rafael H. M., Tim Schwanen, e David Banister. 2017. «Distributive Justice and Equity in Transportation». Transport Reviews 37 (2): 170–91. https://doi.org/10.1080/01441647.2016.1257660.\n\n\nPritchard, John P., Diego Tomasiello, Mariana Giannotti, e Karst Geurs. 2019. «An International Comparison of Equity in Accessibility to Jobs: London, São Paulo and the Randstad». Findings, fevereiro. https://doi.org/10.32866/7412.\n\n\nSaraiva, Marcus, Luiz Pedro Silva, Carlos Kauê Vieira Braga, e Rafael Henrique Moraes Pereira. 2023. «Transporte urbano e insuficiência de acesso a escolas no Brasil». {Texto para Discuss\\~ao} 2854. Instituto de Pesquisa Econômica Aplicada (Ipea).\n\n\nvan Wee, Bert. 2022. «Accessibility and Equity: A Conceptual Framework and Research Agenda». Journal of Transport Geography 104 (outubro): 103421. https://doi.org/10.1016/j.jtrangeo.2022.103421.",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Comparando a acessibilidade entre dois cenários de transporte</span>"
    ]
  },
  {
    "objectID": "6_cenarios_transporte.html#footnotes",
    "href": "6_cenarios_transporte.html#footnotes",
    "title": "6  Comparando a acessibilidade entre dois cenários de transporte",
    "section": "",
    "text": "Disponível em https://www.pasfor.com.br/.↩︎\nUma avaliação mais completa, que leva em consideração todas as mudanças previstas no Pasfor, pode ser encontrada em Braga et al. (2022).↩︎\nPara mais detalhes, conferir a descrição da tabela frequencies no Capítulo 4).↩︎\nMais detalhes sobre o pacote são apresentados na Seção 5.↩︎",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Comparando a acessibilidade entre dois cenários de transporte</span>"
    ]
  },
  {
    "objectID": "7_aopdata_populacao.html",
    "href": "7_aopdata_populacao.html",
    "title": "7  Dados de população e socioeconômicos",
    "section": "",
    "text": "7.1 Mapa de população total\nNo código a seguir, carregamos bibliotecas de visualização de dados e configuramos o mapa. Com um comando, podemos visualizar a distribuição espacial da população de Fortaleza. A Figura 7.1 mostra um mapa coroplético no qual a cor de cada célula da grade espacial é preenchida com base na quantidade total de pessoas que ali residem (variável P001).\nlibrary(patchwork)\nlibrary(ggplot2)\n\nggplot(subset(dados_fortaleza, P001 &gt; 0)) +\n  geom_sf(aes(fill = P001), color = NA, alpha = 0.8) +\n  scale_fill_distiller(palette = \"YlOrRd\", direction = 1) +\n  labs(fill = \"Contagem\\npopulacional\") +\n  theme_void()\n\n\n\n\n\n\n\nFigura 7.1: Distribuição populacional em Fortaleza",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Dados de população e socioeconômicos</span>"
    ]
  },
  {
    "objectID": "7_aopdata_populacao.html#mapa-de-população-por-cor",
    "href": "7_aopdata_populacao.html#mapa-de-população-por-cor",
    "title": "7  Dados de população e socioeconômicos",
    "section": "7.2 Mapa de população por cor",
    "text": "7.2 Mapa de população por cor\nAlém da informação sobre a população total em cada célula, os dados também informam a contagem populacional por classificações de cor (variáveis P002 a P005), sexo (variáveis P006 e P007) e faixa etária (variáveis P010 a P016) em cada unidade espacial. O código a seguir ilustra como é simples calcular a proporção de pessoas negras e brancas em cada hexágono e visualizar essas proporções em um mapa.\n\npop_negra &lt;- ggplot(subset(dados_fortaleza, P001 &gt; 0)) +\n  geom_sf(aes(fill = P003 / P001), color = NA, alpha = 0.8) +\n  scale_fill_distiller(\n    name = NULL,\n    palette = \"RdPu\",\n    direction = 1,\n    labels = scales::percent,\n    limits = c(0, 1)\n  ) +\n  labs(title = \"Proporção de pessoas negras\") +\n  theme_void()\n\npop_branca &lt;- ggplot(subset(dados_fortaleza, P001 &gt; 0)) +\n  geom_sf(aes(fill = P002 / P001), color = NA, alpha = 0.8) +\n  scale_fill_distiller(\n    name = NULL,\n    palette = \"YlGnBu\",\n    direction = 1,\n    labels = scales::percent,\n    limits = c(0, 1)\n  ) +\n  labs(title = \"Proporção de pessoas brancas\") +\n  theme_void()\n\npop_negra + pop_branca\n\n\n\n\n\n\n\nFigura 7.2: Proporção de pessoas negras e brancas em Fortaleza",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Dados de população e socioeconômicos</span>"
    ]
  },
  {
    "objectID": "7_aopdata_populacao.html#mapa-de-população-por-renda",
    "href": "7_aopdata_populacao.html#mapa-de-população-por-renda",
    "title": "7  Dados de população e socioeconômicos",
    "section": "7.3 Mapa de população por renda",
    "text": "7.3 Mapa de população por renda\nPor fim, os dados também trazem informações sobre a renda per capita média de cada hexágono (R001) e sua classificação em termos de quintil (R002) e decil de renda (R003). Com esses dados, podemos visualizar a distribuição espacial dos níveis de renda na cidade.\n\nrenda &lt;- ggplot(subset(dados_fortaleza, P001 &gt; 0)) +\n  geom_sf(aes(fill = R001), color = NA, alpha = 0.8) +\n  scale_fill_distiller(name = NULL, palette = \"YlOrRd\", direction = 1) +\n  labs(title = \"Renda per capita média (R$)\") +\n  theme_void()\n\ndecis &lt;- ggplot(subset(dados_fortaleza, !is.na(R002))) +\n  geom_sf(aes(fill = factor(R003)), color = NA, alpha = 0.8) +\n  scale_fill_brewer(name = NULL, palette = \"RdBu\") +\n  labs(title = \"Decis de renda per capita\") +\n  theme_void() +\n  theme(legend.key.size = unit(0.3, \"cm\"))\n\nrenda + decis\n\n\n\n\n\n\n\nFigura 7.3: Distribuição de renda em Fortaleza",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Dados de população e socioeconômicos</span>"
    ]
  },
  {
    "objectID": "8_aopdata_uso_solo.html",
    "href": "8_aopdata_uso_solo.html",
    "title": "8  Dados de distribuição espacial de oportunidades",
    "section": "",
    "text": "8.1 Mapa de empregos\nNo código adiante, carregamos bibliotecas de visualização de dados e configuramos o mapa. As variáveis iniciadas com a letra T são as que descrevem a distribuição espacial de empregos em cada cidade. A seguir, apresentamos a distribuição espacial do total de empregos em cada hexágono (variável T001) em Belo Horizonte:\nlibrary(patchwork)\nlibrary(ggplot2)\n\nggplot(dados_bh) +\n  geom_sf(aes(fill = T001), color = NA, alpha = 0.9) +\n  scale_fill_distiller(palette = \"YlGnBu\", direction = 1) +\n  labs(fill = \"Contagem\\nde empregos\") +\n  theme_void()\n\n\n\n\n\n\n\nFigura 8.1: Distribuição espacial de empregos em Belo Horizonte",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Dados de distribuição espacial de oportunidades</span>"
    ]
  },
  {
    "objectID": "8_aopdata_uso_solo.html#mapa-de-escolas",
    "href": "8_aopdata_uso_solo.html#mapa-de-escolas",
    "title": "8  Dados de distribuição espacial de oportunidades",
    "section": "8.2 Mapa de escolas",
    "text": "8.2 Mapa de escolas\nAs variáveis que indicam o número de escolas públicas em cada célula, por sua vez, começam com a letra E. No exemplo a seguir, apresentamos a distribuição espacial de todas as escolas públicas de Belo Horizonte (variável E001).\n\nggplot(dados_bh) +\n  geom_sf(aes(fill = as.factor(E001)), color = NA, alpha = 0.9) +\n  scale_fill_brewer(palette = \"YlGnBu\", direction = 1) +\n  labs(fill = \"Contagem\\nde escolas\") +\n  theme_void()\n\n\n\n\n\n\n\nFigura 8.2: Distribuição espacial de escolas em Belo Horizonte",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Dados de distribuição espacial de oportunidades</span>"
    ]
  },
  {
    "objectID": "8_aopdata_uso_solo.html#mapa-de-estabelecimentos-de-saúde",
    "href": "8_aopdata_uso_solo.html#mapa-de-estabelecimentos-de-saúde",
    "title": "8  Dados de distribuição espacial de oportunidades",
    "section": "8.3 Mapa de estabelecimentos de saúde",
    "text": "8.3 Mapa de estabelecimentos de saúde\nAs variáveis que contêm os dados dos estabelecimentos públicos de saúde em cada célula começam com a letra S. A visualização a seguir compara a distribuição espacial de estabelecimentos públicos de saúde de baixa complexidade (S002) e de alta complexidade (S004).\n\nsaude_baixa &lt;- ggplot(dados_bh) +\n  geom_sf(aes(fill = as.factor(S002)), color = NA, alpha = 0.9) +\n  scale_fill_brewer(palette = \"YlGnBu\", direction = 1, limits = factor(0:4)) +\n  labs(title = \"Baixa complexidade\", fill = \"Contagem de\\nestabelecimentos\") +\n  theme_void()\n\nsaude_alta &lt;- ggplot(dados_bh) +\n  geom_sf(aes(fill = as.factor(S004)), color = NA, alpha = 0.9) +\n  scale_fill_brewer(palette = \"YlGnBu\", direction = 1, limits = factor(0:4)) +\n  labs(title = \"Alta complexidade\", fill = \"Contagem de\\nestabelecimentos\") +\n  theme_void()\n\nsaude_baixa + saude_alta + plot_layout(guides = \"collect\")\n\n\n\n\n\n\n\nFigura 8.3: Distribuição espacial de estabelecimentos de saúde de baixa e alta complexidade em Belo Horizonte",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Dados de distribuição espacial de oportunidades</span>"
    ]
  },
  {
    "objectID": "8_aopdata_uso_solo.html#mapa-de-cras",
    "href": "8_aopdata_uso_solo.html#mapa-de-cras",
    "title": "8  Dados de distribuição espacial de oportunidades",
    "section": "8.4 Mapa de CRAS",
    "text": "8.4 Mapa de CRAS\nPor fim, a variável C001 descreve a distribuição espacial de CRAS em cada cidade. A Figura 8.4 apresenta essa distribuição em Belo Horizonte.\n\nggplot(dados_bh) +\n  geom_sf(aes(fill = as.factor(C001)), color = NA, alpha = 0.9) +\n  scale_fill_brewer(palette = \"YlGnBu\", direction = 1) +\n  labs(fill = \"Contagem\\nde CRAS\") +\n  theme_void()\n\n\n\n\n\n\n\nFigura 8.4: Distribuição espacial de CRAS em Belo Horizonte",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Dados de distribuição espacial de oportunidades</span>"
    ]
  },
  {
    "objectID": "9_aopdata_acessibilidade.html",
    "href": "9_aopdata_acessibilidade.html",
    "title": "9  Estimativas de acessibilidade",
    "section": "",
    "text": "9.1 Mapa do tempo para acessar o hospital mais próximo\nNeste exemplo, comparamos o tempo de acesso por automóvel e por transporte público até o hospital mais próximo de cada hexágono. Para analisar o tempo mínimo de viagem (TMI) até hospitais de alta complexidade (SA), utilizamos a variável TMISA. Com o código a seguir, carregamos as bibliotecas de visualização de dados e apresentamos a distribuição espacial do tempo de acesso com os dois modos de transporte. Como os tempos de viagem por transporte público costumam ser muito mais longos do que por automóvel, truncamos a distribuição dos valores da variável em sessenta minutos.\nlibrary(ggplot2)\nlibrary(patchwork)\n\n# trunca os tempos de viagem em 60 minutos\ndados_sp$TMISA &lt;- ifelse(dados_sp$TMISA &gt; 60, 60, dados_sp$TMISA)\n\nggplot(subset(dados_sp, !is.na(mode))) +\n  geom_sf(aes(fill = TMISA), color = NA, alpha = 0.9) +\n  scale_fill_viridis_c(\n    option = \"cividis\",\n    direction = -1,\n    breaks = seq(0, 60, 10),\n    labels = c(seq(0, 50, 10), \"60+\")\n  ) +\n  labs(fill = \"Tempo (em\\nminutos)\") +\n  facet_wrap(\n    ~ mode,\n    labeller = as_labeller(\n      c(car = \"Carro\", public_transport = \"Transporte público\")\n    )\n  ) +\n  theme_void()\n\n\n\n\n\n\n\nFigura 9.1: Tempo de viagem até o hospital de alta complexidade mais próximo em São Paulo",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Estimativas de acessibilidade</span>"
    ]
  },
  {
    "objectID": "9_aopdata_acessibilidade.html#mapa-da-quantidade-de-empregos-acessíveis",
    "href": "9_aopdata_acessibilidade.html#mapa-da-quantidade-de-empregos-acessíveis",
    "title": "9  Estimativas de acessibilidade",
    "section": "9.2 Mapa da quantidade de empregos acessíveis",
    "text": "9.2 Mapa da quantidade de empregos acessíveis\nOs dados do {aopdata} também tornam muito simples a comparação da quantidade de oportunidades acessíveis em diferentes tempos de viagem. Com o código a seguir, por exemplo, ilustramos como visualizar lado a lado as distribuições espaciais do número de empregos acessíveis em até sessenta e noventa minutos de viagem, respectivamente, por transporte público.\n\n# estabelece valores usados na legenda do mapa\nlimites_legenda &lt;- c(0, max(acesso_tp$CMATT90, na.rm = TRUE) / 1000000)\n\n# configura os mapas\n\nfig60 &lt;- ggplot(subset(acesso_tp, !is.na(mode))) +\n  geom_sf(aes(fill = CMATT60 / 1000000), color = NA, alpha = 0.9) +\n  scale_fill_viridis_c(option = \"inferno\", limits = limites_legenda) +\n  labs(\n    subtitle = \"Até sessenta minutos de viagem\",\n    fill = \"Empregos\\n(em milhões)\"\n  ) +\n  theme_void()\n\nfig90 &lt;- ggplot(subset(acesso_tp, !is.na(mode))) +\n  geom_sf(aes(fill = CMATT90 / 1000000), color = NA, alpha = 0.9) +\n  scale_fill_viridis_c(option = \"inferno\", limits = limites_legenda) +\n  labs(\n    subtitle = \"Até noventa minutos de viagem\",\n    fill = \"Empregos\\n(em milhões)\"\n  ) +\n  theme_void()\n\nfig60 + fig90 + plot_layout(guides = \"collect\")\n\n\n\n\n\n\n\nFigura 9.2: Quantidade de empregos acessíveis por transporte público em São Paulo",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Estimativas de acessibilidade</span>"
    ]
  },
  {
    "objectID": "9_aopdata_acessibilidade.html#desigualdades-de-acesso-a-oportunidades",
    "href": "9_aopdata_acessibilidade.html#desigualdades-de-acesso-a-oportunidades",
    "title": "9  Estimativas de acessibilidade",
    "section": "9.3 Desigualdades de acesso a oportunidades",
    "text": "9.3 Desigualdades de acesso a oportunidades\nExistem diversas maneiras de analisar quão desiguais são as condições de acesso a oportunidades nas cidades brasileiras a partir dos dados do {aopdata}. Nesta subseção, apresentamos três exemplos deste tipo de análise.\n\n9.3.1 Desigualdade no tempo de acesso a oportunidades\nNeste primeiro exemplo, vamos comparar o tempo médio de viagem até o hospital público mais próximo de pessoas de diferentes níveis de renda. Para isso, calculamos o tempo médio de acesso a estabelecimentos de saúde de alta complexidade ponderado pela população de cada célula da nossa grade espacial. Essa ponderação é necessária porque cada célula, por abrigar um número de pessoas diferente das demais, contribui de forma diferente para a média da população como um todo.\nAntes de realizar o cálculo, cabe observar que algumas células da cidade não conseguem acessar nenhum hospital em até duas horas de viagem. Nesses casos, o valor das variáveis de tempo mínimo de viagem é infinito (Inf). Para lidar com isso, neste exemplo substituímos todos os valores Inf por um tempo de viagem de 120 minutos.\n\n# copia os dados de acesso em um novo dataframe\ndesigualdade_tp &lt;- data.table::as.data.table(acesso_tp)\n\n# substitui os valores Inf por 120\ndesigualdade_tp[, TMISA := ifelse(is.infinite(TMISA), 120, TMISA)]\n\n# calcula o tempo de viagem médio por decil de renda\ndesigualdade_tp &lt;- desigualdade_tp[\n  ,\n  .(media = weighted.mean(x = TMISA, w = P001, na.rm = TRUE)),\n  by = R003\n]\ndesigualdade_tp &lt;- subset(desigualdade_tp, !is.na(media))\n\nggplot(desigualdade_tp) +\n  geom_col(aes(y = media, x = factor(R003)), fill = \"#2c9e9e\", color = NA) +\n  scale_x_discrete(\n    labels = c(\"D1\\nmais\\npobres\", paste0(\"D\", 2:9), \"D10\\nmais\\nricos\")\n  ) +\n  labs(x = \"Decil de renda\", y = \"Tempo de viagem (em minutos)\") +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 9.3: Média de tempo de viagem por transporte público em São Paulo até o hospital mais próximo\n\n\n\n\n\n\n\n9.3.2 Desigualdade no número de oportunidades acessíveis\nOutra maneira de examinar a desigualdade de acesso a oportunidades é comparar a quantidade de oportunidades acessíveis por diferentes grupos populacionais considerando os mesmos modos de transporte e limites de tempo de viagem. Nesse caso, analisamos o indicador de acessibilidade cumulativa ativa, representado por variáveis cujos códigos começam com CMA na base de dados do {aopdata}. No exemplo a seguir, comparamos a quantidade de empregos acessíveis por pessoas de diferentes decis de renda, considerando viagens de transporte público limitadas em sessenta minutos de viagem.\n\nggplot(subset(acesso_tp, !is.na(R003))) +\n  geom_boxplot(\n    aes(x = factor(R003), y = CMATT60 / 1000000, color = factor(R003))\n  ) +\n  scale_color_brewer(palette = \"RdBu\") +\n  labs(\n    color = \"Decil\\nde renda\",\n    x = \"Decil de renda\",\n    y = \"Empregos acessíveis (em milhões)\"\n  ) +\n  scale_x_discrete(\n    labels = c(\"D1\\nmais\\npobres\", paste0(\"D\", 2:9), \"D10\\nmais\\nricos\")\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\nFigura 9.4: Distribuição do número de empregos acessíveis por transporte público em São Paulo\n\n\n\n\n\nPor fim, podemos também comparar como o uso de diferentes modos de transporte resulta em diferentes níveis de acessibilidade para a população e como essa diferença varia entre cidades. No exemplo a seguir, comparamos a quantidade de empregos acessíveis em até trinta minutos de viagem a pé e de carro. Para isso, precisamos primeiro baixar os dados de acessibilidade por ambos os modos para todas as cidades do projeto.\n\ndados_carro &lt;- aopdata::read_access(\n  city = \"all\",\n  mode = \"car\",\n  year = 2019,\n  showProgress = FALSE\n)\n\ndados_caminhada &lt;- aopdata::read_access(\n  city = \"all\",\n  mode = \"walk\",\n  year = 2019,\n  showProgress = FALSE\n)\n\nEm seguida, calculamos para cada cidade e para cada modo de transporte a média ponderada do número de empregos acessíveis em até trinta minutos (CMATT30). Feito isso, juntamos essas estimativas em uma única tabela e calculamos a razão entre os níveis de acessibilidade por carro e os níveis de acessibilidade a pé.\n\n# calcula a média de empregos acessíveis em 30 minutos\n\nmedia_carro &lt;- dados_carro[\n  ,\n  .(acesso_carro = weighted.mean(CMATT30, w = P001, na.rm = TRUE)),\n  by = name_muni\n]\n\nmedia_caminhada &lt;- dados_caminhada[\n  ,\n  .(acesso_caminhada = weighted.mean(CMATT30, w = P001, na.rm = TRUE)),\n  by = name_muni\n]\n\n# junta os dados e calcula a razão entre o nível de acesso por carro e a pé\nmedia_acesso &lt;- merge(media_carro, media_caminhada)\nmedia_acesso[, razao := acesso_carro / acesso_caminhada]\n\nhead(media_acesso)\n\n        name_muni acesso_carro acesso_caminhada    razao\n1:          Belem     155270.4         9392.235 16.53179\n2: Belo Horizonte     529890.0        12464.233 42.51284\n3:       Brasilia     220575.9         4110.703 53.65892\n4:       Campinas     256333.1         6748.923 37.98133\n5:   Campo Grande     172680.5         4181.209 41.29919\n6:       Curitiba     494376.9        10471.135 47.21331\n\n\nFinalmente, podemos visualizar os resultados graficamente:\n\nggplot(media_acesso, aes(x = razao, y = reorder(name_muni, razao))) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(x = razao + 3 , label = paste0(round(razao), \"x\"))) +\n  labs(y = NULL, x = \"Razão entre a acessibilidade de carro e a pé\") +\n  theme_classic()\n\n\n\n\n\n\n\nFigura 9.5: Diferença entre a quantidade de empregos acessíveis por automóvel e por caminhada em até trinta minutos de viagem nas vinte maiores cidades do Brasil\n\n\n\n\n\nComo esperado, a Figura 9.5 mostra que é possível acessar muito mais empregos em até 30 minutos com viagens de carro do que com viagens a pé. Essa diferença, porém, varia muito entre cidades. Em São Paulo e em Brasília, viagens de automóvel de até trinta minutos permitem acessar, em média, um número de empregos 54 vezes maior do que viagens a pé de mesma duração. Em Belém, onde observamos a menor diferença, o automóvel permite acessar 17 vezes mais empregos do que a caminhada - razão ainda considerável, porém menor do que a das demais cidades.",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Estimativas de acessibilidade</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Referências bibliográficas",
    "section": "",
    "text": "Anda, Cuauhtemoc, Alexander Erath, and Pieter Jacobus Fourie. 2017.\n“Transport Modelling in the Age of Big Data.”\nInternational Journal of Urban Sciences 21 (sup1): 19–42. https://doi.org/10.1080/12265934.2017.1281150.\n\n\nArbex, Renato, and Claudio B. Cunha. 2020. “Estimating the\nInfluence of Crowding and Travel Time Variability on Accessibility to\nJobs in a Large Public Transport Network Using Smart Card Big\nData.” Journal of Transport Geography 85 (May): 102671.\nhttps://doi.org/10.1016/j.jtrangeo.2020.102671.\n\n\nBanister, David. 2008. “The Sustainable Mobility Paradigm.”\nTransport Policy 15 (2): 73–80. https://doi.org/10.1016/j.tranpol.2007.10.005.\n\n\n———. 2011. “The Trilogy of Distance, Speed and Time.”\nJournal of Transport Geography 19 (4): 950–59. https://doi.org/10.1016/j.jtrangeo.2010.12.004.\n\n\nBarrington-Leigh, Christopher, and Adam Millard-Ball. 2017. “The\nWorld’s User-Generated Road Map Is More Than 80% Complete.”\nPLOS ONE 12 (8): e0180698. https://doi.org/10.1371/journal.pone.0180698.\n\n\nBertolini, L., F. le Clercq, and L. Kapoen. 2005. “Sustainable\nAccessibility: A Conceptual Framework to Integrate Transport and Land\nUse Plan-Making. Two Test-Applications in the\nNetherlands and a Reflection on the Way Forward.”\nTransport Policy 12 (3): 207–20. https://doi.org/10.1016/j.tranpol.2005.01.006.\n\n\nBoisjoly, Geneviève, and Ahmed M. El-Geneidy. 2017. “How to Get\nThere? A Critical Assessment of Accessibility Objectives\nand Indicators in Metropolitan Transportation Plans.”\nTransport Policy 55 (April): 38–50. https://doi.org/10.1016/j.tranpol.2016.12.011.\n\n\nBraga, Carlos Kaue Vieira, Diego Bogado Tomasiello, Daniel Herszenhut,\nJoão Lucas Albuquerque Oliveira, and Rafael H. M. Pereira. 2022.\n“Impactos da expansão do metrô de Fortaleza sobre o acesso a\noportunidades de emprego, saúde e educação.” {Texto para\nDiscuss\\~ao} 2767. Instituto de Pesquisa Econômica Aplicada\n(Ipea).\n\n\nBrodsky, Isaac. 2018. “H3: Uber’s Hexagonal\nHierarchical Spatial Index.” Uber Engineering\nBlog. https://eng.uber.com/h3/.\n\n\nBüttner, Benjamin. 2021. “Accessibility Tools for\nTransport Policy and Planning.” In\nInternational Encyclopedia of\nTransportation, edited by Roger Vickerman, 83–86.\nOxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10618-9.\n\n\nCamboim, Silvana Philippi, João Vitor Meza Bravo, and Claudia Robbi\nSluter. 2015. “An Investigation into the\nCompleteness of, and the Updates to,\nOpenStreetMap Data in a Heterogeneous Area in\nBrazil.” ISPRS International Journal of\nGeo-Information 4 (3): 1366–88. https://doi.org/10.3390/ijgi4031366.\n\n\nCervero, Robert. 2005. “Accessible Cities and\nRegions: A Framework for Sustainable\nTransport and Urbanism in the 21st\nCentury.” Center for Future Urban Transport\nWorking Paper, no. UCB-ITS-VWP-2005-3 (August).\n\n\nChurch, A, M Frost, and K Sullivan. 2000. “Transport and Social\nExclusion in London.” Transport Policy 7\n(3): 195–205. https://doi.org/10.1016/S0967-070X(00)00024-X.\n\n\nConway, Matthew Wigginton, Andrew Byrd, and Marco van der Linden. 2017.\n“Evidence-Based Transit and Land Use Sketch\nPlanning Using Interactive Accessibility Methods on\nCombined Schedule and Headway-Based\nNetworks.” Transportation Research Record: Journal of\nthe Transportation Research Board 2653 (1): 45–53. https://doi.org/10.3141/2653-06.\n\n\nDijst, Martin, Tom de Jong, and Jan Ritsema van Eck. 2002.\n“Opportunities for Transport Mode Change: An\nExploration of a Disaggregated Approach.”\nEnvironment and Planning B: Planning and Design 29 (3): 413–30.\nhttps://doi.org/10.1068/b12811.\n\n\nDong, Xiaojing, Moshe E. Ben-Akiva, John L. Bowman, and Joan L. Walker.\n2006. “Moving from Trip-Based to Activity-Based Measures of\nAccessibility.” Transportation Research Part A: Policy and\nPractice 40 (2): 163–80. https://doi.org/10.1016/j.tra.2005.05.002.\n\n\nEl-Geneidy, Ahmed, David Levinson, Ehab Diab, Genevieve Boisjoly, David\nVerbich, and Charis Loong. 2016. “The Cost of Equity:\nAssessing Transit Accessibility and Social Disparity Using\nTotal Travel Cost.” Transportation Research Part A: Policy\nand Practice 91 (September): 302–16. https://doi.org/10.1016/j.tra.2016.07.003.\n\n\nFarrington, John, and Conor Farrington. 2005. “Rural\nAccessibility, Social Inclusion and Social Justice: Towards\nConceptualisation.” Journal of Transport Geography 13\n(1): 1–12. https://doi.org/10.1016/j.jtrangeo.2004.10.002.\n\n\nGeurs, Karst, and Bert van Wee. 2004. “Accessibility Evaluation of\nLand-Use and Transport Strategies: Review and Research\nDirections.” Journal of Transport Geography 12 (2):\n127–40. https://doi.org/10.1016/j.jtrangeo.2003.10.005.\n\n\nGuzman, Luis A., and Daniel Oviedo. 2018. “Accessibility,\nAffordability and Equity: Assessing ‘Pro-Poor’\nPublic Transport Subsidies in Bogotá.” Transport\nPolicy 68 (September): 37–51. https://doi.org/10.1016/j.tranpol.2018.04.012.\n\n\nHerszenhut, Daniel, Rafael H. M. Pereira, Licinio da Silva Portugal, and\nMatheus Henrique de Sousa Oliveira. 2022. “The Impact of Transit\nMonetary Costs on Transport Inequality.” Journal of Transport\nGeography 99 (February): 103309. https://doi.org/10.1016/j.jtrangeo.2022.103309.\n\n\nHiggins, Christopher, Matthew Palm, Amber DeJohn, Luna Xi, James\nVaughan, Steven Farber, Michael Widener, and Eric Miller. 2022.\n“Calculating Place-Based Transit Accessibility:\nMethods, Tools and Algorithmic Dependence.”\nJournal of Transport and Land Use 15 (1). https://doi.org/10.5198/jtlu.2022.2012.\n\n\nKandt, Jens, and Michael Batty. 2021. “Smart Cities, Big Data and\nUrban Policy: Towards Urban Analytics for the Long\nRun.” Cities 109 (February): 102992. https://doi.org/10.1016/j.cities.2020.102992.\n\n\nKim, Hyun-Mi, and Mei-Po Kwan. 2003. “Space-Time Accessibility\nMeasures: A Geocomputational Algorithm with a Focus on the\nFeasible Opportunity Set and Possible Activity Duration.”\nJournal of Geographical Systems 5 (1): 71–91. https://doi.org/10.1007/s101090300104.\n\n\nLevine, Jonathan, Joe Grengs, and Louis A. Merlin. 2019. From\nMobility to Accessibility: Transforming Urban\nTransportation and Land-Use Planning. Cornell University\nPress.\n\n\nLevinson, David, and David King. 2020. Transport Access Manual:\nA Guide for Measuring Connection Between People and\nPlaces. Committee of the Transport Access Manual, University\nof Sydney.\n\n\nLucas, Karen, Giulio Mattioli, Ersilia Verlinghieri, and Alvaro Guzman.\n2016. “Transport Poverty and Its Adverse Social\nConsequences.” Proceedings of the Institution of Civil\nEngineers - Transport 169 (6): 353–65. https://doi.org/10.1680/jtran.15.00073.\n\n\nLucas, Karen, Bert van Wee, and Kees Maat. 2016. “A Method to\nEvaluate Equitable Accessibility: Combining Ethical Theories and\nAccessibility-Based Approaches.” Transportation 43 (3):\n473–90. https://doi.org/10.1007/s11116-015-9585-2.\n\n\nLuo, Wei, and Fahui Wang. 2003. “Measures of Spatial\nAccessibility to Health Care in a GIS\nEnvironment: Synthesis and a Case Study\nin the Chicago Region.” Environment and Planning\nB: Planning and Design 30 (6): 865–84. https://doi.org/10.1068/b29120.\n\n\nLuz, Gregório, and Licinio Portugal. 2022. “Understanding\nTransport-Related Social Exclusion Through the Lens of Capabilities\nApproach.” Transport Reviews 42 (4): 503–25. https://doi.org/10.1080/01441647.2021.2005183.\n\n\nMartens, Karel. 2012. “Justice in Transport as Justice in\nAccessibility: Applying Walzer’s\n‘Spheres of Justice’ to the\nTransport Sector.” Transportation 39 (6): 1035–53. https://doi.org/10.1007/s11116-012-9388-7.\n\n\nMcHugh, Bibiana. 2013. “Pioneering Open Data\nStandards: The GTFS Story.” In Beyond\nTransparency: Open Data and the\nFuture of Civic Innovation, edited by\nBrett Goldstein and Lauren Dyson, First, 125–35. San Francisco,\nCA: Code for America Press.\n\n\nMiller, Eric J. 2018. “Accessibility: Measurement and Application\nin Transportation Planning.” Transport Reviews 38 (5):\n551–55. https://doi.org/10.1080/01441647.2018.1492778.\n\n\nNeutens, Tijs, Tim Schwanen, Frank Witlox, and Philippe De Maeyer. 2010.\n“Equity of Urban Service Delivery: A\nComparison of Different Accessibility\nMeasures.” Environment and Planning A: Economy and\nSpace 42 (7): 1613–35. https://doi.org/10.1068/a4230.\n\n\nPaez, Antonio, Christopher D. Higgins, and Salvatore F. Vivona. 2019.\n“Demand and Level of Service Inflation in Floating Catchment\nArea (FCA) Methods.” Edited by Tayyab Ikram\nShah. PLOS ONE 14 (6): e0218773. https://doi.org/10.1371/journal.pone.0218773.\n\n\nPáez, Antonio, Darren M. Scott, and Catherine Morency. 2012.\n“Measuring Accessibility: Positive and Normative Implementations\nof Various Accessibility Indicators.” Journal of Transport\nGeography 25 (November): 141–53. https://doi.org/10.1016/j.jtrangeo.2012.03.016.\n\n\nPapa, Enrica, Cecilia Silva, Marco Te Brömmelstroet, and Angela Hull.\n2015. “Accessibility Instruments for Planning Practice: A Review\nof European Experiences.” Journal of Transport\nand Land Use, June. https://doi.org/10.5198/jtlu.2015.585.\n\n\nPereira, Rafael H. M., Pedro R. Andrade, and João Pedro Bazzo Vieira.\n2022. “Exploring the Time Geography of Public Transport Networks\nwith the Gtfs2gps Package.” Journal of Geographical\nSystems, December. https://doi.org/10.1007/s10109-022-00400-x.\n\n\nPereira, Rafael H. M., Carlos Kaue Vieira Braga, Bernardo Serra, and\nVanessa Nadalin. 2019. “Desigualdades socioespaciais de\nacesso a oportunidades nas cidades brasileiras, 2019.”\n{Texto para Discuss\\~ao} 2535. Instituto de Pesquisa Econômica\nAplicada (Ipea).\n\n\nPereira, Rafael H. M., Carlos Kauê Vieira Braga, Daniel Herszenhut,\nMarcus Saraiva, and Diego Bogado Tomasiello. 2022.\n“Estimativas de acessibilidade a empregos e serviços\npúblicos via transporte ativo, público e privado nas 20 maiores cidades\ndo Brasil em 2017, 2018, 2019.” Texto para Discussão\nIPEA 2800.\n\n\nPereira, Rafael H. M., Daniel Herszenhut, Carlos Kauê Vieira Braga, João\nPedro Bazzo, João Lucas Albuquerque Oliveira, João Pedro Parga, Marcus\nSaraiva, Luiz Pedro Silva, Lucas Warwar, and Diego Bogado Tomasiello.\n2022. “Distribuição espacial de características\nsociodemográficas e localização de empregos e serviços públicos das\nvinte maiores cidades do Brasil.” Texto para Discussão\nIPEA 2772 (June): 28. https://doi.org/10.38116/td2772.\n\n\nPereira, Rafael H. M., and Alex Karner. 2021. “Transportation\nEquity.” In International\nEncyclopedia of Transportation, edited by\nRoger Vickerman, 271–77. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10053-3.\n\n\nPereira, Rafael H. M., Marcus Saraiva, Daniel Herszenhut, Carlos Kaue\nVieira Braga, and Matthew Wigginton Conway. 2021. “R5r:\nRapid Realistic Routing on Multimodal Transport\nNetworks with R5 in\nR.” Transport Findings, March, 21262. https://doi.org/10.32866/001c.21262.\n\n\nPereira, Rafael H. M., Tim Schwanen, and David Banister. 2017.\n“Distributive Justice and Equity in Transportation.”\nTransport Reviews 37 (2): 170–91. https://doi.org/10.1080/01441647.2016.1257660.\n\n\nPritchard, John P., Diego Tomasiello, Mariana Giannotti, and Karst\nGeurs. 2019. “An International Comparison of\nEquity in Accessibility to Jobs:\nLondon, São Paulo and the\nRandstad.” Findings, February. https://doi.org/10.32866/7412.\n\n\nSaraiva, Marcus, Luiz Pedro Silva, Carlos Kauê Vieira Braga, and Rafael\nHenrique Moraes Pereira. 2023. “Transporte urbano e\ninsuficiência de acesso a escolas no Brasil.” {Texto para\nDiscuss\\~ao} 2854. Instituto de Pesquisa Econômica Aplicada\n(Ipea).\n\n\nSilva, Cecília, Luca Bertolini, Marco te Brömmelstroet, Dimitris\nMilakis, and Enrica Papa. 2017. “Accessibility Instruments in\nPlanning Practice: Bridging the Implementation Gap.”\nTransport Policy 53 (January): 135–45. https://doi.org/10.1016/j.tranpol.2016.09.006.\n\n\nvan Wee, Bert. 2021. “Transport Modes and\nAccessibility.” In International\nEncyclopedia of Transportation, edited by\nRoger Vickerman, 32–37. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10402-6.\n\n\n———. 2022. “Accessibility and Equity: A Conceptual\nFramework and Research Agenda.” Journal of Transport\nGeography 104 (October): 103421. https://doi.org/10.1016/j.jtrangeo.2022.103421.\n\n\nVasconcellos, Eduardo Alcantara. 2018. “Urban Transport Policies\nin Brazil: The Creation of a Discriminatory\nMobility System.” Journal of Transport Geography 67\n(February): 85–91. https://doi.org/10.1016/j.jtrangeo.2017.08.014.\n\n\nVenter, Christoffel. 2016. “Assessing the Potential of Bus Rapid\nTransit-Led Network Restructuring for Enhancing Affordable Access to\nEmployment The Case of Johannesburg’s\nCorridors of Freedom.” Research in\nTransportation Economics 59 (November): 441–49. https://doi.org/10.1016/j.retrec.2016.05.006.",
    "crumbs": [
      "Referências bibliográficas"
    ]
  },
  {
    "objectID": "s1_intro.html",
    "href": "s1_intro.html",
    "title": "SEÇÃO 1: Introdução à acessibilidade urbana",
    "section": "",
    "text": "Os objetivos desta seção são: (i) apresentar o conceito de acessibilidade urbana, esclarecendo a diferença entre acessibilidade e mobilidade; e (ii) apresentar uma visão geral dos principais indicadores usados para medir níveis de acessibilidade.\nQuantos postos de trabalho uma pessoa em um determinado local consegue alcançar em até uma hora de viagem usando transporte público? Quanto tempo essa pessoa leva para chegar até o posto de saúde ou a escola mais próxima de sua casa? As respostas a essas perguntas dependem diretamente das políticas locais de transporte e de desenvolvimento urbano. Essas políticas determinam os níveis de acessibilidade urbana em cada cidade, isto é, a facilidade com que cada indivíduo consegue acessar oportunidades de emprego, serviços de saúde e educação, atividades culturais e de lazer, entre outros tipos de atividade. A acessibilidade, portanto, é resultado da conectividade e da performance dos sistemas de transporte juntamente com a organização espacial das cidades em termos da distribuição populacional, de atividades econômicas e de serviços públicos em seus territórios. Promover um planejamento urbano e de transportes orientado para a promoção de melhores condições de acessibilidade pode contribuir para um desenvolvimento urbano mais sustentável e inclusivo. Ao longo desta seção, vamos entender com mais detalhes o conceito de acessibilidade urbana, por que ele é importante para analisarmos o funcionamento das cidades e quais os indicadores mais comumente utilizados para medir os níveis de acessibilidade.",
    "crumbs": [
      "SEÇÃO 1: Introdução à acessibilidade urbana"
    ]
  },
  {
    "objectID": "s2_calculo.html",
    "href": "s2_calculo.html",
    "title": "SEÇÃO 2: Como calcular acessibilidade urbana",
    "section": "",
    "text": "O objetivo desta seção é mostrar como calcular estimativas de acessibilidade urbana em R usando os pacotes {r5r} e {accessibility}.\nO cálculo dos níveis de acessibilidade em uma determinada área de estudo compreende duas etapas principais: primeiro, precisamos calcular uma matriz de custo de transporte, geralmente o tempo de viagem, entre as origens e os destinos que compõem a área de estudo; feito isso, calculamos a acessibilidade nos pontos de origem, considerando os custos de transporte entre cada par de origem e destino e o número de oportunidades em cada destino. Nesta seção, aprenderemos como executar essas duas etapas usando a linguagem de programação R. Também aprenderemos sobre os dados que são necessários para executá-las e sobre as vantagens e desvantagens dos diferentes métodos que podem ser usados para isso.",
    "crumbs": [
      "SEÇÃO 2: Como calcular acessibilidade urbana"
    ]
  },
  {
    "objectID": "s3_dados_tp.html",
    "href": "s3_dados_tp.html",
    "title": "SEÇÃO 3: Dados de transporte público",
    "section": "",
    "text": "Os objetivos desta seção são: i) apresentar o formato GTFS de dados de transporte público; ii) mostrar onde baixar dados GTFS de cidades brasileiras e do mundo; e iii) apresentar exemplos de como analisar e manipular dados de GTFS usando R.\nDados de transporte público são peças fundamentais no planejamento de transportes em geral e em análises de acessibilidade em particular. Para serem usados de forma que se tenha segurança no resultado das análises, esses dados precisam ser confiáveis e de simples inspeção e interpretação.\nTentando satisfazer esses critérios, cada vez mais agências de transporte público, tomadores de decisão e pesquisadores têm buscado utilizar dados estruturados conforme especificações abertas e colaborativas, ou seja, cujo formato seja definido por uma comunidade de atores interessados, incluindo partes que produzem esses dados (agências de transporte público, por exemplo) e que os consomem (pesquisadores, desenvolvedores de ferramentas de planejamento etc). Embora uma especificação aberta não necessariamente resolva o problema da qualidade e da confiabilidade dos dados por ela descritos, seu uso traz várias vantagens que promovem o compartilhamento de conhecimento e a transparência de análises e aplicações que dependem dessa especificação - fatores que, por sua vez, podem levar a substanciais ganhos de qualidade e confiança nos dados.\nO uso de um formato padrão de dados para transporte público permite o desenvolvimento e o compartilhamento de ferramentas e programas computacionais para análise desses dados, o que cria um campo comum de distribuição e aprendizado entre atores de diferentes cidades e países. Assim, um programa desenvolvido por uma agência de transporte no Brasil pode ser facilmente utilizado por um pesquisador nos Estados Unidos, por um desenvolvedor no Japão ou por outra agência de transporte na África do Sul - desde que, é claro, eles também organizem seus dados no mesmo formato. Além disso, quanto mais amplamente utilizado é esse formato, maior tende a ser tanto a confiabilidade na especificação em si quanto a facilidade de inspeção e interpretação dos seus dados, visto que múltiplos atores detêm o conhecimento necessário para isso.\nA especificação de dados aberta e colaborativa mais amplamente utilizada no contexto do planejamento de transporte público é o formato GTFS, sigla para General Transit Feed Specification (Especificação Geral de Redes de Transporte Público - tradução nossa). Seus usos abrangem tanto o planejamento quanto a operação de sistemas de transporte público. Como visto no Capítulo 3, os dados de GTFS também são uma peça fundamental para calcular estimativas de acessibilidade urbana por transporte público. Nesta seção, iremos aprender em mais detalhes o que são os dados GTFS, como eles são estruturados e como trabalhar com esses dados em R.",
    "crumbs": [
      "SEÇÃO 3: Dados de transporte público"
    ]
  },
  {
    "objectID": "s4_avaliacao_impacto.html",
    "href": "s4_avaliacao_impacto.html",
    "title": "SEÇÃO 4: Avaliação de impacto de projetos de transporte",
    "section": "",
    "text": "O objetivo desta seção é apresentar o passo a passo de um exemplo de avaliação do impacto de um projeto de infraestrutura de transportes sobre as condições de acessibilidade urbana locais usando R.\nEmbora análises de acessibilidade sejam frequentemente utilizadas na literatura científica há mais de duas décadas, apenas recentemente agências de transporte e tomadores de decisão começaram a focar em questões de acessibilidade urbana nas suas atividades de planejamento e operação de sistemas de transporte público (Papa et al. 2015; Boisjoly e El-Geneidy 2017). Em grande medida, isso é resultado da dificuldade de incorporar análises de acessibilidade a métodos de avaliação de projetos e a atividades de planejamento do dia a dia (Silva et al. 2017; Büttner 2021).\nNesta seção, usamos o projeto de expansão do metrô de Fortaleza como estudo de caso para ilustrar como realizar uma avaliação de impacto de projetos de infraestrutura de transporte sobre a acessibilidade urbana em R utilizando os pacotes apresentados nos capítulos anteriores. O Capítulo 6 apresenta um método tanto para medir o impacto de investimentos de transporte sobre o nível médio de acessibilidade da população quanto para investigar como esse impacto se distribui espacialmente e entre grupos socioeconômicos, afetando as desigualdades de acesso a oportunidades. A aplicação do método envolve o uso e a manipulação de diferentes arquivos GTFS, o cálculo de matrizes de tempo de viagem, a tomada de decisão por trás da escolha de qual medida de acessibilidade utilizar, a estimativa dos níveis de acessibilidade, a visualização espacial desses níveis e o cálculo e a análise de indicadores de desigualdade. Assim, esse estudo de caso engloba muitos dos pontos abordados neste livro e serve como uma aplicação prática dos conceitos até então apresentados.\nÉ importante mencionar que uma avaliação de projeto, investimento ou política pública deve abranger um grande leque de critérios de diferentes naturezas. Esses critérios vão desde aspectos de participação social na formulação das políticas e projetos até os seus impactos, considerando dimensões ambientais, econômicas, sociais, entre outras. Embora uma avaliação de impacto de acessibilidade seja muito importante para a caracterização dos potenciais benefícios e do desempenho de uma rede de transportes como um todo, ela oferece uma perspectiva limitada dos efeitos de uma dada política. Avaliações desse tipo devem, portanto, complementar e ser acompanhadas de outras análises que investiguem os demais impactos dos projetos mais a fundo.\n\n\n\n\nBoisjoly, Geneviève, e Ahmed M. El-Geneidy. 2017. «How to Get There? A Critical Assessment of Accessibility Objectives and Indicators in Metropolitan Transportation Plans». Transport Policy 55 (abril): 38–50. https://doi.org/10.1016/j.tranpol.2016.12.011.\n\n\nBüttner, Benjamin. 2021. «Accessibility Tools for Transport Policy and Planning». Em International Encyclopedia of Transportation, editado por Roger Vickerman, 83–86. Oxford: Elsevier. https://doi.org/10.1016/B978-0-08-102671-7.10618-9.\n\n\nPapa, Enrica, Cecilia Silva, Marco Te Brömmelstroet, e Angela Hull. 2015. «Accessibility Instruments for Planning Practice: A Review of European Experiences». Journal of Transport and Land Use, junho. https://doi.org/10.5198/jtlu.2015.585.\n\n\nSilva, Cecília, Luca Bertolini, Marco te Brömmelstroet, Dimitris Milakis, e Enrica Papa. 2017. «Accessibility Instruments in Planning Practice: Bridging the Implementation Gap». Transport Policy 53 (janeiro): 135–45. https://doi.org/10.1016/j.tranpol.2016.09.006.",
    "crumbs": [
      "SEÇÃO 4: Avaliação de impacto de projetos de transporte"
    ]
  },
  {
    "objectID": "s5_dados_aop.html#footnotes",
    "href": "s5_dados_aop.html#footnotes",
    "title": "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades",
    "section": "",
    "text": "As metodologias utilizadas para gerar esses dados são apresentadas em detalhe em publicações separadas para os dados populacionais e de uso do solo (Pereira, Herszenhut, et al. 2022) e para os dados de acessibilidade (Pereira, Braga, et al. 2022).↩︎\nO GTFS de Goiânia descreve a rede de transporte público não apenas do município, mas de toda a sua região metropolitana.↩︎\nDisponível em https://ipeagit.github.io/aopdata/articles/data_dic_pt.html.↩︎",
    "crumbs": [
      "SEÇÃO 5: Dados do Projeto Acesso a Oportunidades"
    ]
  }
]